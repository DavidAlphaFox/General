module Make0(M: General.Concepts.Number.S0)(E: sig
  val to_string: (M.t * string) list
  val equal: M.t list list
  val different: (M.t * M.t) list
  val of_string: (string * M.t) list
  val repr: (M.t * string) list
  val add_substract: (M.t * M.t * M.t) list
  val negate: (M.t * M.t) list
  val multiply: (M.t * M.t * M.t) list
  val divide: (M.t * M.t * M.t) list
  val exponentiate: (M.t * int * M.t) list
end): sig
  val test: General.Testing.Test.t
end

module Float: sig
  module Class
  module O
  type t = float
  val abs: float -> float
  val acos: float -> float
  val add: float -> float -> float
  val approx_equal: ?precision:float -> float -> float -> bool
  val asin: float -> float
  val atan: float -> float
  val atan2: y:float -> x:float -> float
  val between: float -> low:float -> high:float -> bool
  val between_or_equal: float -> low:float -> high:float -> bool
  val ceil: float -> float
  val compare: float -> float -> General.Compare.t
  val copy_sign: float -> sign:float -> float
  val cos: float -> float
  val cosh: float -> float
  val different: float -> float -> bool
  val divide: float -> float -> float
  val e: float
  val epsilon: float
  val equal: float -> float -> bool
  val exp: float -> float
  val expm1: float -> float
  val exponentiate: float -> int -> float
  val floor: float -> float
  val greater_or_equal: float -> float -> bool
  val greater_than: float -> float -> bool
  val greatest: float
  val hypot: float -> float -> float
  val infinity: float
  val less_or_equal: float -> float -> bool
  val less_than: float -> float -> bool
  val log: float -> float
  val log10: float -> float
  val log1p: float -> float
  val max: float -> float -> float
  val min: float -> float -> float
  val min_max: float -> float -> float * float
  val modulo: float -> float -> float
  val multiply: float -> float -> float
  val negate: float -> float
  val negative_infinity: float
  val not_a_number: float
  val of_float: float -> float
  val of_int: int -> float
  val of_parts: significand:float -> exponent:int -> float
  val of_string: string -> float
  val one: float
  val pi: float
  val repr: float -> string
  val sin: float -> float
  val sinh: float -> float
  val smallest: float
  val sqrt: float -> float
  val square: float -> float
  val subtract: float -> float -> float
  val tan: float -> float
  val tanh: float -> float
  val to_float: float -> float
  val to_fractional_and_integral: float -> float * float
  val to_int: float -> int
  val to_parts: float -> float * int
  val to_string: float -> string
  val try_of_string: string -> float option
  val zero: float
end

module Make0(M: General.Facets.Number.Tests.Testable.S0)(E: sig
  val additions: (M.t * M.t * M.t) list
  val conversions_from_float: (float * M.t) list
  val conversions_from_int: (int * M.t) list
  val conversions_from_string: (string * M.t) list
  val conversions_to_string: (M.t * string) list
  val differences: (M.t * M.t) list
  val divisions: (M.t * M.t * M.t) list
  val equalities: M.t list list
  val exponentiations: (M.t * int * M.t) list
  val module_name: string
  val multiplications: (M.t * M.t * M.t) list
  val negations: (M.t * M.t) list
  val representations: (M.t * string) list
  val unconvertible_strings: string list
  val values: M.t list
end): sig
  val test: General.Test.t
end

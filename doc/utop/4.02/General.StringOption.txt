module StringOption: sig
  type t = bytes option
  val filter: t -> f:(bytes -> bool) -> t
  val filter_map: t -> f:(bytes -> 'a option) -> 'a option
  val is_none: t -> bool
  val is_some: t -> bool
  val iter: t -> f:(bytes -> unit) -> unit
  val map: t -> f:(bytes -> 'a) -> 'a option
  val or_failure: ('a, unit, bytes, bytes, bytes, t -> bytes) format6 -> 'a
  val some_if: bool -> bytes lazy_t -> t
  val some_if': bool -> bytes -> t
  val value: ?exc:exn -> t -> bytes
  val value_def: t -> def:bytes -> bytes
  val value_map: t -> def:'a -> f:(bytes -> 'a) -> 'a
end

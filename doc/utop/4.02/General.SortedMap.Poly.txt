module Poly: sig
  type ('a, 'b) t
  val add: ('a, 'b) t -> k:'a -> v:'b -> bool * ('a, 'b) t
  val empty: ('a, 'b) t
  val get: ('a, 'b) t -> k:'a -> 'b
  val is_empty: ('a, 'b) t -> bool
  val of_list_first: ('a * 'b) list -> ('a, 'b) t
  val of_list_last: ('a * 'b) list -> ('a, 'b) t
  val of_list_reduce: ('a * 'b) list -> f:('a -> 'b -> 'b -> 'b) -> ('a, 'b) t
  val remove: ('a, 'b) t -> k:'a -> bool * ('a, 'b) t
  val replace: ('a, 'b) t -> k:'a -> v:'b -> ('a, 'b) t
  val singleton: k:'a -> v:'b -> ('a, 'b) t
  val size: ('a, 'b) t -> int
  val to_list: ('a, 'b) t -> ('a * 'b) list
  val try_get: ('a, 'b) t -> k:'a -> 'b option
end

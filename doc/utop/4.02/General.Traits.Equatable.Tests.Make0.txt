module Make0(M: sig
  module O: sig
    val (<>): t -> t -> bool
    val (=): t -> t -> bool
  end
  type t
  val different: t -> t -> bool
  val equal: t -> t -> bool
  val repr: t -> bytes
end)(E: sig
  val different: (M.t * M.t) list
  val equal: M.t list list
end): sig
  val test: General.Test.t
end

module Make1(M: sig
  type 'a t
  val different: 'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool
  val equal: 'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool
  val repr: 'a t -> repr_a:('a -> bytes) -> bytes
end)(E: sig
  module A: General.Traits.Equatable.Tests.Examples.Element
  val different: (A.t M.t * A.t M.t) list
  val equal: A.t M.t list list
end): sig
  val test: General.Test.t
end

{
  "__class__": "module",
  "name": "General",
  "hidden": false,
  "doc": [],
  "functor_parameters": [],
  "contents_from": null,
  "alias_of": null,
  "contents": [
    {
      "__class__": "floating_documentation",
      "hidden": false,
      "text": " Some doc for :mod:`General` "
    },
    {
      "__class__": "module",
      "name": "Pervasives",
      "hidden": false,
      "doc": [ " Some doc for :mod:`General.Pervasives` " ],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "include",
          "hidden": true,
          "doc": [],
          "contents_from": "module type of Foundations.ResetPervasives",
          "contents": [
            {
              "__class__": "exception",
              "name": "Exit",
              "hidden": false,
              "doc": [],
              "payload": null,
              "labels": []
            },
            {
              "__class__": "value",
              "name": "__LOC__",
              "hidden": false,
              "doc": [],
              "type": "string"
            },
            {
              "__class__": "value",
              "name": "__FILE__",
              "hidden": false,
              "doc": [],
              "type": "string"
            },
            {
              "__class__": "value",
              "name": "__LINE__",
              "hidden": false,
              "doc": [],
              "type": "int"
            },
            {
              "__class__": "value",
              "name": "__MODULE__",
              "hidden": false,
              "doc": [],
              "type": "string"
            },
            {
              "__class__": "value",
              "name": "__POS__",
              "hidden": false,
              "doc": [],
              "type": "string * int * int * int"
            },
            {
              "__class__": "value",
              "name": "__LOC_OF__",
              "hidden": false,
              "doc": [],
              "type": "'a -> string * 'a"
            },
            {
              "__class__": "value",
              "name": "__LINE_OF__",
              "hidden": false,
              "doc": [],
              "type": "'a -> int * 'a"
            },
            {
              "__class__": "value",
              "name": "__POS_OF__",
              "hidden": false,
              "doc": [],
              "type": "'a -> (string * int * int * int) * 'a"
            },
            {
              "__class__": "value",
              "name": "raise",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exception__raise ]"
            },
            {
              "__class__": "value",
              "name": "raise_notrace",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Exception__raise_without_backtrace ]"
            },
            {
              "__class__": "value",
              "name": "invalid_arg",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exception__invalid_argument ]"
            },
            {
              "__class__": "value",
              "name": "failwith",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exception__failure ]"
            },
            {
              "__class__": "value",
              "name": "(=)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Equate__Poly__equal ]"
            },
            {
              "__class__": "value",
              "name": "(<>)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Equate__Poly__different ]"
            },
            {
              "__class__": "value",
              "name": "(<)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Compare__Poly__less_than ]"
            },
            {
              "__class__": "value",
              "name": "(>)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Compare__Poly__greater_than ]"
            },
            {
              "__class__": "value",
              "name": "(<=)",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Compare__Poly__less_or_equal ]"
            },
            {
              "__class__": "value",
              "name": "(>=)",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Compare__Poly__greater_or_equal ]"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Compare__Poly__compare ]"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Compare__Poly__min ]"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Compare__Poly__max ]"
            },
            {
              "__class__": "value",
              "name": "(==)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Equate__Phys__equal ]"
            },
            {
              "__class__": "value",
              "name": "(!=)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Equate__Phys__different ]"
            },
            {
              "__class__": "value",
              "name": "not",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__not ]"
            },
            {
              "__class__": "value",
              "name": "(&&)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__and_ ]"
            },
            {
              "__class__": "value",
              "name": "(&)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__and_ ]"
            },
            {
              "__class__": "value",
              "name": "(||)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__or_ ]"
            },
            {
              "__class__": "value",
              "name": "(or)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__or_ ]"
            },
            {
              "__class__": "value",
              "name": "(|>)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Function1__rev_apply ]"
            },
            {
              "__class__": "value",
              "name": "(@@)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Function1__apply ]"
            },
            {
              "__class__": "value",
              "name": "(~-)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__negate ]"
            },
            {
              "__class__": "value",
              "name": "(~+)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Function1__identity ]"
            },
            {
              "__class__": "value",
              "name": "succ",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__succ ]"
            },
            {
              "__class__": "value",
              "name": "pred",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__pred ]"
            },
            {
              "__class__": "value",
              "name": "(+)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__add ]"
            },
            {
              "__class__": "value",
              "name": "(-)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__substract ]"
            },
            {
              "__class__": "value",
              "name": "(*)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__multiply ]"
            },
            {
              "__class__": "value",
              "name": "(/)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__divide ]"
            },
            {
              "__class__": "value",
              "name": "(mod)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__modulo ]"
            },
            {
              "__class__": "value",
              "name": "abs",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__abs ]"
            },
            {
              "__class__": "value",
              "name": "max_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__greatest ]"
            },
            {
              "__class__": "value",
              "name": "min_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__smallest ]"
            },
            {
              "__class__": "value",
              "name": "(land)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__Bitwise__logical_and ]"
            },
            {
              "__class__": "value",
              "name": "(lor)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__Bitwise__logical_or ]"
            },
            {
              "__class__": "value",
              "name": "(lxor)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__Bitwise__logical_xor ]"
            },
            {
              "__class__": "value",
              "name": "lnot",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__Bitwise__logical_not ]"
            },
            {
              "__class__": "value",
              "name": "(lsl)",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Int__Bitwise__logical_shift_left ]"
            },
            {
              "__class__": "value",
              "name": "(lsr)",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Int__Bitwise__logical_shift_right ]"
            },
            {
              "__class__": "value",
              "name": "(asr)",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Int__Bitwise__arithmetic_shift_right ]"
            },
            {
              "__class__": "value",
              "name": "(~-.)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__negate ]"
            },
            {
              "__class__": "value",
              "name": "(~+.)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Function1__identity ]"
            },
            {
              "__class__": "value",
              "name": "(+.)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__add ]"
            },
            {
              "__class__": "value",
              "name": "(-.)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__substract ]"
            },
            {
              "__class__": "value",
              "name": "(*.)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__multiply ]"
            },
            {
              "__class__": "value",
              "name": "(/.)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__divide ]"
            },
            {
              "__class__": "value",
              "name": "(**)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__exponentiate ]"
            },
            {
              "__class__": "value",
              "name": "sqrt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__sqrt ]"
            },
            {
              "__class__": "value",
              "name": "exp",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__exp ]"
            },
            {
              "__class__": "value",
              "name": "log",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__log ]"
            },
            {
              "__class__": "value",
              "name": "log10",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__log10 ]"
            },
            {
              "__class__": "value",
              "name": "expm1",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__expm1 ]"
            },
            {
              "__class__": "value",
              "name": "log1p",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__log1p ]"
            },
            {
              "__class__": "value",
              "name": "cos",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__cos ]"
            },
            {
              "__class__": "value",
              "name": "sin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__sin ]"
            },
            {
              "__class__": "value",
              "name": "tan",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__tan ]"
            },
            {
              "__class__": "value",
              "name": "acos",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__acos ]"
            },
            {
              "__class__": "value",
              "name": "asin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__asin ]"
            },
            {
              "__class__": "value",
              "name": "atan",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__atan ]"
            },
            {
              "__class__": "value",
              "name": "atan2",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__atan2 ]"
            },
            {
              "__class__": "value",
              "name": "hypot",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__hypot ]"
            },
            {
              "__class__": "value",
              "name": "cosh",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__cosh ]"
            },
            {
              "__class__": "value",
              "name": "sinh",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__sinh ]"
            },
            {
              "__class__": "value",
              "name": "tanh",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__tanh ]"
            },
            {
              "__class__": "value",
              "name": "ceil",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__ceil ]"
            },
            {
              "__class__": "value",
              "name": "floor",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__floor ]"
            },
            {
              "__class__": "value",
              "name": "abs_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__abs ]"
            },
            {
              "__class__": "value",
              "name": "copysign",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__copy_sign ]"
            },
            {
              "__class__": "value",
              "name": "mod_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__modulo ]"
            },
            {
              "__class__": "value",
              "name": "frexp",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__to_parts ]"
            },
            {
              "__class__": "value",
              "name": "ldexp",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__of_parts ]"
            },
            {
              "__class__": "value",
              "name": "modf",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Float__to_fractional_and_integral ]"
            },
            {
              "__class__": "value",
              "name": "float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__of_int ]"
            },
            {
              "__class__": "value",
              "name": "float_of_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__of_int ]"
            },
            {
              "__class__": "value",
              "name": "truncate",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__of_float ]"
            },
            {
              "__class__": "value",
              "name": "int_of_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__of_float ]"
            },
            {
              "__class__": "value",
              "name": "infinity",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__infinity ]"
            },
            {
              "__class__": "value",
              "name": "neg_infinity",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__negative_infinity ]"
            },
            {
              "__class__": "value",
              "name": "nan",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__not_a_number ]"
            },
            {
              "__class__": "value",
              "name": "max_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__smallest ]"
            },
            {
              "__class__": "value",
              "name": "min_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__greatest ]"
            },
            {
              "__class__": "value",
              "name": "epsilon_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__epsilon ]"
            },
            {
              "__class__": "type",
              "name": "fpclass",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "[ `Please_use_General__Float__Class__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "classify_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__Class__of_float ]"
            },
            {
              "__class__": "value",
              "name": "(^)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__String__concat ]"
            },
            {
              "__class__": "value",
              "name": "int_of_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Char__of_int ]"
            },
            {
              "__class__": "value",
              "name": "char_of_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Char__to_int ]"
            },
            {
              "__class__": "value",
              "name": "ignore",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Unit__ignore ]"
            },
            {
              "__class__": "value",
              "name": "string_of_bool",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__to_string ]"
            },
            {
              "__class__": "value",
              "name": "bool_of_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__of_string ]"
            },
            {
              "__class__": "value",
              "name": "bool_of_string_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__try_of_string ]"
            },
            {
              "__class__": "value",
              "name": "string_of_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__to_string ]"
            },
            {
              "__class__": "value",
              "name": "int_of_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__of_string ]"
            },
            {
              "__class__": "value",
              "name": "int_of_string_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__try_of_string ]"
            },
            {
              "__class__": "value",
              "name": "string_of_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__of_string ]"
            },
            {
              "__class__": "value",
              "name": "float_of_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__to_string ]"
            },
            {
              "__class__": "value",
              "name": "float_of_string_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__try_of_string ]"
            },
            {
              "__class__": "value",
              "name": "fst",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Tuple2__get_0 ]"
            },
            {
              "__class__": "value",
              "name": "snd",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Tuple2__get_1 ]"
            },
            {
              "__class__": "value",
              "name": "(@)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__List__concat ]"
            },
            {
              "__class__": "type",
              "name": "in_channel",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "[ `Please_use_General__InChannel__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "type",
              "name": "out_channel",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "[ `Please_use_General__OutChannel__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "stdin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdIn__channel ]"
            },
            {
              "__class__": "value",
              "name": "stdout",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__channel ]"
            },
            {
              "__class__": "value",
              "name": "stderr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__channel ]"
            },
            {
              "__class__": "value",
              "name": "print_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_bytes",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_endline",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_newline",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_bytes",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_endline",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_newline",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "read_line",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "read_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "read_int_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "read_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "read_float_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "type",
              "name": "open_flag",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "[ `Please_use_General__todo ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "open_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "open_out_bin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "open_out_gen",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "flush",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__flush ]"
            },
            {
              "__class__": "value",
              "name": "flush_all",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "output_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__print ]"
            },
            {
              "__class__": "value",
              "name": "output_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__print ]"
            },
            {
              "__class__": "value",
              "name": "output_bytes",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output_substring",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output_byte",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output_binary_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output_value",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "seek_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__seek ]"
            },
            {
              "__class__": "value",
              "name": "pos_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__pos ]"
            },
            {
              "__class__": "value",
              "name": "out_channel_length",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__size ]"
            },
            {
              "__class__": "value",
              "name": "close_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "close_out_noerr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "set_binary_mode_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "open_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "open_in_bin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "open_in_gen",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "input_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input_line",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "really_input",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "really_input_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input_byte",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input_binary_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input_value",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "seek_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__seek ]"
            },
            {
              "__class__": "value",
              "name": "pos_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__pos ]"
            },
            {
              "__class__": "value",
              "name": "in_channel_length",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__size ]"
            },
            {
              "__class__": "value",
              "name": "close_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "close_in_noerr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "set_binary_mode_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "module",
              "name": "LargeFile",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "seek_out",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__OutFile__seek ]"
                },
                {
                  "__class__": "value",
                  "name": "pos_out",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__OutFile__pos ]"
                },
                {
                  "__class__": "value",
                  "name": "out_channel_length",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__OutFile__size ]"
                },
                {
                  "__class__": "value",
                  "name": "seek_in",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__InFile__seek ]"
                },
                {
                  "__class__": "value",
                  "name": "pos_in",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__InFile__pos ]"
                },
                {
                  "__class__": "value",
                  "name": "in_channel_length",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__InFile__size ]"
                }
              ]
            },
            {
              "__class__": "type",
              "name": "ref",
              "hidden": false,
              "doc": [],
              "parameters": "'a",
              "private": false,
              "manifest": "[ `Please_use_General__Reference__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "ref",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Reference__of_contents ]"
            },
            {
              "__class__": "value",
              "name": "(!)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Reference__contents ]"
            },
            {
              "__class__": "value",
              "name": "(:=)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Reference__assign ]"
            },
            {
              "__class__": "value",
              "name": "incr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__IntReference__increment ]"
            },
            {
              "__class__": "value",
              "name": "decr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__IntReference__decrement ]"
            },
            {
              "__class__": "type",
              "name": "result",
              "hidden": false,
              "doc": [],
              "parameters": "('a, 'b)",
              "private": false,
              "manifest": "[ `Please_use_General__todo ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "type",
              "name": "format6",
              "hidden": false,
              "doc": [],
              "parameters": "('a, 'b, 'c, 'd, 'e, 'f)",
              "private": false,
              "manifest": "[ `Please_use_General__Format__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "type",
              "name": "format4",
              "hidden": false,
              "doc": [],
              "parameters": "('a, 'b, 'c, 'd)",
              "private": false,
              "manifest": "[ `Please_use_General__Format__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "type",
              "name": "format",
              "hidden": false,
              "doc": [],
              "parameters": "('a, 'b, 'c)",
              "private": false,
              "manifest": "[ `Please_use_General__Format__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "string_of_format",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Format__to_string ]"
            },
            {
              "__class__": "value",
              "name": "format_of_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Format__of_string ]"
            },
            {
              "__class__": "value",
              "name": "(^^)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Format__concat ]"
            },
            {
              "__class__": "value",
              "name": "exit",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exit__exit ]"
            },
            {
              "__class__": "value",
              "name": "at_exit",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exit__at_exit ]"
            },
            {
              "__class__": "value",
              "name": "valid_float_lexem",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Standard__OCamlStandard__Pervasives__valid_float_lexem ]"
            },
            {
              "__class__": "value",
              "name": "unsafe_really_input",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Standard__OCamlStandard__Pervasives__unsafe_really_input ]"
            },
            {
              "__class__": "value",
              "name": "do_at_exit",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Standard__OCamlStandard__Pervasives__do_at_exit ]"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": true,
          "doc": [],
          "contents_from": "module type of Foundations.ResetStandardLibrary",
          "contents": [
            {
              "__class__": "module",
              "name": "OCamlStandard",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Pervasives",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "raise",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "raise_notrace",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "invalid_arg",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "failwith",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> 'a"
                    },
                    {
                      "__class__": "exception",
                      "name": "Exit",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "min",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "max",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "(==)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(!=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "not",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(&&)",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(&)",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(||)",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(or)",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "__LOC__",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "__FILE__",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "__LINE__",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "__MODULE__",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "__POS__",
                      "hidden": false,
                      "doc": [],
                      "type": "string * int * int * int"
                    },
                    {
                      "__class__": "value",
                      "name": "__LOC_OF__",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> string * 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "__LINE_OF__",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> int * 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "__POS_OF__",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> (string * int * int * int) * 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "(|>)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a -> 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "(@@)",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "(~-)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(~+)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(+)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(-)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(*)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(/)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(mod)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "abs",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "max_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "min_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "(land)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(lor)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(lxor)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "lnot",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(lsl)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(lsr)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(asr)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(~-.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(~+.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(+.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(-.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(*.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(/.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(**)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "sqrt",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "exp",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "log",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "log10",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "expm1",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "log1p",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "cos",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "sin",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "tan",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "acos",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "asin",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "atan",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "atan2",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "hypot",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "cosh",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "sinh",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "tanh",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "ceil",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "floor",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "abs_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "copysign",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "mod_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "frexp",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float * int"
                    },
                    {
                      "__class__": "value",
                      "name": "ldexp",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "modf",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float * float"
                    },
                    {
                      "__class__": "value",
                      "name": "float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "truncate",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "infinity",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "neg_infinity",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "nan",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "max_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "min_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "epsilon_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "type",
                      "name": "fpclass",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "fpclass",
                      "kind":
                        "FP_normal | FP_subnormal | FP_zero | FP_infinite | FP_nan",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "FP_normal",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "FP_subnormal",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "FP_zero",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "FP_infinite",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "FP_nan",
                          "doc": [],
                          "payload": null
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "classify_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> fpclass"
                    },
                    {
                      "__class__": "value",
                      "name": "(^)",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "char_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "ignore",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_bool",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "bool_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "bool_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool option"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> float option"
                    },
                    {
                      "__class__": "value",
                      "name": "fst",
                      "hidden": false,
                      "doc": [],
                      "type": "'a * 'b -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "snd",
                      "hidden": false,
                      "doc": [],
                      "type": "'a * 'b -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "(@)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "type",
                      "name": "in_channel",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "in_channel",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "out_channel",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "out_channel",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "stdin",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "stdout",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "stderr",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "print_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_endline",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_endline",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "read_line",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "read_int",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "read_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "read_float",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "read_float_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float option"
                    },
                    {
                      "__class__": "type",
                      "name": "open_flag",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "open_flag",
                      "kind":
                        "Open_rdonly | Open_wronly | Open_append | Open_creat | Open_trunc | Open_excl | Open_binary | Open_text | Open_nonblock",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Open_rdonly",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_wronly",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_append",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_creat",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_trunc",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_excl",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_binary",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_text",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_nonblock",
                          "doc": [],
                          "payload": null
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "open_out",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "open_out_bin",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "open_out_gen",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "open_flag list -> int -> string -> out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "flush",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "flush_all",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_char",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_string",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_substring",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> string -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_byte",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_binary_int",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_value",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "seek_out",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pos_out",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "out_channel_length",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "close_out",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_out_noerr",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_binary_mode_out",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_in",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> in_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "open_in_bin",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> in_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "open_in_gen",
                      "hidden": false,
                      "doc": [],
                      "type": "open_flag list -> int -> string -> in_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "input_char",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "input_line",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "input",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> bytes -> int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "really_input",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "really_input_string",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "input_byte",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "input_binary_int",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "input_value",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "seek_in",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pos_in",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "in_channel_length",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "close_in",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_in_noerr",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_binary_mode_in",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> bool -> unit"
                    },
                    {
                      "__class__": "module",
                      "name": "LargeFile",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "seek_out",
                          "hidden": false,
                          "doc": [],
                          "type": "out_channel -> int64 -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "pos_out",
                          "hidden": false,
                          "doc": [],
                          "type": "out_channel -> int64"
                        },
                        {
                          "__class__": "value",
                          "name": "out_channel_length",
                          "hidden": false,
                          "doc": [],
                          "type": "out_channel -> int64"
                        },
                        {
                          "__class__": "value",
                          "name": "seek_in",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> int64 -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "pos_in",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> int64"
                        },
                        {
                          "__class__": "value",
                          "name": "in_channel_length",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> int64"
                        }
                      ]
                    },
                    {
                      "__class__": "type",
                      "name": "ref",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a ref",
                      "kind": "{mutable contents: 'a}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "contents",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "ref",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a ref"
                    },
                    {
                      "__class__": "value",
                      "name": "(!)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a ref -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "(:=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a ref -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "incr",
                      "hidden": false,
                      "doc": [],
                      "type": "int ref -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "decr",
                      "hidden": false,
                      "doc": [],
                      "type": "int ref -> unit"
                    },
                    {
                      "__class__": "type",
                      "name": "result",
                      "hidden": false,
                      "doc": [],
                      "parameters": "(+'a, +'b)",
                      "private": false,
                      "manifest": "('a, 'b) result",
                      "kind": "Ok of 'a | Error of 'b",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Ok",
                          "doc": [],
                          "payload": "'a"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Error",
                          "doc": [],
                          "payload": "'b"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "format6",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd, 'e, 'f)",
                      "private": false,
                      "manifest":
                        "('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.format6",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "format4",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd)",
                      "private": false,
                      "manifest": "('a, 'b, 'c, 'c, 'c, 'd) format6",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "format",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c)",
                      "private": false,
                      "manifest": "('a, 'b, 'c, 'c) format4",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_format",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b, 'c, 'd, 'e, 'f) format6 -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "format_of_string",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e, 'f) format6 -> ('a, 'b, 'c, 'd, 'e, 'f) format6"
                    },
                    {
                      "__class__": "value",
                      "name": "(^^)",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e, 'f) format6 ->\n('f, 'b, 'c, 'e, 'g, 'h) format6 -> ('a, 'b, 'c, 'd, 'g, 'h) format6"
                    },
                    {
                      "__class__": "value",
                      "name": "exit",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "at_exit",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "valid_float_lexem",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_really_input",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "do_at_exit",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Arg",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "spec",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Arg.spec",
                      "kind":
                        "Unit of unit -> unit | Bool of bool -> unit | Set of bool ref | Clear of bool ref | String of string -> unit | Set_string of string ref | Int of int -> unit | Set_int of int ref | Float of float -> unit | Set_float of float ref | Tuple of spec list | Symbol of string list * string -> unit | Rest of string -> unit | Expand of string -> string array",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Unit",
                          "doc": [],
                          "payload": "unit -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Bool",
                          "doc": [],
                          "payload": "bool -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Set",
                          "doc": [],
                          "payload": "bool ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Clear",
                          "doc": [],
                          "payload": "bool ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "String",
                          "doc": [],
                          "payload": "string -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Set_string",
                          "doc": [],
                          "payload": "string ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Int",
                          "doc": [],
                          "payload": "int -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Set_int",
                          "doc": [],
                          "payload": "int ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Float",
                          "doc": [],
                          "payload": "float -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Set_float",
                          "doc": [],
                          "payload": "float ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Tuple",
                          "doc": [],
                          "payload": "spec list"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Symbol",
                          "doc": [],
                          "payload": "string list * string -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Rest",
                          "doc": [],
                          "payload": "string -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Expand",
                          "doc": [],
                          "payload": "string -> string array"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "key",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "doc",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "usage_msg",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "anon_fun",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string -> unit",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "parse",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(key * spec * doc) list -> anon_fun -> usage_msg -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_dynamic",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(key * spec * doc) list ref -> anon_fun -> usage_msg -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_argv",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?current:int ref ->\nstring array -> (key * spec * doc) list -> anon_fun -> usage_msg -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_argv_dynamic",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?current:int ref ->\nstring array -> (key * spec * doc) list ref -> anon_fun -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_and_expand_argv_dynamic",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "int ref ->\nstring array ref -> (key * spec * doc) list ref -> anon_fun -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_expand",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(key * spec * doc) list -> anon_fun -> usage_msg -> unit"
                    },
                    {
                      "__class__": "exception",
                      "name": "Help",
                      "hidden": false,
                      "doc": [],
                      "payload": "string",
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Bad",
                      "hidden": false,
                      "doc": [],
                      "payload": "string",
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "usage",
                      "hidden": false,
                      "doc": [],
                      "type": "(key * spec * doc) list -> usage_msg -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "usage_string",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(key * spec * doc) list -> usage_msg -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "align",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?limit:int -> (key * spec * doc) list -> (key * spec * doc) list"
                    },
                    {
                      "__class__": "value",
                      "name": "current",
                      "hidden": false,
                      "doc": [],
                      "type": "int ref"
                    },
                    {
                      "__class__": "value",
                      "name": "read_arg",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array"
                    },
                    {
                      "__class__": "value",
                      "name": "read_arg0",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array"
                    },
                    {
                      "__class__": "value",
                      "name": "write_arg",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "write_arg0",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Array",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "create_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float array"
                    },
                    {
                      "__class__": "value",
                      "name": "make_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float array"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> (int -> 'a) -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "make_matrix",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> 'a -> 'a array array"
                    },
                    {
                      "__class__": "value",
                      "name": "create_matrix",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> 'a -> 'a array array"
                    },
                    {
                      "__class__": "value",
                      "name": "append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a array -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array list -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> int -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> int -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a array -> int -> 'a array -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "to_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "of_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a -> unit) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a array -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a -> 'b) -> 'a array -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> 'a) -> 'a -> 'b array -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right",
                      "hidden": false,
                      "doc": [],
                      "type": "('b -> 'a -> 'a) -> 'b array -> 'a -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "iter2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> unit) -> 'a array -> 'b array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c) -> 'a array -> 'b array -> 'c array"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "memq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "stable_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fast_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "ArrayLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> f:(int -> 'a) -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "make_matrix",
                      "hidden": false,
                      "doc": [],
                      "type": "dimx:int -> dimy:int -> 'a -> 'a array array"
                    },
                    {
                      "__class__": "value",
                      "name": "create_matrix",
                      "hidden": false,
                      "doc": [],
                      "type": "dimx:int -> dimy:int -> 'a -> 'a array array"
                    },
                    {
                      "__class__": "value",
                      "name": "append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a array -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array list -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> pos:int -> len:int -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> pos:int -> len:int -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:'a array -> src_pos:int -> dst:'a array -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "to_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "of_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> unit) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> 'b) -> 'a array -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> 'a -> unit) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> 'a -> 'b) -> 'a array -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'a) -> init:'a -> 'b array -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('b -> 'a -> 'a) -> 'b array -> init:'a -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "iter2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> unit) -> 'a array -> 'b array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c) -> 'a array -> 'b array -> 'c array"
                    },
                    {
                      "__class__": "value",
                      "name": "exists",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> set:'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "memq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> set:'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "create_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float array"
                    },
                    {
                      "__class__": "value",
                      "name": "make_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float array"
                    },
                    {
                      "__class__": "value",
                      "name": "sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "stable_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fast_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Buffer",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Buffer.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "contents",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "to_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "nth",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "clear",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "reset",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_char",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_string",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_substring",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> string -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_subbytes",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_substitute",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> (string -> string) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_buffer",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> in_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_buffer",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "truncate",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Bytes",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> (int -> char) -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "empty",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "extend",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes list -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "cat",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "(char -> unit) -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> char -> unit) -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "(char -> char) -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> char -> char) -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "trim",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "index",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "contains",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "contains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "rcontains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "bytes",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_blit",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> char -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "BytesLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> f:(int -> char) -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "empty",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "extend",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> left:int -> right:int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:bytes -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit_string",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "sep:bytes -> bytes list -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "cat",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(char -> unit) -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> char -> unit) -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(char -> char) -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> char -> char) -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "trim",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "index",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "contains",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "contains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "rcontains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "bytes",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:bytes -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bytes"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Callback",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "register",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "register_exception",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> exn -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Char",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "code",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "chr",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> char"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "char",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_chr",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Complex",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Complex.t",
                      "kind": "{re: float; im: float}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "re",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "im",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "zero",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "one",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "i",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "neg",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "conj",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "mul",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "inv",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "div",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "sqrt",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "norm2",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "norm",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "arg",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "polar",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "exp",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "log",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "pow",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Digest",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "substring",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "subbytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "channel",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "file",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "output",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "input",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "to_hex",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "from_hex",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Ephemeron",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        },
                        {
                          "__class__": "value",
                          "name": "clean",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "stats_alive",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "SeededS",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "?random:bool -> int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        },
                        {
                          "__class__": "value",
                          "name": "clean",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "stats_alive",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "K1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('k, 'd)",
                          "private": false,
                          "manifest": "('k, 'd) Ephemeron.K1.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> ('k, 'd) t"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'k option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'k option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'k -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'a) t -> ('k, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'd) t -> ('b, 'd) t -> unit"
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.K1.Make(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.K1.MakeSeeded(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "K2",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('k1, 'k2, 'd)",
                          "private": false,
                          "manifest": "('k1, 'k2, 'd) Ephemeron.K2.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> ('k1, 'k2, 'd) t"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key1",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k1 option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key1_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k1 option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_key1",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k1 -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_key1",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_key1",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key2",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k2 option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key2_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k2 option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_key2",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k2 -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_key2",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_key2",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key1",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('k1, 'a, 'b) t -> ('k1, 'c, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'k2, 'b) t -> ('c, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key12",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('k1, 'k2, 'a) t -> ('k1, 'k2, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'd -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_data",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('k1, 'k2, 'd) t -> ('k1, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H1",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            },
                            {
                              "__class__": "functor_parameter",
                              "name": "H2",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H1.t * H2.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.K2.Make(H1)(H2).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H1",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            },
                            {
                              "__class__": "functor_parameter",
                              "name": "H2",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H1.t * H2.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest":
                                "'a Ephemeron.K2.MakeSeeded(H1)(H2).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Kn",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('k, 'd)",
                          "private": false,
                          "manifest": "('k, 'd) Ephemeron.Kn.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> ('k, 'd) t"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> 'k option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> 'k option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> 'k -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('k, 'a) t -> int -> ('k, 'b) t -> int -> int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> ('k, 'd) t -> unit"
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t array",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.Kn.Make(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t array",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.Kn.MakeSeeded(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "GenHashTable",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Ephemeron.GenHashTable.equal",
                          "kind": "ETrue | EFalse | EDead",
                          "constructors": [
                            {
                              "__class__": "type_constructor",
                              "name": "ETrue",
                              "doc": [],
                              "payload": null
                            },
                            {
                              "__class__": "type_constructor",
                              "name": "EFalse",
                              "doc": [],
                              "payload": null
                            },
                            {
                              "__class__": "type_constructor",
                              "name": "EDead",
                              "doc": [],
                              "payload": null
                            }
                          ],
                          "labels": []
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": null,
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "type",
                                  "name": "container",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": "'a",
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type":
                                    "'a container -> t -> Ephemeron.GenHashTable.equal"
                                },
                                {
                                  "__class__": "value",
                                  "name": "create",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> 'a -> 'a container"
                                },
                                {
                                  "__class__": "value",
                                  "name": "get_key",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "'a container -> t option"
                                },
                                {
                                  "__class__": "value",
                                  "name": "get_data",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "'a container -> 'a option"
                                },
                                {
                                  "__class__": "value",
                                  "name": "set_key_data",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "'a container -> t -> 'a -> unit"
                                },
                                {
                                  "__class__": "value",
                                  "name": "check_key",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "'a container -> bool"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest":
                                "'a Ephemeron.GenHashTable.MakeSeeded(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Filename",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "current_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "parent_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "dir_sep",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "is_relative",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "is_implicit",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "check_suffix",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "chop_suffix",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "extension",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_extension",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "chop_extension",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "basename",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "dirname",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "temp_file",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?temp_dir:string -> string -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "open_temp_file",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?mode:open_flag list ->\n?perms:int -> ?temp_dir:string -> string -> string -> string * out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "get_temp_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "set_temp_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "temp_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "quote",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Format",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "open_box",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_box",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_as",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_bool",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_space",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_cut",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_break",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_flush",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "force_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_if_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_margin",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_margin",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "set_max_indent",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_max_indent",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "set_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "over_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "open_hbox",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_vbox",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_hvbox",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_hovbox",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_ellipsis_text",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_ellipsis_text",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "tag",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "open_tag",
                      "hidden": false,
                      "doc": [],
                      "type": "tag -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_tag",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_print_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_mark_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_print_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "get_mark_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_formatter_out_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> int -> int -> unit) -> (unit -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "unit -> (string -> int -> int -> unit) * (unit -> unit)"
                    },
                    {
                      "__class__": "type",
                      "name": "formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Format.formatter_out_functions",
                      "kind":
                        "{out_string: string -> int -> int -> unit; out_flush: unit -> unit; out_newline: unit -> unit; out_spaces: int -> unit}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "out_string",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "out_flush",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "out_newline",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "out_spaces",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "set_formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter_out_functions -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> formatter_out_functions"
                    },
                    {
                      "__class__": "type",
                      "name": "formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Format.formatter_tag_functions",
                      "kind":
                        "{mark_open_tag: tag -> string; mark_close_tag: tag -> string; print_open_tag: tag -> unit; print_close_tag: tag -> unit}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "mark_open_tag",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "mark_close_tag",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "print_open_tag",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "print_close_tag",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "set_formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter_tag_functions -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> formatter_tag_functions"
                    },
                    {
                      "__class__": "type",
                      "name": "formatter",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Format.formatter",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "formatter_of_out_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "std_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "err_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "formatter_of_buffer",
                      "hidden": false,
                      "doc": [],
                      "type": "Buffer.t -> formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "stdbuf",
                      "hidden": false,
                      "doc": [],
                      "type": "Buffer.t"
                    },
                    {
                      "__class__": "value",
                      "name": "str_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "flush_str_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "make_formatter",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> int -> int -> unit) -> (unit -> unit) -> formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_hbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_vbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_hvbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_hovbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_box",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_close_box",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_tag",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_close_tag",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_string",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_as",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_int",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_float",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> float -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_char",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_bool",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_break",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_cut",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_space",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_force_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_flush",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_if_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_print_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_mark_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_print_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_mark_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_margin",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_margin",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_max_indent",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_max_indent",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_over_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_ellipsis_text",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_ellipsis_text",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_formatter_out_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter -> (string -> int -> int -> unit) -> (unit -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter -> unit -> (string -> int -> int -> unit) * (unit -> unit)"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> formatter_tag_functions -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> formatter_tag_functions"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> formatter_out_functions -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> formatter_out_functions"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_flush_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_list",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?pp_sep:(formatter -> unit -> unit) ->\n(formatter -> 'a -> unit) -> formatter -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_text",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter -> ('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "printf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "eprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "sprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, unit, string) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "asprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, formatter, unit, string) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "ifprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter -> ('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kfprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(formatter -> 'a) -> formatter -> ('b, formatter, unit, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "ikfprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(formatter -> 'a) -> formatter -> ('b, formatter, unit, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "ksprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'a) -> ('b, unit, string, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "kasprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'a) -> ('b, formatter, unit, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "bprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "Buffer.t -> ('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'a) -> ('b, unit, string, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "set_all_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "out:(string -> int -> int -> unit) ->\nflush:(unit -> unit) ->\nnewline:(unit -> unit) -> spaces:(int -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_all_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "unit ->\n(string -> int -> int -> unit) * (unit -> unit) * (unit -> unit) *\n(int -> unit)"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_all_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter ->\nout:(string -> int -> int -> unit) ->\nflush:(unit -> unit) ->\nnewline:(unit -> unit) -> spaces:(int -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_all_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter ->\nunit ->\n(string -> int -> int -> unit) * (unit -> unit) * (unit -> unit) *\n(int -> unit)"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_tbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_close_tbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_tbreak",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_tab",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_tab",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_tbox",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_tbox",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_tbreak",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_tab",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_tab",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Gc",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "stat",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Gc.stat",
                      "kind":
                        "{minor_words: float; promoted_words: float; major_words: float; minor_collections: int; major_collections: int; heap_words: int; heap_chunks: int; live_words: int; live_blocks: int; free_words: int; free_blocks: int; largest_free: int; fragments: int; compactions: int; top_heap_words: int; stack_size: int}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "minor_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "promoted_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "major_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "minor_collections",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "major_collections",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "heap_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "heap_chunks",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "live_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "live_blocks",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "free_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "free_blocks",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "largest_free",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "fragments",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "compactions",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "top_heap_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "stack_size",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "type",
                      "name": "control",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Gc.control",
                      "kind":
                        "{mutable minor_heap_size: int; mutable major_heap_increment: int; mutable space_overhead: int; mutable verbose: int; mutable max_overhead: int; mutable stack_limit: int; mutable allocation_policy: int; window_size: int}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "minor_heap_size",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "major_heap_increment",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "space_overhead",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "verbose",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "max_overhead",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "stack_limit",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "allocation_policy",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "window_size",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "stat",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> stat"
                    },
                    {
                      "__class__": "value",
                      "name": "quick_stat",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> stat"
                    },
                    {
                      "__class__": "value",
                      "name": "counters",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float * float * float"
                    },
                    {
                      "__class__": "value",
                      "name": "minor_words",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> control"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "control -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "minor",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "major_slice",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "major",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "full_major",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "compact",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_stat",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "allocated_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "get_minor_free",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get_bucket",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get_credit",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "huge_fallback_count",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "finalise",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "finalise_last",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> unit) -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "finalise_release",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "type",
                      "name": "alarm",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Gc.alarm",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create_alarm",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> unit) -> alarm"
                    },
                    {
                      "__class__": "value",
                      "name": "delete_alarm",
                      "hidden": false,
                      "doc": [],
                      "type": "alarm -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Genlex",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "token",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Genlex.token",
                      "kind":
                        "Kwd of string | Ident of string | Int of int | Float of float | String of string | Char of char",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Kwd",
                          "doc": [],
                          "payload": "string"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Ident",
                          "doc": [],
                          "payload": "string"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Int",
                          "doc": [],
                          "payload": "int"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Float",
                          "doc": [],
                          "payload": "float"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "String",
                          "doc": [],
                          "payload": "string"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Char",
                          "doc": [],
                          "payload": "char"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "make_lexer",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "string list -> char Stream.t -> token Stream.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Hashtbl",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b)",
                      "private": false,
                      "manifest": "('a, 'b) Hashtbl.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "?random:bool -> int -> ('a, 'b) t"
                    },
                    {
                      "__class__": "value",
                      "name": "clear",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "reset",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> ('a, 'b) t"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "find",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "find_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "find_all",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "remove",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "replace",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> unit) -> ('a, 'b) t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_inplace",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> 'b option) -> ('a, 'b) t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fold",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c -> 'c) -> ('a, 'b) t -> 'c -> 'c"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "randomize",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "is_randomized",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "type",
                      "name": "statistics",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Hashtbl.statistics",
                      "kind":
                        "{num_bindings: int; num_buckets: int; max_bucket_length: int; bucket_histogram: int array}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "num_bindings",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "num_buckets",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "max_bucket_length",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "bucket_histogram",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "stats",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> statistics"
                    },
                    {
                      "__class__": "module_type",
                      "name": "HashedType",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "hash",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Make",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "H",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Hashtbl.HashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "H.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": "'a Hashtbl.Make(H).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "SeededHashedType",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "hash",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> t -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "SeededS",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "?random:bool -> int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "MakeSeeded",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "H",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Hashtbl.SeededHashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "H.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": "'a Hashtbl.MakeSeeded(H).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "?random:bool -> int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "hash",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "seeded_hash",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "hash_param",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> 'a -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "seeded_hash_param",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int -> 'a -> int"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Int32",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "zero",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "one",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_one",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "neg",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "mul",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "div",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "rem",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "abs",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "max_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "min_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "logand",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "logor",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "logxor",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "lognot",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_left",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_logical",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "to_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int32 option"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "bits_of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_bits",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> float"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "int32",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "format",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int32 -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Int64",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "zero",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "one",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_one",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "neg",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "mul",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "div",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "rem",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "abs",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "max_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "min_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "logand",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "logor",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "logxor",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "lognot",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_left",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_logical",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "to_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "of_nativeint",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "to_nativeint",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int64 option"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "bits_of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_bits",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> float"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "int64",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "format",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int64 -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Lazy",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "+'a",
                      "private": false,
                      "manifest": "'a lazy_t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Undefined",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "force",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "force_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "from_fun",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "from_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "is_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "lazy_from_fun",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lazy_from_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lazy_is_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Lexing",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "position",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Lexing.position",
                      "kind":
                        "{pos_fname: string; pos_lnum: int; pos_bol: int; pos_cnum: int}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "pos_fname",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "pos_lnum",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "pos_bol",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "pos_cnum",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "dummy_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "position"
                    },
                    {
                      "__class__": "type",
                      "name": "lexbuf",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Lexing.lexbuf",
                      "kind":
                        "{refill_buff: lexbuf -> unit; mutable lex_buffer: bytes; mutable lex_buffer_len: int; mutable lex_abs_pos: int; mutable lex_start_pos: int; mutable lex_curr_pos: int; mutable lex_last_pos: int; mutable lex_last_action: int; mutable lex_eof_reached: bool; mutable lex_mem: int array; mutable lex_start_p: position; mutable lex_curr_p: position}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "refill_buff",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_buffer",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_buffer_len",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_abs_pos",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_start_pos",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_curr_pos",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_last_pos",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_last_action",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_eof_reached",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_mem",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_start_p",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_curr_p",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "from_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> lexbuf"
                    },
                    {
                      "__class__": "value",
                      "name": "from_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> lexbuf"
                    },
                    {
                      "__class__": "value",
                      "name": "from_function",
                      "hidden": false,
                      "doc": [],
                      "type": "(bytes -> int -> int) -> lexbuf"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_char",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_start",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_end",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_start_p",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> position"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_end_p",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> position"
                    },
                    {
                      "__class__": "value",
                      "name": "new_line",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "flush_input",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_lexeme",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_lexeme_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> int -> string option"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_lexeme_char",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_lexeme_char_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> char option"
                    },
                    {
                      "__class__": "type",
                      "name": "lex_tables",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Lexing.lex_tables",
                      "kind":
                        "{lex_base: string; lex_backtrk: string; lex_default: string; lex_trans: string; lex_check: string; lex_base_code: string; lex_backtrk_code: string; lex_default_code: string; lex_trans_code: string; lex_check_code: string; lex_code: string}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "lex_base",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_backtrk",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_default",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_trans",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_check",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_base_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_backtrk_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_default_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_trans_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_check_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_code",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "engine",
                      "hidden": false,
                      "doc": [],
                      "type": "lex_tables -> int -> lexbuf -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "new_engine",
                      "hidden": false,
                      "doc": [],
                      "type": "lex_tables -> int -> lexbuf -> int"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "List",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_lengths",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'b list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_length_with",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "cons",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "hd",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "tl",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "nth",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "nth_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "rev",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "flatten",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a -> unit) -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_map",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> 'a) -> 'a -> 'b list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> 'b) -> 'a list -> 'b -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "iter2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> unit) -> 'a list -> 'b list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c -> 'a) -> 'a -> 'b list -> 'c list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c -> 'c) -> 'a list -> 'b list -> 'c -> 'c"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "memq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "find",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "find_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "filter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "find_all",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "partition",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a list * 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "assoc_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "assq_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "mem_assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem_assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "split",
                      "hidden": false,
                      "doc": [],
                      "type": "('a * 'b) list -> 'a list * 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "combine",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'b list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "stable_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "fast_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "sort_uniq",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "merge",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'a -> int) -> 'a list -> 'a list -> 'a list"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "ListLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "hd",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_lengths",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'b list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_length_with",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> len:int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "cons",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "tl",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "nth",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "nth_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "rev",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "flatten",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> unit) -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> 'a -> unit) -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> 'a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'a) -> init:'a -> 'b list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'b) -> 'a list -> init:'b -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "iter2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> unit) -> 'a list -> 'b list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c -> 'a) -> init:'a -> 'b list -> 'c list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c -> 'c) -> 'a list -> 'b list -> init:'c -> 'c"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> set:'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "memq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> set:'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "find",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "find_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "filter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "find_all",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "partition",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> bool) -> 'a list -> 'a list * 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "assoc_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "assq_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "mem_assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> map:('a * 'b) list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem_assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> map:('a * 'b) list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "split",
                      "hidden": false,
                      "doc": [],
                      "type": "('a * 'b) list -> 'a list * 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "combine",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'b list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "stable_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "fast_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "sort_uniq",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "merge",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "cmp:('a -> 'a -> int) -> 'a list -> 'a list -> 'a list"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Map",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "OrderedType",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "+'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "is_empty",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "singleton",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t"
                        },
                        {
                          "__class__": "value",
                          "name": "union",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "('a -> 'a -> int) -> 'a t -> 'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a -> 'a -> bool) -> 'a t -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> bool) -> 'a t -> 'a t * 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "cardinal",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "bindings",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) list"
                        },
                        {
                          "__class__": "value",
                          "name": "min_binding",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "min_binding_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "max_binding",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "max_binding_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "choose",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "choose_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a t * 'a option * 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> bool) -> 'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first_opt",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> bool) -> 'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> bool) -> 'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last_opt",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> bool) -> 'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "('a -> 'b) -> 'a t -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'b) -> 'a t -> 'b t"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Make",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "Ord",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Map.OrderedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Ord.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "+'a",
                          "private": false,
                          "manifest": "'a Map.Make(Ord).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "is_empty",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "singleton",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t"
                        },
                        {
                          "__class__": "value",
                          "name": "union",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "('a -> 'a -> int) -> 'a t -> 'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a -> 'a -> bool) -> 'a t -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> bool) -> 'a t -> 'a t * 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "cardinal",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "bindings",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) list"
                        },
                        {
                          "__class__": "value",
                          "name": "min_binding",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "min_binding_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "max_binding",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "max_binding_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "choose",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "choose_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a t * 'a option * 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> bool) -> 'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first_opt",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> bool) -> 'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> bool) -> 'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last_opt",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> bool) -> 'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "('a -> 'b) -> 'a t -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'b) -> 'a t -> 'b t"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Marshal",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "extern_flags",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Marshal.extern_flags",
                      "kind": "No_sharing | Closures | Compat_32",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "No_sharing",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Closures",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Compat_32",
                          "doc": [],
                          "payload": null
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "to_channel",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "out_channel -> 'a -> extern_flags list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "to_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> extern_flags list -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> extern_flags list -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "to_buffer",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "bytes -> int -> int -> 'a -> extern_flags list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "from_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "from_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "from_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "header_size",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "data_size",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "total_size",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "MoreLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module",
                      "name": "Hashtbl",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b)",
                          "private": false,
                          "manifest": "('a, 'b) Hashtbl.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "?random:bool -> int -> ('a, 'b) t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> ('a, 'b) t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> key:'a -> data:'b -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> 'b option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> key:'a -> data:'b -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(key:'a -> data:'b -> unit) -> ('a, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(key:'a -> data:'b -> 'b option) -> ('a, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(key:'a -> data:'b -> 'c -> 'c) -> ('a, 'b) t -> init:'c -> 'c"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "randomize",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "is_randomized",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> bool"
                        },
                        {
                          "__class__": "type",
                          "name": "statistics",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Hashtbl.statistics",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> statistics"
                        },
                        {
                          "__class__": "module_type",
                          "name": "HashedType",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": "Hashtbl.HashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "SeededHashedType",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": "Hashtbl.SeededHashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> t -> int"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "S",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "SeededS",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from":
                                "MoreLabels.Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a MoreLabels.Hashtbl.Make(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> MoreLabels.Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from":
                                "MoreLabels.Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest":
                                "'a MoreLabels.Hashtbl.MakeSeeded(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> MoreLabels.Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "value",
                          "name": "hash",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "seeded_hash",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "hash_param",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> int -> 'a -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "seeded_hash_param",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> int -> int -> 'a -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Map",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "module_type",
                          "name": "OrderedType",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": "Map.OrderedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "S",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "+'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "empty",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "is_empty",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "key:key -> data:'a -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "singleton",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "merge",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t"
                            },
                            {
                              "__class__": "value",
                              "name": "union",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "cmp:('a -> 'a -> int) -> 'a t -> 'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "cmp:('a -> 'a -> bool) -> 'a t -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "for_all",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "exists",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "partition",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a -> bool) -> 'a t -> 'a t * 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "cardinal",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "bindings",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) list"
                            },
                            {
                              "__class__": "value",
                              "name": "min_binding",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "min_binding_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "max_binding",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "max_binding_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "choose",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "choose_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "split",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "key -> 'a t -> 'a t * 'a option * 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> bool) -> 'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first_opt",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> bool) -> 'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> bool) -> 'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last_opt",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> bool) -> 'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "f:('a -> 'b) -> 'a t -> 'b t"
                            },
                            {
                              "__class__": "value",
                              "name": "mapi",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> 'b) -> 'a t -> 'b t"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "Ord",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "MoreLabels.Map.OrderedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "compare",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "Ord.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "+'a",
                              "private": false,
                              "manifest": "'a MoreLabels.Map.Make(Ord).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "empty",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "is_empty",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "key:key -> data:'a -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "singleton",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "merge",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t"
                            },
                            {
                              "__class__": "value",
                              "name": "union",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "cmp:('a -> 'a -> int) -> 'a t -> 'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "cmp:('a -> 'a -> bool) -> 'a t -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "for_all",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "exists",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "partition",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a -> bool) -> 'a t -> 'a t * 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "cardinal",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "bindings",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) list"
                            },
                            {
                              "__class__": "value",
                              "name": "min_binding",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "min_binding_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "max_binding",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "max_binding_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "choose",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "choose_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "split",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "key -> 'a t -> 'a t * 'a option * 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> bool) -> 'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first_opt",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> bool) -> 'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> bool) -> 'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last_opt",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> bool) -> 'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "f:('a -> 'b) -> 'a t -> 'b t"
                            },
                            {
                              "__class__": "value",
                              "name": "mapi",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> 'b) -> 'a t -> 'b t"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Set",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "module_type",
                          "name": "OrderedType",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": "Set.OrderedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "S",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "elt",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "empty",
                              "hidden": false,
                              "doc": [],
                              "type": "t"
                            },
                            {
                              "__class__": "value",
                              "name": "is_empty",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "singleton",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "union",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "inter",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "diff",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "subset",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> unit) -> t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> elt) -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(elt -> 'a -> 'a) -> t -> init:'a -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "for_all",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "exists",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "partition",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> t * t"
                            },
                            {
                              "__class__": "value",
                              "name": "cardinal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "elements",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt list"
                            },
                            {
                              "__class__": "value",
                              "name": "min_elt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "min_elt_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "max_elt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "max_elt_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "choose",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "choose_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "split",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t * bool * t"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "of_list",
                              "hidden": false,
                              "doc": [],
                              "type": "elt list -> t"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "Ord",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "MoreLabels.Set.OrderedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "compare",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "elt",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "Ord.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "MoreLabels.Set.Make(Ord).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "empty",
                              "hidden": false,
                              "doc": [],
                              "type": "t"
                            },
                            {
                              "__class__": "value",
                              "name": "is_empty",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "singleton",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "union",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "inter",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "diff",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "subset",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> unit) -> t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> elt) -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(elt -> 'a -> 'a) -> t -> init:'a -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "for_all",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "exists",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "partition",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> t * t"
                            },
                            {
                              "__class__": "value",
                              "name": "cardinal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "elements",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt list"
                            },
                            {
                              "__class__": "value",
                              "name": "min_elt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "min_elt_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "max_elt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "max_elt_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "choose",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "choose_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "split",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t * bool * t"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "of_list",
                              "hidden": false,
                              "doc": [],
                              "type": "elt list -> t"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Nativeint",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "zero",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "one",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_one",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "neg",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "mul",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "div",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "rem",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "abs",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "size",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "max_int",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "min_int",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "logand",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "logor",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "logxor",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "lognot",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_left",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_logical",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "to_float",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> nativeint option"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "nativeint",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "format",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> nativeint -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Oo",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "< .. > -> < .. >"
                    },
                    {
                      "__class__": "value",
                      "name": "id",
                      "hidden": false,
                      "doc": [],
                      "type": "< .. > -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "new_method",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> CamlinternalOO.tag"
                    },
                    {
                      "__class__": "value",
                      "name": "public_method_label",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> CamlinternalOO.tag"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Parsing",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "symbol_start",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "symbol_end",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rhs_start",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rhs_end",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "symbol_start_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> Lexing.position"
                    },
                    {
                      "__class__": "value",
                      "name": "symbol_end_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> Lexing.position"
                    },
                    {
                      "__class__": "value",
                      "name": "rhs_start_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> Lexing.position"
                    },
                    {
                      "__class__": "value",
                      "name": "rhs_end_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> Lexing.position"
                    },
                    {
                      "__class__": "value",
                      "name": "clear_parser",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "exception",
                      "name": "Parse_error",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "set_trace",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool"
                    },
                    {
                      "__class__": "type",
                      "name": "parser_env",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Parsing.parser_env",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "parse_tables",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Parsing.parse_tables",
                      "kind":
                        "{actions: (parser_env -> Obj.t) array; transl_const: int array; transl_block: int array; lhs: string; len: string; defred: string; dgoto: string; sindex: string; rindex: string; gindex: string; tablesize: int; table: string; check: string; error_function: string -> unit; names_const: string; names_block: string}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "actions",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "transl_const",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "transl_block",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lhs",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "len",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "defred",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "dgoto",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "sindex",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "rindex",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "gindex",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "tablesize",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "table",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "check",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "error_function",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "names_const",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "names_block",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "exception",
                      "name": "YYexit",
                      "hidden": false,
                      "doc": [],
                      "payload": "Obj.t",
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "yyparse",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "parse_tables -> int -> (Lexing.lexbuf -> 'a) -> Lexing.lexbuf -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "peek_val",
                      "hidden": false,
                      "doc": [],
                      "type": "parser_env -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "is_current_lookahead",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_error",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Printexc",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "print",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "catch",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "print_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "record_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "backtrace_status",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "register_printer",
                      "hidden": false,
                      "doc": [],
                      "type": "(exn -> string option) -> unit"
                    },
                    {
                      "__class__": "type",
                      "name": "raw_backtrace",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Printexc.raw_backtrace",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "get_raw_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> raw_backtrace"
                    },
                    {
                      "__class__": "value",
                      "name": "print_raw_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> raw_backtrace -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "raw_backtrace_to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "raise_with_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> raw_backtrace -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "get_callstack",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> raw_backtrace"
                    },
                    {
                      "__class__": "value",
                      "name": "set_uncaught_exception_handler",
                      "hidden": false,
                      "doc": [],
                      "type": "(exn -> raw_backtrace -> unit) -> unit"
                    },
                    {
                      "__class__": "type",
                      "name": "backtrace_slot",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Printexc.backtrace_slot",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "backtrace_slots",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace -> backtrace_slot array option"
                    },
                    {
                      "__class__": "type",
                      "name": "location",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Printexc.location",
                      "kind":
                        "{filename: string; line_number: int; start_char: int; end_char: int}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "filename",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "line_number",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "start_char",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "end_char",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Slot",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Printexc.backtrace_slot",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "is_raise",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "is_inline",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "location",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> Printexc.location option"
                        },
                        {
                          "__class__": "value",
                          "name": "format",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> t -> string option"
                        }
                      ]
                    },
                    {
                      "__class__": "type",
                      "name": "raw_backtrace_slot",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Printexc.raw_backtrace_slot",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "raw_backtrace_length",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get_raw_backtrace_slot",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace -> int -> raw_backtrace_slot"
                    },
                    {
                      "__class__": "value",
                      "name": "convert_raw_backtrace_slot",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace_slot -> backtrace_slot"
                    },
                    {
                      "__class__": "value",
                      "name": "get_raw_backtrace_next_slot",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "raw_backtrace_slot -> raw_backtrace_slot option"
                    },
                    {
                      "__class__": "value",
                      "name": "exn_slot_id",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "exn_slot_name",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Printf",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "fprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "out_channel -> ('a, out_channel, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "printf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, out_channel, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "eprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, out_channel, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "sprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, unit, string) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "bprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "Buffer.t -> ('a, Buffer.t, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "ifprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "'b -> ('a, 'b, 'c, unit) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kfprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(out_channel -> 'd) ->\nout_channel -> ('a, out_channel, unit, 'd) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "ikfprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('b -> 'd) -> 'b -> ('a, 'b, 'c, 'd) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "ksprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'd) -> ('a, unit, string, 'd) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kbprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(Buffer.t -> 'd) -> Buffer.t -> ('a, Buffer.t, unit, 'd) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'b) -> ('a, unit, string, 'b) format4 -> 'a"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Queue",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a Queue.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Empty",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "push",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "take",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "pop",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "peek",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "top",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "clear",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "is_empty",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fold",
                      "hidden": false,
                      "doc": [],
                      "type": "('b -> 'a -> 'b) -> 'b -> 'a t -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "transfer",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a t -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Random",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "full_init",
                      "hidden": false,
                      "doc": [],
                      "type": "int array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "self_init",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "bits",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int32",
                      "hidden": false,
                      "doc": [],
                      "type": "Int32.t -> Int32.t"
                    },
                    {
                      "__class__": "value",
                      "name": "nativeint",
                      "hidden": false,
                      "doc": [],
                      "type": "Nativeint.t -> Nativeint.t"
                    },
                    {
                      "__class__": "value",
                      "name": "int64",
                      "hidden": false,
                      "doc": [],
                      "type": "Int64.t -> Int64.t"
                    },
                    {
                      "__class__": "value",
                      "name": "float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "bool",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "module",
                      "name": "State",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Random.State.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "make",
                          "hidden": false,
                          "doc": [],
                          "type": "int array -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "make_self_init",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "bits",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "int",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "int32",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> Int32.t -> Int32.t"
                        },
                        {
                          "__class__": "value",
                          "name": "nativeint",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> Nativeint.t -> Nativeint.t"
                        },
                        {
                          "__class__": "value",
                          "name": "int64",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> Int64.t -> Int64.t"
                        },
                        {
                          "__class__": "value",
                          "name": "float",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> float -> float"
                        },
                        {
                          "__class__": "value",
                          "name": "bool",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "get_state",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> State.t"
                    },
                    {
                      "__class__": "value",
                      "name": "set_state",
                      "hidden": false,
                      "doc": [],
                      "type": "State.t -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Scanf",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module",
                      "name": "Scanning",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "in_channel",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Scanf.Scanning.in_channel",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "scanbuf",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "in_channel",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "stdin",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel"
                        },
                        {
                          "__class__": "type",
                          "name": "file_name",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "string",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "open_in",
                          "hidden": false,
                          "doc": [],
                          "type": "file_name -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "open_in_bin",
                          "hidden": false,
                          "doc": [],
                          "type": "file_name -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "close_in",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "from_file",
                          "hidden": false,
                          "doc": [],
                          "type": "file_name -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "from_file_bin",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "from_string",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "from_function",
                          "hidden": false,
                          "doc": [],
                          "type": "(unit -> char) -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "from_channel",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "end_of_input",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "beginning_of_input",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "name_of_input",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "stdib",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel"
                        }
                      ]
                    },
                    {
                      "__class__": "type",
                      "name": "scanner",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd)",
                      "private": false,
                      "manifest":
                        "('a, Scanning.in_channel, 'b, 'c, 'a -> 'd, 'd) format6 -> 'c",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Scan_failure",
                      "hidden": false,
                      "doc": [],
                      "payload": "string",
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "bscanf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "Scanning.in_channel -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "sscanf",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "scanf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "kscanf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "Scanning.in_channel ->\n(Scanning.in_channel -> exn -> 'd) -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "ksscanf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "string -> (Scanning.in_channel -> exn -> 'd) -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "bscanf_format",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "Scanning.in_channel ->\n('a, 'b, 'c, 'd, 'e, 'f) format6 ->\n(('a, 'b, 'c, 'd, 'e, 'f) format6 -> 'g) -> 'g"
                    },
                    {
                      "__class__": "value",
                      "name": "sscanf_format",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "string ->\n('a, 'b, 'c, 'd, 'e, 'f) format6 ->\n(('a, 'b, 'c, 'd, 'e, 'f) format6 -> 'g) -> 'g"
                    },
                    {
                      "__class__": "value",
                      "name": "format_from_string",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "string ->\n('a, 'b, 'c, 'd, 'e, 'f) format6 -> ('a, 'b, 'c, 'd, 'e, 'f) format6"
                    },
                    {
                      "__class__": "value",
                      "name": "unescaped",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "fscanf",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "kfscanf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "in_channel -> (Scanning.in_channel -> exn -> 'd) -> ('a, 'b, 'c, 'd) scanner"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Set",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "OrderedType",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "t"
                        },
                        {
                          "__class__": "value",
                          "name": "is_empty",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "singleton",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "union",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "inter",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "diff",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "subset",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> unit) -> t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> elt) -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> 'a -> 'a) -> t -> 'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> t * t"
                        },
                        {
                          "__class__": "value",
                          "name": "cardinal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "elements",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt list"
                        },
                        {
                          "__class__": "value",
                          "name": "min_elt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "min_elt_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "max_elt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "max_elt_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "choose",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "choose_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t * bool * t"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "of_list",
                          "hidden": false,
                          "doc": [],
                          "type": "elt list -> t"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Make",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "Ord",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Set.OrderedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Ord.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Set.Make(Ord).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "t"
                        },
                        {
                          "__class__": "value",
                          "name": "is_empty",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "singleton",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "union",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "inter",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "diff",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "subset",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> unit) -> t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> elt) -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> 'a -> 'a) -> t -> 'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> t * t"
                        },
                        {
                          "__class__": "value",
                          "name": "cardinal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "elements",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt list"
                        },
                        {
                          "__class__": "value",
                          "name": "min_elt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "min_elt_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "max_elt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "max_elt_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "choose",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "choose_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t * bool * t"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "of_list",
                          "hidden": false,
                          "doc": [],
                          "type": "elt list -> t"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Sort",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "list",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "array",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> bool) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "merge",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'a -> bool) -> 'a list -> 'a list -> 'a list"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Spacetime",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "enabled",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "module",
                      "name": "Series",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Spacetime.Series.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "path:string -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "save_event",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "?time:float -> t -> event_name:string -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "save_and_close",
                          "hidden": false,
                          "doc": [],
                          "type": "?time:float -> t -> unit"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Snapshot",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "take",
                          "hidden": false,
                          "doc": [],
                          "type": "?time:float -> Spacetime.Series.t -> unit"
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "save_event_for_automatic_snapshots",
                      "hidden": false,
                      "doc": [],
                      "type": "event_name:string -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Stack",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a Stack.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Empty",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "push",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pop",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "top",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "clear",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "is_empty",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fold",
                      "hidden": false,
                      "doc": [],
                      "type": "('b -> 'a -> 'b) -> 'b -> 'a t -> 'b"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "StdLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module",
                      "name": "Array",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "get",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "set",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "make",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "init",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> f:(int -> 'a) -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "make_matrix",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "dimx:int -> dimy:int -> 'a -> 'a array array"
                        },
                        {
                          "__class__": "value",
                          "name": "create_matrix",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "dimx:int -> dimy:int -> 'a -> 'a array array"
                        },
                        {
                          "__class__": "value",
                          "name": "append",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> 'a array -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "concat",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array list -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "sub",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a array -> pos:int -> len:int -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a array -> pos:int -> len:int -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:'a array -> src_pos:int -> dst:'a array -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "to_list",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "of_list",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> unit) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> 'b) -> 'a array -> 'b array"
                        },
                        {
                          "__class__": "value",
                          "name": "iteri",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> 'a -> unit) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(int -> 'a -> 'b) -> 'a array -> 'b array"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_left",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'a) -> init:'a -> 'b array -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('b -> 'a -> 'a) -> 'b array -> init:'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "iter2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> unit) -> 'a array -> 'b array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c) -> 'a array -> 'b array -> 'c array"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a array -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a array -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> set:'a array -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "memq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> set:'a array -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "create_float",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> float array"
                        },
                        {
                          "__class__": "value",
                          "name": "make_float",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> float array"
                        },
                        {
                          "__class__": "value",
                          "name": "sort",
                          "hidden": false,
                          "doc": [],
                          "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "stable_sort",
                          "hidden": false,
                          "doc": [],
                          "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fast_sort",
                          "hidden": false,
                          "doc": [],
                          "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_get",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_set",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int -> 'a -> unit"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Bytes",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "get",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char"
                        },
                        {
                          "__class__": "value",
                          "name": "set",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "make",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> char -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "init",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> f:(int -> char) -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "of_string",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "to_string",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "sub",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> pos:int -> len:int -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "sub_string",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> int -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "extend",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> left:int -> right:int -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "bytes -> pos:int -> len:int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:bytes -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_string",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "concat",
                          "hidden": false,
                          "doc": [],
                          "type": "sep:bytes -> bytes list -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "cat",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(char -> unit) -> bytes -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iteri",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> char -> unit) -> bytes -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(char -> char) -> bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> char -> char) -> bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "trim",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "escaped",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "index",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "index_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "index_from",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "index_from_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_from",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_from_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "contains",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "contains_from",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "rcontains_from",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "uppercase",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "lowercase",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "capitalize",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "uncapitalize",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "uppercase_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "lowercase_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "capitalize_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "uncapitalize_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "bytes",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_get",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_set",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:bytes -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "bytes -> pos:int -> len:int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_to_string",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_of_string",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> bytes"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "List",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "hd",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "compare_lengths",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'b list -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "compare_length_with",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> len:int -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "cons",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "tl",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "nth",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> int -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "nth_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> int -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "rev",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "append",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "rev_append",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "concat",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "flatten",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> unit) -> 'a list -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iteri",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> 'a -> unit) -> 'a list -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> 'b) -> 'a list -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> 'a -> 'b) -> 'a list -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "rev_map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> 'b) -> 'a list -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_left",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'a) -> init:'a -> 'b list -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'b) -> 'a list -> init:'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "iter2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> unit) -> 'a list -> 'b list -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                        },
                        {
                          "__class__": "value",
                          "name": "rev_map2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_left2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c -> 'a) -> init:'a -> 'b list -> 'c list -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c -> 'c) -> 'a list -> 'b list -> init:'c -> 'c"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> set:'a list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "memq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> set:'a list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> bool) -> 'a list -> 'a list * 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "assoc",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "assoc_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> 'b option"
                        },
                        {
                          "__class__": "value",
                          "name": "assq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "assq_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> 'b option"
                        },
                        {
                          "__class__": "value",
                          "name": "mem_assoc",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> map:('a * 'b) list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem_assq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> map:('a * 'b) list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "remove_assoc",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                        },
                        {
                          "__class__": "value",
                          "name": "remove_assq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "('a * 'b) list -> 'a list * 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "combine",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'b list -> ('a * 'b) list"
                        },
                        {
                          "__class__": "value",
                          "name": "sort",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "stable_sort",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "fast_sort",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "sort_uniq",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list -> 'a list"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "String",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "get",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char"
                        },
                        {
                          "__class__": "value",
                          "name": "set",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "make",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> char -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "init",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> f:(int -> char) -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "sub",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> pos:int -> len:int -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "bytes -> pos:int -> len:int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "concat",
                          "hidden": false,
                          "doc": [],
                          "type": "sep:string -> string list -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(char -> unit) -> string -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iteri",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> char -> unit) -> string -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(char -> char) -> string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(int -> char -> char) -> string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "trim",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "escaped",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "index",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "index_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "index_from",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "index_from_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_from",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_from_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "contains",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "contains_from",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "rcontains_from",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "uppercase",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "lowercase",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "capitalize",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "uncapitalize",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "uppercase_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "lowercase_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "capitalize_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "uncapitalize_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "string",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "split_on_char",
                          "hidden": false,
                          "doc": [],
                          "type": "sep:char -> string -> string list"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_get",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_set",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "bytes -> pos:int -> len:int -> char -> unit"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Stream",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a Stream.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Failure",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Error",
                      "hidden": false,
                      "doc": [],
                      "payload": "string",
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "from",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a option) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "of_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char t"
                    },
                    {
                      "__class__": "value",
                      "name": "of_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char t"
                    },
                    {
                      "__class__": "value",
                      "name": "of_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> char t"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "next",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "empty",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "peek",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "junk",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "count",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "npeek",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a t -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "iapp",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "icons",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "ising",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lapp",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a t) -> 'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lcons",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a) -> 'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lsing",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "sempty",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "slazy",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a t) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "dump",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a t -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "String",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> (int -> char) -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string list -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "(char -> unit) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> char -> unit) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "(char -> char) -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> char -> char) -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "trim",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "index",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "contains",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "contains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "rcontains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "split_on_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> string -> string list"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_blit",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> char -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "StringLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> f:(int -> char) -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> pos:int -> len:int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "sep:string -> string list -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(char -> unit) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> char -> unit) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(char -> char) -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> char -> char) -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "trim",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "index",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "contains",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "contains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "rcontains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "split_on_char",
                      "hidden": false,
                      "doc": [],
                      "type": "sep:char -> string -> string list"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> char -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Sys",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "argv",
                      "hidden": false,
                      "doc": [],
                      "type": "string array"
                    },
                    {
                      "__class__": "value",
                      "name": "executable_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "file_exists",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "is_directory",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "remove",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "rename",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "getenv",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "getenv_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string option"
                    },
                    {
                      "__class__": "value",
                      "name": "command",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "time",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "chdir",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "getcwd",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "readdir",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array"
                    },
                    {
                      "__class__": "value",
                      "name": "interactive",
                      "hidden": false,
                      "doc": [],
                      "type": "bool ref"
                    },
                    {
                      "__class__": "value",
                      "name": "os_type",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "type",
                      "name": "backend_type",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Sys.backend_type",
                      "kind": "Native | Bytecode | Other of string",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Native",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Bytecode",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Other",
                          "doc": [],
                          "payload": "string"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "backend_type",
                      "hidden": false,
                      "doc": [],
                      "type": "backend_type"
                    },
                    {
                      "__class__": "value",
                      "name": "unix",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "value",
                      "name": "win32",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "value",
                      "name": "cygwin",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "value",
                      "name": "word_size",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_size",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_endian",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "value",
                      "name": "max_string_length",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "max_array_length",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "runtime_variant",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "runtime_parameters",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "signal_behavior",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Sys.signal_behavior",
                      "kind":
                        "Signal_default | Signal_ignore | Signal_handle of int -> unit",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Signal_default",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Signal_ignore",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Signal_handle",
                          "doc": [],
                          "payload": "int -> unit"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "signal",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> signal_behavior -> signal_behavior"
                    },
                    {
                      "__class__": "value",
                      "name": "set_signal",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> signal_behavior -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "sigabrt",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigalrm",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigfpe",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sighup",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigill",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigint",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigkill",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigpipe",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigquit",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigsegv",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigterm",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigusr1",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigusr2",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigchld",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigcont",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigstop",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigtstp",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigttin",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigttou",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigvtalrm",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigprof",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigbus",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigpoll",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigsys",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigtrap",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigurg",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigxcpu",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigxfsz",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "exception",
                      "name": "Break",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "catch_break",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "ocaml_version",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "enable_runtime_warnings",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "runtime_warnings_enabled",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "opaque_identity",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Uchar",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Uchar.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "min",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "max",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "is_valid",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "is_char",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "of_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "to_char",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_to_char",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "hash",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Weak",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a Weak.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> 'a option -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "get_copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "check",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> int -> 'a option -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> 'a t -> int -> int -> unit"
                    },
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "data",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data list"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(data -> unit) -> t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type": "(data -> 'a -> 'a) -> t -> 'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "count",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int * int * int * int * int * int"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Make",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "H",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Hashtbl.HashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "data",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "H.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Weak.Make(H).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data list"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(data -> unit) -> t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type": "(data -> 'a -> 'a) -> t -> 'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "count",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int * int * int * int * int * int"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Num",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "num",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Num.num",
                      "kind":
                        "Int of int | Big_int of Big_int.big_int | Ratio of Ratio.ratio",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Int",
                          "doc": [],
                          "payload": "int"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Big_int",
                          "doc": [],
                          "payload": "Big_int.big_int"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Ratio",
                          "doc": [],
                          "payload": "Ratio.ratio"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "(+/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "add_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "(-/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "(*/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "mult_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "square_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "(//)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "div_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "quo_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "mod_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "(**/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "power_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "abs_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "succ_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "pred_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "incr_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num ref -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "decr_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num ref -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "is_integer_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "integer_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "floor_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "round_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "ceiling_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "sign_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(=/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(</)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "eq_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "lt_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "le_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "gt_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "ge_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "max_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "min_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "approx_num_fix",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> num -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "approx_num_exp",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> num -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> num option"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_num_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "nat_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Nat.nat"
                    },
                    {
                      "__class__": "value",
                      "name": "nat_of_num_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Nat.nat option"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_nat",
                      "hidden": false,
                      "doc": [],
                      "type": "Nat.nat -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "Big_int.big_int -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Big_int.big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_num_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Big_int.big_int option"
                    },
                    {
                      "__class__": "value",
                      "name": "ratio_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Ratio.ratio"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_ratio",
                      "hidden": false,
                      "doc": [],
                      "type": "Ratio.ratio -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> float"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Big_int",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "big_int",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Big_int.big_int",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "zero_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "unit_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "abs_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "add_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "succ_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "add_int_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "pred_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "mult_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "mult_int_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "square_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "sqrt_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "quomod_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int * big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "div_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "mod_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "gcd_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "power_int_positive_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "power_big_int_positive_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "power_int_positive_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "power_big_int_positive_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "sign_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "eq_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "le_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "ge_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "lt_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "gt_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "max_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "min_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "num_digits_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "num_bits_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> big_int option"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "is_int_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_big_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_nativeint",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_int64",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "int32_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "int32_of_big_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int32 option"
                    },
                    {
                      "__class__": "value",
                      "name": "nativeint_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "nativeint_of_big_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> nativeint option"
                    },
                    {
                      "__class__": "value",
                      "name": "int64_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "int64_of_big_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int64 option"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "and_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "or_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "xor_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_left_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_towards_zero_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "extract_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "nat_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> Nat.nat"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_nat",
                      "hidden": false,
                      "doc": [],
                      "type": "Nat.nat -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "base_power_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "sys_big_int_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "round_futur_last_digit",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "approx_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "round_big_int_to_float",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> bool -> float"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Arith_status",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "arith_status",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_error_when_null_denominator",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_error_when_null_denominator",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_normalize_ratio",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_normalize_ratio",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_normalize_ratio_when_printing",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_normalize_ratio_when_printing",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_approx_printing",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_approx_printing",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_floating_precision",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "set_floating_precision",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Pervasives",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Arg",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Array",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "get",
                  "hidden": false,
                  "doc": [],
                  "type": "'a array -> int -> 'a"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "ArrayLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Buffer",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Bytes",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "BytesLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Callback",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Char",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Complex",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Digest",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Ephemeron",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Filename",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Format",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Gc",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Genlex",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Hashtbl",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Int32",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Int64",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Lazy",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Lexing",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "List",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "ListLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Map",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Marshal",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "MoreLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Nativeint",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Oo",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Parsing",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Printexc",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Printf",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Queue",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Random",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Scanf",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Set",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Sort",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Spacetime",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Stack",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "StdLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Stream",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "String",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "get",
                  "hidden": false,
                  "doc": [],
                  "type": "string -> int -> char"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "StringLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Sys",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Uchar",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Weak",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Num",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Big_int",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Arith_status",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            }
          ]
        },
        {
          "__class__": "floating_documentation",
          "hidden": false,
          "text":
            " This module overrides all elements from the standard\n  `pervasives <https://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html>`_\n  with unusable but guiding values like:\n\n  .. val:: raise\n    :noindex:\n    :type: [ `Please_use_General__Exception__raise ]\n\n    The types of these values point at what replaces them in :mod:`General`.\n    (In that case, :val:`General.Exception.raise`).\n\n  It then brings back a small set of ubiquitous values: "
        },
        {
          "__class__": "floating_documentation",
          "hidden": false,
          "text": " **Boolean operators** "
        },
        {
          "__class__": "value",
          "name": "not",
          "hidden": false,
          "doc": [ " Negation. Alias of :val:`General.Bool.O.not`. " ],
          "type": "bool -> bool"
        },
        {
          "__class__": "value",
          "name": "(&&)",
          "hidden": false,
          "doc": [
            " Conjunction. Lazy. Alias of :val:`General.Bool.O.(&&)` "
          ],
          "type": "bool -> bool -> bool"
        },
        {
          "__class__": "value",
          "name": "(||)",
          "hidden": false,
          "doc": [
            " Disjunction. Lazy. Alias of :val:`General.Bool.O.(||)` "
          ],
          "type": "bool -> bool -> bool"
        },
        {
          "__class__": "floating_documentation",
          "hidden": false,
          "text": " **Integer operators** "
        },
        {
          "__class__": "value",
          "name": "(~-)",
          "hidden": false,
          "doc": [],
          "type": "int -> int"
        },
        {
          "__class__": "value",
          "name": "(~+)",
          "hidden": false,
          "doc": [],
          "type": "int -> int"
        },
        {
          "__class__": "value",
          "name": "(+)",
          "hidden": false,
          "doc": [],
          "type": "int -> int -> int"
        },
        {
          "__class__": "value",
          "name": "(-)",
          "hidden": false,
          "doc": [],
          "type": "int -> int -> int"
        },
        {
          "__class__": "value",
          "name": "(*)",
          "hidden": false,
          "doc": [],
          "type": "int -> int -> int"
        },
        {
          "__class__": "value",
          "name": "(/)",
          "hidden": false,
          "doc": [],
          "type": "int -> int -> int"
        },
        {
          "__class__": "value",
          "name": "(mod)",
          "hidden": false,
          "doc": [],
          "type": "int -> int -> int"
        },
        {
          "__class__": "floating_documentation",
          "hidden": false,
          "text": " **Floating point operators** "
        },
        {
          "__class__": "value",
          "name": "(~-.)",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "(~+.)",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "(+.)",
          "hidden": false,
          "doc": [],
          "type": "float -> float -> float"
        },
        {
          "__class__": "value",
          "name": "(-.)",
          "hidden": false,
          "doc": [],
          "type": "float -> float -> float"
        },
        {
          "__class__": "value",
          "name": "(*.)",
          "hidden": false,
          "doc": [],
          "type": "float -> float -> float"
        },
        {
          "__class__": "value",
          "name": "(/.)",
          "hidden": false,
          "doc": [],
          "type": "float -> float -> float"
        },
        {
          "__class__": "value",
          "name": "(**)",
          "hidden": false,
          "doc": [],
          "type": "float -> float -> float"
        },
        {
          "__class__": "floating_documentation",
          "hidden": false,
          "text": " **Function composition and application** "
        },
        {
          "__class__": "value",
          "name": "(@@)",
          "hidden": false,
          "doc": [],
          "type": "('a -> 'b) -> 'a -> 'b"
        },
        {
          "__class__": "value",
          "name": "(|>)",
          "hidden": false,
          "doc": [],
          "type": "'a -> ('a -> 'b) -> 'b"
        },
        {
          "__class__": "value",
          "name": "(%)",
          "hidden": false,
          "doc": [],
          "type": "('a -> 'b) -> ('c -> 'a) -> 'c -> 'b"
        },
        {
          "__class__": "floating_documentation",
          "hidden": false,
          "text": " **References** "
        },
        {
          "__class__": "value",
          "name": "ref",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'a OCamlStandard.Pervasives.ref"
        },
        {
          "__class__": "value",
          "name": "(:=)",
          "hidden": false,
          "doc": [],
          "type": "'a OCamlStandard.Pervasives.ref -> 'a -> unit"
        },
        {
          "__class__": "value",
          "name": "(!)",
          "hidden": false,
          "doc": [],
          "type": "'a OCamlStandard.Pervasives.ref -> 'a"
        },
        {
          "__class__": "floating_documentation",
          "hidden": false,
          "text": " **Polymorphic comparison** "
        },
        {
          "__class__": "value",
          "name": "(=)",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'a -> bool"
        },
        {
          "__class__": "value",
          "name": "(<>)",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'a -> bool"
        },
        {
          "__class__": "value",
          "name": "(<)",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'a -> bool"
        },
        {
          "__class__": "value",
          "name": "(<=)",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'a -> bool"
        },
        {
          "__class__": "value",
          "name": "(>=)",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'a -> bool"
        },
        {
          "__class__": "value",
          "name": "(>)",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'a -> bool"
        },
        {
          "__class__": "floating_documentation",
          "hidden": false,
          "text": " **Ubiquitous functions** "
        },
        {
          "__class__": "value",
          "name": "ignore",
          "hidden": false,
          "doc": [],
          "type": "'a -> unit"
        },
        {
          "__class__": "value",
          "name": "identity",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'a"
        },
        {
          "__class__": "floating_documentation",
          "hidden": false,
          "text": " **Miscelaneous operators** "
        },
        {
          "__class__": "value",
          "name": "(@)",
          "hidden": false,
          "doc": [],
          "type": "'a list -> 'a list -> 'a list"
        },
        {
          "__class__": "value",
          "name": "(^)",
          "hidden": false,
          "doc": [],
          "type": "string -> string -> string"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Shorten",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [
            " Return type for functions used in short-circuit iterations over collections.\n  (i.e: :val:`General.Traits.Foldable.Short.S0:fold_short`) "
          ],
          "parameters": null,
          "private": false,
          "manifest": "Foundations.Shorten.t",
          "kind": "GoOn | ShortCircuit",
          "constructors": [
            {
              "__class__": "type_constructor",
              "name": "GoOn",
              "doc": [
                " Used to indicate iteration should proceed to next item "
              ],
              "payload": null
            },
            {
              "__class__": "type_constructor",
              "name": "ShortCircuit",
              "doc": [
                " Used to indicate iteration should stop after this item "
              ],
              "payload": null
            }
          ],
          "labels": []
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Traits",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": "module type of Traits",
      "alias_of": null,
      "contents": [
        {
          "__class__": "module",
          "name": "Representable",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module",
              "name": "Basic",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "repr",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> string"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "repr",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> repr_a:('a -> string) -> string"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S2",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b)",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "repr",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b) t -> repr_a:('a -> string) -> repr_b:('b -> string) -> string"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S3",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c)",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "repr",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) -> repr_c:('c -> string) -> string"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S4",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd)",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "repr",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) ->\nrepr_c:('c -> string) -> repr_d:('d -> string) -> string"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S5",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd, 'e)",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "repr",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) ->\nrepr_c:('c -> string) ->\nrepr_d:('d -> string) -> repr_e:('e -> string) -> string"
                    }
                  ]
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S1",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S2",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S3",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S4",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S5",
                  "hidden": false,
                  "kind": "module type not found"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> string"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S1",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "'a",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> repr_a:('a -> string) -> string"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S2",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t -> repr_a:('a -> string) -> repr_b:('b -> string) -> string"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S3",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) -> repr_c:('c -> string) -> string"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S4",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c, 'd)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) ->\nrepr_c:('c -> string) -> repr_d:('d -> string) -> string"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S5",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c, 'd, 'e)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) ->\nrepr_c:('c -> string) ->\nrepr_d:('d -> string) -> repr_e:('e -> string) -> string"
                }
              ]
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "Basic.S1",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "Basic.S2",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "Basic.S3",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "Basic.S4",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "Basic.S5",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "module",
              "name": "Tests",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Examples",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * string) list"
                        }
                      ]
                    },
                    {
                      "__class__": "autoocamldoc_bug",
                      "name": "Basic.S0",
                      "hidden": false,
                      "kind": "module type not found"
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t t * string) list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S2",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "((A.t, B.t) t * string) list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S3",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "((A.t, B.t, C.t) t * string) list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S4",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "((A.t, B.t, C.t, D.t) t * string) list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S5",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd, 'e)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t, D.t, E.t) t * string) list"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S0",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S1",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S2",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S3",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S4",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S5",
                  "hidden": false,
                  "kind": "module type not found"
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Equatable",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module",
              "name": "Basic",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "SPoly",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [ " Polymorphic structural equality " ],
                      "type": "'a -> 'a -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "SPhys",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [ " Physical identity (address equality) " ],
                      "type": "'a -> 'a -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S2",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b)",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b) t ->\n('a, 'b) t ->\nequal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S3",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c)",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S4",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd)",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S5",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd, 'e)",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) ->\nequal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S1",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S2",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S3",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S4",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S5",
                  "hidden": false,
                  "kind": "module type not found"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Operators",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "SPoly",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> bool"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "SPoly",
              "hidden": false,
              "doc": [ " Doc for General.Traits.Equatable.SPoly " ],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [ " Polymorphic structural equality " ],
                  "type": "'a -> 'a -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [ " Polymorphic inequality " ],
                  "type": "'a -> 'a -> bool"
                },
                {
                  "__class__": "module",
                  "name": "O",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "SPhys",
              "hidden": false,
              "doc": [ " Doc for General.Traits.Equatable.SPhys " ],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [ " Physical identity (address equality) " ],
                  "type": "'a -> 'a -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [ " Physical inequality " ],
                  "type": "'a -> 'a -> bool"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "module",
                  "name": "O",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S1",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "'a",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S2",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\nequal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\nequal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S3",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S4",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c, 'd)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S5",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c, 'd, 'e)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) ->\nequal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) ->\nequal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Different",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "different",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "different",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a M.t -> 'a M.t -> equal_a:('a -> 'a -> bool) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make2",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\nequal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "different",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b) M.t ->\n('a, 'b) M.t ->\nequal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make3",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "different",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c) M.t ->\n('a, 'b, 'c) M.t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make4",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "different",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd) M.t ->\n('a, 'b, 'c, 'd) M.t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make5",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd, 'e)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) ->\nequal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "different",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e) M.t ->\n('a, 'b, 'c, 'd, 'e) M.t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) ->\nequal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "S1",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "S2",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "S3",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "S4",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "S5",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "module",
              "name": "Tests",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Examples",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t) list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "Element",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "A.t t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t t * A.t t) list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S2",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "((A.t, B.t) t * (A.t, B.t) t) list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S3",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t) t * (A.t, B.t, C.t) t) list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S4",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t, D.t) t * (A.t, B.t, C.t, D.t) t) list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S5",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd, 'e)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t, E.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t, D.t, E.t) t * (A.t, B.t, C.t, D.t, E.t) t) list"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "module",
                          "name": "O",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "value",
                              "name": "(=)",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "(<>)",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            }
                          ]
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "M.t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "(M.t * M.t) list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> repr_a:('a -> string) -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "A.t M.t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t M.t * A.t M.t) list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make2",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\nequal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\nequal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t -> repr_a:('a -> string) -> repr_b:('b -> string) -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t) M.t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "((A.t, B.t) M.t * (A.t, B.t) M.t) list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make3",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) -> repr_c:('c -> string) -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t) M.t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t) M.t * (A.t, B.t, C.t) M.t) list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make4",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) ->\nrepr_c:('c -> string) -> repr_d:('d -> string) -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t) M.t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t, D.t) M.t * (A.t, B.t, C.t, D.t) M.t) list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make5",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd, 'e)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) ->\nequal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) ->\nequal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) ->\nrepr_c:('c -> string) ->\nrepr_d:('d -> string) -> repr_e:('e -> string) -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t, E.t) M.t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t, D.t, E.t) M.t * (A.t, B.t, C.t, D.t, E.t) M.t) list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Comparable",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module",
              "name": "Basic",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "SPoly",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> Foundations.Compare.t"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> Foundations.Compare.t"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t ->\n'a t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) -> Foundations.Compare.t"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S2",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b)",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> Foundations.Compare.t"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S3",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c)",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> Foundations.Compare.t"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S4",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd)",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> Foundations.Compare.t"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S5",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd, 'e)",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> Foundations.Compare.t"
                    }
                  ]
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S1",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S2",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S3",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S4",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S5",
                  "hidden": false,
                  "kind": "module type not found"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Operators",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "SPoly",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(<)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "(<)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "less_than",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "less_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_than",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(<)",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=)",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>)",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=)",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> bool"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "SPoly",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> 'a -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> 'a -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> 'a -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> 'a -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> 'a -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> low:'a -> high:'a -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> low:'a -> high:'a -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> 'a -> 'a"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> 'a -> 'a"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> 'a -> 'a * 'a"
                },
                {
                  "__class__": "module",
                  "name": "O",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(<)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> low:t -> high:t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> low:t -> high:t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t * t"
                },
                {
                  "__class__": "module",
                  "name": "O",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(<)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S1",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "'a",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t ->\n'a t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t ->\nlow:'a t ->\nhigh:'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t ->\nlow:'a t ->\nhigh:'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a t * 'a t"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S2",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\nlow:('a, 'b) t ->\nhigh:('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\nlow:('a, 'b) t ->\nhigh:('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) t * ('a, 'b) t"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S3",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\nlow:('a, 'b, 'c) t ->\nhigh:('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\nlow:('a, 'b, 'c) t ->\nhigh:('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> ('a, 'b, 'c) t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> ('a, 'b, 'c) t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\n('a, 'b, 'c) t * ('a, 'b, 'c) t"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S4",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c, 'd)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\nlow:('a, 'b, 'c, 'd) t ->\nhigh:('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\nlow:('a, 'b, 'c, 'd) t ->\nhigh:('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd) t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd) t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\n('a, 'b, 'c, 'd) t * ('a, 'b, 'c, 'd) t"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S5",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c, 'd, 'e)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\nlow:('a, 'b, 'c, 'd, 'e) t ->\nhigh:('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\nlow:('a, 'b, 'c, 'd, 'e) t ->\nhigh:('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd, 'e) t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd, 'e) t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) ->\n('a, 'b, 'c, 'd, 'e) t * ('a, 'b, 'c, 'd, 'e) t"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "GreaterLessThan",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> Foundations.Compare.t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "less_than",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "less_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "greater_than",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "greater_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t ->\n'a t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) -> Foundations.Compare.t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "less_than",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a M.t -> 'a M.t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "less_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a M.t -> 'a M.t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "greater_than",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a M.t -> 'a M.t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "greater_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a M.t -> 'a M.t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make2",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> Foundations.Compare.t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "less_than",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b) M.t ->\n('a, 'b) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "less_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b) M.t ->\n('a, 'b) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "greater_than",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b) M.t ->\n('a, 'b) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "greater_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b) M.t ->\n('a, 'b) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make3",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> Foundations.Compare.t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "less_than",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c) M.t ->\n('a, 'b, 'c) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "less_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c) M.t ->\n('a, 'b, 'c) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "greater_than",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c) M.t ->\n('a, 'b, 'c) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "greater_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c) M.t ->\n('a, 'b, 'c) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make4",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> Foundations.Compare.t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "less_than",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd) M.t ->\n('a, 'b, 'c, 'd) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "less_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd) M.t ->\n('a, 'b, 'c, 'd) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "greater_than",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd) M.t ->\n('a, 'b, 'c, 'd) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "greater_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd) M.t ->\n('a, 'b, 'c, 'd) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make5",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd, 'e)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> Foundations.Compare.t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "less_than",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e) M.t ->\n('a, 'b, 'c, 'd, 'e) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "less_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e) M.t ->\n('a, 'b, 'c, 'd, 'e) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "greater_than",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e) M.t ->\n('a, 'b, 'c, 'd, 'e) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "greater_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e) M.t ->\n('a, 'b, 'c, 'd, 'e) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Between",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "less_than",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "less_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_than",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "between",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> low:M.t -> high:M.t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "between_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> low:M.t -> high:M.t -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "less_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "less_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "between",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a M.t ->\nlow:'a M.t ->\nhigh:'a M.t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "between_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a M.t ->\nlow:'a M.t ->\nhigh:'a M.t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make2",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "less_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "less_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "between",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b) M.t ->\nlow:('a, 'b) M.t ->\nhigh:('a, 'b) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "between_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b) M.t ->\nlow:('a, 'b) M.t ->\nhigh:('a, 'b) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make3",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "less_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "less_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "between",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c) M.t ->\nlow:('a, 'b, 'c) M.t ->\nhigh:('a, 'b, 'c) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "between_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c) M.t ->\nlow:('a, 'b, 'c) M.t ->\nhigh:('a, 'b, 'c) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make4",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "less_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "less_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "between",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd) M.t ->\nlow:('a, 'b, 'c, 'd) M.t ->\nhigh:('a, 'b, 'c, 'd) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "between_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd) M.t ->\nlow:('a, 'b, 'c, 'd) M.t ->\nhigh:('a, 'b, 'c, 'd) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make5",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd, 'e)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "less_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "less_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "between",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e) M.t ->\nlow:('a, 'b, 'c, 'd, 'e) M.t ->\nhigh:('a, 'b, 'c, 'd, 'e) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "between_or_equal",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e) M.t ->\nlow:('a, 'b, 'c, 'd, 'e) M.t ->\nhigh:('a, 'b, 'c, 'd, 'e) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "MinMax",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> Foundations.Compare.t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "min",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "max",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "min_max",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> M.t * M.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t ->\n'a t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) -> Foundations.Compare.t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "min",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a M.t -> 'a M.t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "max",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a M.t -> 'a M.t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "min_max",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a M.t ->\n'a M.t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a M.t * 'a M.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make2",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> Foundations.Compare.t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "min",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b) M.t ->\n('a, 'b) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "max",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b) M.t ->\n('a, 'b) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "min_max",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b) M.t ->\n('a, 'b) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) M.t * ('a, 'b) M.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make3",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> Foundations.Compare.t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "min",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c) M.t ->\n('a, 'b, 'c) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> ('a, 'b, 'c) M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "max",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c) M.t ->\n('a, 'b, 'c) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> ('a, 'b, 'c) M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "min_max",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c) M.t ->\n('a, 'b, 'c) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\n('a, 'b, 'c) M.t * ('a, 'b, 'c) M.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make4",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> Foundations.Compare.t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "min",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd) M.t ->\n('a, 'b, 'c, 'd) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd) M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "max",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd) M.t ->\n('a, 'b, 'c, 'd) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd) M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "min_max",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd) M.t ->\n('a, 'b, 'c, 'd) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\n('a, 'b, 'c, 'd) M.t * ('a, 'b, 'c, 'd) M.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make5",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd, 'e)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> Foundations.Compare.t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "min",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e) M.t ->\n('a, 'b, 'c, 'd, 'e) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd, 'e) M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "max",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e) M.t ->\n('a, 'b, 'c, 'd, 'e) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd, 'e) M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "min_max",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e) M.t ->\n('a, 'b, 'c, 'd, 'e) M.t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) ->\n('a, 'b, 'c, 'd, 'e) M.t * ('a, 'b, 'c, 'd, 'e) M.t"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "S1",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "S2",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "S3",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "S4",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "autoocamldoc_bug",
              "name": "S5",
              "hidden": false,
              "kind": "module type not found"
            },
            {
              "__class__": "module",
              "name": "Tests",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Examples",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t list list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "Element",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> Foundations.Compare.t"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "A.t t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "A.t t list list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S2",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t) t list list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S3",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t) t list list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S4",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t) t list list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S5",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd, 'e)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t, E.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t, E.t) t list list"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> Foundations.Compare.t"
                        },
                        {
                          "__class__": "value",
                          "name": "less_than",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "less_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_than",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "between",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> low:t -> high:t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "between_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> low:t -> high:t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "min",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "max",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "min_max",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t * t"
                        },
                        {
                          "__class__": "module",
                          "name": "O",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "value",
                              "name": "(<)",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "(<=)",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "(>)",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "(>=)",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            }
                          ]
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "M.t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "M.t list list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t ->\n'a t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) -> Foundations.Compare.t"
                        },
                        {
                          "__class__": "value",
                          "name": "less_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "less_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "between",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t ->\nlow:'a t ->\nhigh:'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "between_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t ->\nlow:'a t ->\nhigh:'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "min",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "max",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "min_max",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a t * 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> repr_a:('a -> string) -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "A.t M.t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "A.t M.t list list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make2",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> Foundations.Compare.t"
                        },
                        {
                          "__class__": "value",
                          "name": "less_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "less_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "between",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\nlow:('a, 'b) t ->\nhigh:('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "between_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\nlow:('a, 'b) t ->\nhigh:('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "min",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) t"
                        },
                        {
                          "__class__": "value",
                          "name": "max",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) t"
                        },
                        {
                          "__class__": "value",
                          "name": "min_max",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) t * ('a, 'b) t"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t ->\n('a, 'b) t ->\nequal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b) t -> repr_a:('a -> string) -> repr_b:('b -> string) -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t) M.t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t) M.t list list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make3",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> Foundations.Compare.t"
                        },
                        {
                          "__class__": "value",
                          "name": "less_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "less_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "between",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\nlow:('a, 'b, 'c) t ->\nhigh:('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "between_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\nlow:('a, 'b, 'c) t ->\nhigh:('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "min",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> ('a, 'b, 'c) t"
                        },
                        {
                          "__class__": "value",
                          "name": "max",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> ('a, 'b, 'c) t"
                        },
                        {
                          "__class__": "value",
                          "name": "min_max",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\n('a, 'b, 'c) t * ('a, 'b, 'c) t"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) -> repr_c:('c -> string) -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t) M.t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t) M.t list list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make4",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> Foundations.Compare.t"
                        },
                        {
                          "__class__": "value",
                          "name": "less_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "less_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "between",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\nlow:('a, 'b, 'c, 'd) t ->\nhigh:('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "between_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\nlow:('a, 'b, 'c, 'd) t ->\nhigh:('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "min",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd) t"
                        },
                        {
                          "__class__": "value",
                          "name": "max",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd) t"
                        },
                        {
                          "__class__": "value",
                          "name": "min_max",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\n('a, 'b, 'c, 'd) t * ('a, 'b, 'c, 'd) t"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) ->\nrepr_c:('c -> string) -> repr_d:('d -> string) -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t) M.t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t) M.t list list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make5",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd, 'e)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> Foundations.Compare.t"
                        },
                        {
                          "__class__": "value",
                          "name": "less_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "less_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_than",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "greater_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "between",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\nlow:('a, 'b, 'c, 'd, 'e) t ->\nhigh:('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "between_or_equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\nlow:('a, 'b, 'c, 'd, 'e) t ->\nhigh:('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "min",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd, 'e) t"
                        },
                        {
                          "__class__": "value",
                          "name": "max",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd, 'e) t"
                        },
                        {
                          "__class__": "value",
                          "name": "min_max",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) ->\n('a, 'b, 'c, 'd, 'e) t * ('a, 'b, 'c, 'd, 'e) t"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) ->\nequal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'b, 'c, 'd, 'e) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) ->\nrepr_c:('c -> string) ->\nrepr_d:('d -> string) -> repr_e:('e -> string) -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Examples.Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t, E.t) M.t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t, E.t) M.t list list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Displayable",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module",
              "name": "Basic",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> string"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "to_string",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> string"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Tests",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Examples",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "to_string",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * string) list"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S0",
                  "hidden": false,
                  "kind": "module type not found"
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "FilterMapable",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "elt",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(elt -> elt) -> t"
                },
                {
                  "__class__": "value",
                  "name": "map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> elt -> elt) -> t"
                },
                {
                  "__class__": "value",
                  "name": "map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * elt) -> t"
                },
                {
                  "__class__": "value",
                  "name": "filter",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(elt -> bool) -> t"
                },
                {
                  "__class__": "value",
                  "name": "filter_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> elt -> bool) -> t"
                },
                {
                  "__class__": "value",
                  "name": "filter_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * bool) -> t"
                },
                {
                  "__class__": "value",
                  "name": "filter_map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(elt -> elt option) -> t"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> elt -> elt option) -> t"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * elt option) -> t"
                },
                {
                  "__class__": "value",
                  "name": "flat_map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(elt -> t) -> t"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> elt -> t) -> t"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * t) -> t"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S1",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "'a",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "map",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:('a -> 'b) -> 'b t"
                },
                {
                  "__class__": "value",
                  "name": "map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:(i:int -> 'a -> 'b) -> 'b t"
                },
                {
                  "__class__": "value",
                  "name": "map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b) -> 'b t"
                },
                {
                  "__class__": "value",
                  "name": "filter",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:('a -> bool) -> 'a t"
                },
                {
                  "__class__": "value",
                  "name": "filter_i",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:(i:int -> 'a -> bool) -> 'a t"
                },
                {
                  "__class__": "value",
                  "name": "filter_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a t"
                },
                {
                  "__class__": "value",
                  "name": "filter_map",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:('a -> 'b option) -> 'b t"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:(i:int -> 'a -> 'b option) -> 'b t"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b t"
                },
                {
                  "__class__": "value",
                  "name": "flat_map",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:('a -> 'b t) -> 'b t"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:(i:int -> 'a -> 'b t) -> 'b t"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b t) -> 'b t"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "ToContainer",
              "hidden": false,
              "doc": [],
              "functor_parameters": [
                {
                  "__class__": "functor_parameter",
                  "name": "C",
                  "functor_parameters": [],
                  "doc": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    }
                  ]
                }
              ],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "elt",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> 'b) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> 'b) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * 'b) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "filter",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> bool) -> elt C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> bool) -> elt C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * bool) -> elt C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> 'b option) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> 'b option) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * 'b option) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> 'b C.t) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> 'b C.t) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * 'b C.t) -> 'b C.t"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> 'b) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> 'b) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "filter",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> bool) -> 'a C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> bool) -> 'a C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> 'b option) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> f:(i:int -> 'a -> 'b option) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> 'b C.t) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> 'b C.t) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b C.t) -> 'b C.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Tests",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module",
                      "name": "Make1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "M",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "of_list",
                              "hidden": false,
                              "doc": [],
                              "type": "'a list -> 'a t"
                            }
                          ]
                        },
                        {
                          "__class__": "functor_parameter",
                          "name": "ToContainer",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "'a M.t -> f:('a -> 'b) -> 'b C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "map_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:(i:int -> 'a -> 'b) -> 'b C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "map_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc -> 'a M.t -> f:(acc:'acc -> 'a -> 'acc * 'b) -> 'b C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "'a M.t -> f:('a -> bool) -> 'a C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:(i:int -> 'a -> bool) -> 'a C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc -> 'a M.t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:('a -> 'b option) -> 'b C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:(i:int -> 'a -> 'b option) -> 'b C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc -> 'a M.t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "flat_map",
                              "hidden": false,
                              "doc": [],
                              "type": "'a M.t -> f:('a -> 'b C.t) -> 'b C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "flat_map_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:(i:int -> 'a -> 'b C.t) -> 'b C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "flat_map_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc -> 'a M.t -> f:(acc:'acc -> 'a -> 'acc * 'b C.t) -> 'b C.t"
                            }
                          ]
                        },
                        {
                          "__class__": "functor_parameter",
                          "name": "Container",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "value",
                              "name": "of_list",
                              "hidden": false,
                              "doc": [],
                              "type": "'a list -> 'a C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "to_list",
                              "hidden": false,
                              "doc": [],
                              "type": "'a C.t -> 'a list"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "test",
                          "hidden": false,
                          "doc": [],
                          "type": "Testing.Test.t"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "ToList",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "elt",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> 'b) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> 'b) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * 'b) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> bool) -> elt list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> bool) -> elt list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * bool) -> elt list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> 'b option) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> 'b option) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * 'b option) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> 'b list) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> 'b list) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * 'b list) -> 'b list"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> 'b) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> 'b) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> bool) -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> bool) -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> 'b option) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> f:(i:int -> 'a -> 'b option) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> 'b list) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> 'b list) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b list) -> 'b list"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Tests",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module",
                      "name": "Make1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "M",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "of_list",
                              "hidden": false,
                              "doc": [],
                              "type": "'a list -> 'a t"
                            }
                          ]
                        },
                        {
                          "__class__": "functor_parameter",
                          "name": "ToContainer",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "'a M.t -> f:('a -> 'b) -> 'b list"
                            },
                            {
                              "__class__": "value",
                              "name": "map_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:(i:int -> 'a -> 'b) -> 'b list"
                            },
                            {
                              "__class__": "value",
                              "name": "map_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc -> 'a M.t -> f:(acc:'acc -> 'a -> 'acc * 'b) -> 'b list"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "'a M.t -> f:('a -> bool) -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:(i:int -> 'a -> bool) -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc -> 'a M.t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:('a -> 'b option) -> 'b list"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:(i:int -> 'a -> 'b option) -> 'b list"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc -> 'a M.t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b list"
                            },
                            {
                              "__class__": "value",
                              "name": "flat_map",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:('a -> 'b list) -> 'b list"
                            },
                            {
                              "__class__": "value",
                              "name": "flat_map_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:(i:int -> 'a -> 'b list) -> 'b list"
                            },
                            {
                              "__class__": "value",
                              "name": "flat_map_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc -> 'a M.t -> f:(acc:'acc -> 'a -> 'acc * 'b list) -> 'b list"
                            }
                          ]
                        },
                        {
                          "__class__": "functor_parameter",
                          "name": "Container",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "value",
                              "name": "of_list",
                              "hidden": false,
                              "doc": [],
                              "type": "'a list -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "to_list",
                              "hidden": false,
                              "doc": [],
                              "type": "'a list -> 'a list"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "test",
                          "hidden": false,
                          "doc": [],
                          "type": "Testing.Test.t"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "ToArray",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "elt",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> 'b) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> 'b) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * 'b) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "filter",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> bool) -> elt array"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> bool) -> elt array"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * bool) -> elt array"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> 'b option) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "t -> f:(i:int -> elt -> 'b option) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * 'b option) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> 'b array) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> 'b array) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * 'b array) -> 'b array"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> 'b) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> 'b) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "filter",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> bool) -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> bool) -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> 'b option) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> f:(i:int -> 'a -> 'b option) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> 'b array) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> f:(i:int -> 'a -> 'b array) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b array) -> 'b array"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Tests",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module",
                      "name": "Make1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "M",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "of_list",
                              "hidden": false,
                              "doc": [],
                              "type": "'a list -> 'a t"
                            }
                          ]
                        },
                        {
                          "__class__": "functor_parameter",
                          "name": "ToContainer",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "'a M.t -> f:('a -> 'b) -> 'b array"
                            },
                            {
                              "__class__": "value",
                              "name": "map_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:(i:int -> 'a -> 'b) -> 'b array"
                            },
                            {
                              "__class__": "value",
                              "name": "map_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc -> 'a M.t -> f:(acc:'acc -> 'a -> 'acc * 'b) -> 'b array"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "'a M.t -> f:('a -> bool) -> 'a array"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:(i:int -> 'a -> bool) -> 'a array"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc -> 'a M.t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a array"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:('a -> 'b option) -> 'b array"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:(i:int -> 'a -> 'b option) -> 'b array"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc -> 'a M.t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b array"
                            },
                            {
                              "__class__": "value",
                              "name": "flat_map",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:('a -> 'b array) -> 'b array"
                            },
                            {
                              "__class__": "value",
                              "name": "flat_map_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a M.t -> f:(i:int -> 'a -> 'b array) -> 'b array"
                            },
                            {
                              "__class__": "value",
                              "name": "flat_map_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc -> 'a M.t -> f:(acc:'acc -> 'a -> 'acc * 'b array) -> 'b array"
                            }
                          ]
                        },
                        {
                          "__class__": "functor_parameter",
                          "name": "Container",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "value",
                              "name": "of_list",
                              "hidden": false,
                              "doc": [],
                              "type": "'a list -> 'a array"
                            },
                            {
                              "__class__": "value",
                              "name": "to_list",
                              "hidden": false,
                              "doc": [],
                              "type": "'a array -> 'a list"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "test",
                          "hidden": false,
                          "doc": [],
                          "type": "Testing.Test.t"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Tests",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Make1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> f:('a -> 'b) -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "map_i",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> f:(i:int -> 'a -> 'b) -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "map_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b) -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> f:('a -> bool) -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_i",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> f:(i:int -> 'a -> bool) -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> f:('a -> 'b option) -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> f:(i:int -> 'a -> 'b option) -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "flat_map",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> f:('a -> 'b t) -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "flat_map_i",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> f:(i:int -> 'a -> 'b t) -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "flat_map_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b t) -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "to_list",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "of_list",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Foldable",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module",
              "name": "Basic",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "elt",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "fold",
                      "hidden": false,
                      "doc": [],
                      "type": "init:'b -> t -> f:('b -> elt -> 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'b -> t -> f:(i:int -> 'b -> elt -> 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> init:'b -> t -> f:(acc:'acc -> 'b -> elt -> 'acc * 'b) -> 'b"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "fold",
                      "hidden": false,
                      "doc": [],
                      "type": "init:'b -> 'a t -> f:('b -> 'a -> 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'b -> 'a t -> f:(i:int -> 'b -> 'a -> 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> init:'b -> 'a t -> f:(acc:'acc -> 'b -> 'a -> 'acc * 'b) -> 'b"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "elt",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "fold",
                  "hidden": false,
                  "doc": [],
                  "type": "init:'b -> t -> f:('b -> elt -> 'b) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "fold_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'b -> t -> f:(i:int -> 'b -> elt -> 'b) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "fold_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> init:'b -> t -> f:(acc:'acc -> 'b -> elt -> 'acc * 'b) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "reduce",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(elt -> elt -> elt) -> elt"
                },
                {
                  "__class__": "value",
                  "name": "reduce_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> elt -> elt -> elt) -> elt"
                },
                {
                  "__class__": "value",
                  "name": "reduce_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> elt -> elt -> 'acc * elt) -> elt"
                },
                {
                  "__class__": "value",
                  "name": "try_reduce",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(elt -> elt -> elt) -> elt option"
                },
                {
                  "__class__": "value",
                  "name": "try_reduce_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> elt -> elt -> elt) -> elt option"
                },
                {
                  "__class__": "value",
                  "name": "try_reduce_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> elt -> elt -> 'acc * elt) -> elt option"
                },
                {
                  "__class__": "value",
                  "name": "iter",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(elt -> unit) -> unit"
                },
                {
                  "__class__": "value",
                  "name": "iter_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> elt -> unit) -> unit"
                },
                {
                  "__class__": "value",
                  "name": "iter_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc) -> unit"
                },
                {
                  "__class__": "value",
                  "name": "count",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(elt -> bool) -> int"
                },
                {
                  "__class__": "value",
                  "name": "count_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> elt -> bool) -> int"
                },
                {
                  "__class__": "value",
                  "name": "count_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * bool) -> int"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S1",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "'a",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "fold",
                  "hidden": false,
                  "doc": [],
                  "type": "init:'b -> 'a t -> f:('b -> 'a -> 'b) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "fold_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'b -> 'a t -> f:(i:int -> 'b -> 'a -> 'b) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "fold_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> init:'b -> 'a t -> f:(acc:'acc -> 'b -> 'a -> 'acc * 'b) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "reduce",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:('a -> 'a -> 'a) -> 'a"
                },
                {
                  "__class__": "value",
                  "name": "reduce_i",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:(i:int -> 'a -> 'a -> 'a) -> 'a"
                },
                {
                  "__class__": "value",
                  "name": "reduce_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'a -> 'acc * 'a) -> 'a"
                },
                {
                  "__class__": "value",
                  "name": "try_reduce",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:('a -> 'a -> 'a) -> 'a option"
                },
                {
                  "__class__": "value",
                  "name": "try_reduce_i",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:(i:int -> 'a -> 'a -> 'a) -> 'a option"
                },
                {
                  "__class__": "value",
                  "name": "try_reduce_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'a -> 'acc * 'a) -> 'a option"
                },
                {
                  "__class__": "value",
                  "name": "iter",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:('a -> unit) -> unit"
                },
                {
                  "__class__": "value",
                  "name": "iter_i",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:(i:int -> 'a -> unit) -> unit"
                },
                {
                  "__class__": "value",
                  "name": "iter_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc) -> unit"
                },
                {
                  "__class__": "value",
                  "name": "count",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:('a -> bool) -> int"
                },
                {
                  "__class__": "value",
                  "name": "count_i",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:(i:int -> 'a -> bool) -> int"
                },
                {
                  "__class__": "value",
                  "name": "count_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> int"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Right",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Basic",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> init:'b -> f:(elt -> 'b -> 'b) -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> init:'b -> f:(i:int -> elt -> 'b -> 'b) -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc -> t -> init:'b -> f:(acc:'acc -> elt -> 'b -> 'acc * 'b) -> 'b"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> init:'b -> f:('a -> 'b -> 'b) -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> init:'b -> f:(i:int -> 'a -> 'b -> 'b) -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc -> 'a t -> init:'b -> f:(acc:'acc -> 'a -> 'b -> 'acc * 'b) -> 'b"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "elt",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> init:'b -> f:(elt -> 'b -> 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "t -> init:'b -> f:(i:int -> elt -> 'b -> 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> init:'b -> f:(acc:'acc -> elt -> 'b -> 'acc * 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "reduce_right",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> elt -> elt) -> elt"
                    },
                    {
                      "__class__": "value",
                      "name": "reduce_right_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> elt -> elt) -> elt"
                    },
                    {
                      "__class__": "value",
                      "name": "reduce_right_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> elt -> 'acc * elt) -> elt"
                    },
                    {
                      "__class__": "value",
                      "name": "try_reduce_right",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> elt -> elt) -> elt option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_reduce_right_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "t -> f:(i:int -> elt -> elt -> elt) -> elt option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_reduce_right_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> elt -> 'acc * elt) -> elt option"
                    },
                    {
                      "__class__": "value",
                      "name": "iter_right",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iter_right_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iter_right_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * unit) -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> init:'b -> f:('a -> 'b -> 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> init:'b -> f:(i:int -> 'a -> 'b -> 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> init:'b -> f:(acc:'acc -> 'a -> 'b -> 'acc * 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "reduce_right",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> 'a -> 'a) -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "reduce_right_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> 'a -> 'a) -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "reduce_right_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'a -> 'acc * 'a) -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "try_reduce_right",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> 'a -> 'a) -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_reduce_right_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> f:(i:int -> 'a -> 'a -> 'a) -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_reduce_right_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'a -> 'acc * 'a) -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "iter_right",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iter_right_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iter_right_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * unit) -> unit"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Short",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Basic",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "fold_short",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'b -> t -> f:('b -> elt -> Foundations.Shorten.t * 'b) -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_short_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'b -> t -> f:(i:int -> 'b -> elt -> Foundations.Shorten.t * 'b) -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_short_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\ninit:'b ->\nt -> f:(acc:'acc -> 'b -> elt -> 'acc * Foundations.Shorten.t * 'b) -> 'b"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "fold_short",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'b -> 'a t -> f:('b -> 'a -> Foundations.Shorten.t * 'b) -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_short_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'b -> 'a t -> f:(i:int -> 'b -> 'a -> Foundations.Shorten.t * 'b) -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_short_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\ninit:'b ->\n'a t -> f:(acc:'acc -> 'b -> 'a -> 'acc * Foundations.Shorten.t * 'b) -> 'b"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "elt",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "fold_short",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'b -> t -> f:('b -> elt -> Foundations.Shorten.t * 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_short_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'b -> t -> f:(i:int -> 'b -> elt -> Foundations.Shorten.t * 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_short_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc ->\ninit:'b ->\nt -> f:(acc:'acc -> 'b -> elt -> 'acc * Foundations.Shorten.t * 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "reduce_short",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "t -> f:(elt -> elt -> Foundations.Shorten.t * elt) -> elt"
                    },
                    {
                      "__class__": "value",
                      "name": "reduce_short_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "t -> f:(i:int -> elt -> elt -> Foundations.Shorten.t * elt) -> elt"
                    },
                    {
                      "__class__": "value",
                      "name": "reduce_short_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc ->\nt -> f:(acc:'acc -> elt -> elt -> 'acc * Foundations.Shorten.t * elt) -> elt"
                    },
                    {
                      "__class__": "value",
                      "name": "try_reduce_short",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "t -> f:(elt -> elt -> Foundations.Shorten.t * elt) -> elt option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_reduce_short_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "t -> f:(i:int -> elt -> elt -> Foundations.Shorten.t * elt) -> elt option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_reduce_short_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc ->\nt ->\nf:(acc:'acc -> elt -> elt -> 'acc * Foundations.Shorten.t * elt) ->\nelt option"
                    },
                    {
                      "__class__": "value",
                      "name": "iter_short",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> Foundations.Shorten.t) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iter_short_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "t -> f:(i:int -> elt -> Foundations.Shorten.t) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iter_short_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * Foundations.Shorten.t) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> bool) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> bool) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * bool) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "there_exists",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> bool) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "there_exists_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> bool) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "there_exists_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * bool) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "find",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> bool) -> elt"
                    },
                    {
                      "__class__": "value",
                      "name": "find_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> bool) -> elt"
                    },
                    {
                      "__class__": "value",
                      "name": "find_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * bool) -> elt"
                    },
                    {
                      "__class__": "value",
                      "name": "try_find",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> bool) -> elt option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_find_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> bool) -> elt option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_find_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * bool) -> elt option"
                    },
                    {
                      "__class__": "value",
                      "name": "find_map",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> 'b option) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "find_map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> elt -> 'b option) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "find_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * 'b option) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "try_find_map",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(elt -> 'b option) -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_find_map_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "t -> f:(i:int -> elt -> 'b option) -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_find_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * 'b option) -> 'b option"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "fold_short",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'b -> 'a t -> f:('b -> 'a -> Foundations.Shorten.t * 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_short_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'b -> 'a t -> f:(i:int -> 'b -> 'a -> Foundations.Shorten.t * 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_short_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc ->\ninit:'b ->\n'a t -> f:(acc:'acc -> 'b -> 'a -> 'acc * Foundations.Shorten.t * 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "reduce_short",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> f:('a -> 'a -> Foundations.Shorten.t * 'a) -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "reduce_short_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> f:(i:int -> 'a -> 'a -> Foundations.Shorten.t * 'a) -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "reduce_short_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc ->\n'a t -> f:(acc:'acc -> 'a -> 'a -> 'acc * Foundations.Shorten.t * 'a) -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "try_reduce_short",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> f:('a -> 'a -> Foundations.Shorten.t * 'a) -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_reduce_short_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> f:(i:int -> 'a -> 'a -> Foundations.Shorten.t * 'a) -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_reduce_short_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc ->\n'a t ->\nf:(acc:'acc -> 'a -> 'a -> 'acc * Foundations.Shorten.t * 'a) -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "iter_short",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> f:('a -> Foundations.Shorten.t) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iter_short_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> f:(i:int -> 'a -> Foundations.Shorten.t) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iter_short_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc ->\n'a t -> f:(acc:'acc -> 'a -> 'acc * Foundations.Shorten.t) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> bool) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> bool) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "there_exists",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> bool) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "there_exists_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> bool) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "there_exists_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "find",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> bool) -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "find_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> bool) -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "find_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "try_find",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> bool) -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_find_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> bool) -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_find_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "find_map",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> 'b option) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "find_map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:(i:int -> 'a -> 'b option) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "find_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "try_find_map",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> f:('a -> 'b option) -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_find_map_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> f:(i:int -> 'a -> 'b option) -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "try_find_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b option"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Right",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module",
                      "name": "Basic",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "module_type",
                          "name": "S0",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "elt",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "fold_short_right",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "t -> init:'b -> f:(elt -> 'b -> Foundations.Shorten.t * 'b) -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "fold_short_right_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "t -> init:'b -> f:(i:int -> elt -> 'b -> Foundations.Shorten.t * 'b) -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "fold_short_right_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc ->\nt ->\ninit:'b ->\nf:(acc:'acc -> elt -> 'b -> 'acc * Foundations.Shorten.t * 'b) -> 'b"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "S1",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "fold_short_right",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a t -> init:'b -> f:('a -> 'b -> Foundations.Shorten.t * 'b) -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "fold_short_right_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a t -> init:'b -> f:(i:int -> 'a -> 'b -> Foundations.Shorten.t * 'b) -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "fold_short_right_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc ->\n'a t ->\ninit:'b ->\nf:(acc:'acc -> 'a -> 'b -> 'acc * Foundations.Shorten.t * 'b) -> 'b"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "fold_short_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> init:'b -> f:(elt -> 'b -> Foundations.Shorten.t * 'b) -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_short_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> init:'b -> f:(i:int -> elt -> 'b -> Foundations.Shorten.t * 'b) -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_short_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\nt ->\ninit:'b ->\nf:(acc:'acc -> elt -> 'b -> 'acc * Foundations.Shorten.t * 'b) -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "reduce_short_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> f:(elt -> elt -> Foundations.Shorten.t * elt) -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "reduce_short_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> f:(i:int -> elt -> elt -> Foundations.Shorten.t * elt) -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "reduce_short_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\nt -> f:(acc:'acc -> elt -> elt -> 'acc * Foundations.Shorten.t * elt) -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "try_reduce_short_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> f:(elt -> elt -> Foundations.Shorten.t * elt) -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "try_reduce_short_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> f:(i:int -> elt -> elt -> Foundations.Shorten.t * elt) -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "try_reduce_short_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\nt ->\nf:(acc:'acc -> elt -> elt -> 'acc * Foundations.Shorten.t * elt) ->\nelt option"
                        },
                        {
                          "__class__": "value",
                          "name": "iter_short_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> f:(elt -> Foundations.Shorten.t) -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iter_short_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> f:(i:int -> elt -> Foundations.Shorten.t) -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iter_short_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc -> t -> f:(acc:'acc -> elt -> 'acc * Foundations.Shorten.t) -> unit"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "fold_short_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> init:'b -> f:('a -> 'b -> Foundations.Shorten.t * 'b) -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_short_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> init:'b -> f:(i:int -> 'a -> 'b -> Foundations.Shorten.t * 'b) -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_short_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\n'a t ->\ninit:'b ->\nf:(acc:'acc -> 'a -> 'b -> 'acc * Foundations.Shorten.t * 'b) -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "reduce_short_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> f:('a -> 'a -> Foundations.Shorten.t * 'a) -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "reduce_short_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> f:(i:int -> 'a -> 'a -> Foundations.Shorten.t * 'a) -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "reduce_short_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\n'a t -> f:(acc:'acc -> 'a -> 'a -> 'acc * Foundations.Shorten.t * 'a) -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "try_reduce_short_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> f:('a -> 'a -> Foundations.Shorten.t * 'a) -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "try_reduce_short_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> f:(i:int -> 'a -> 'a -> Foundations.Shorten.t * 'a) -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "try_reduce_short_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\n'a t ->\nf:(acc:'acc -> 'a -> 'a -> 'acc * Foundations.Shorten.t * 'a) -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "iter_short_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> f:('a -> Foundations.Shorten.t) -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iter_short_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> f:(i:int -> 'a -> Foundations.Shorten.t) -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iter_short_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\n'a t -> f:(acc:'acc -> 'a -> 'acc * Foundations.Shorten.t) -> unit"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Parsable",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module",
              "name": "Basic",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "try_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> t option"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> t"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "try_of_string",
                  "hidden": false,
                  "doc": [],
                  "type": "string -> t option"
                },
                {
                  "__class__": "value",
                  "name": "of_string",
                  "hidden": false,
                  "doc": [],
                  "type": "string -> t"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Tests",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Examples",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "of_string",
                          "hidden": false,
                          "doc": [],
                          "type": "(string * t) list"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "try_of_string",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> t option"
                        },
                        {
                          "__class__": "value",
                          "name": "of_string",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "of_string",
                          "hidden": false,
                          "doc": [],
                          "type": "(string * M.t) list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "PredSucc",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "succ",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "pred",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Make0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [
                {
                  "__class__": "functor_parameter",
                  "name": "M",
                  "functor_parameters": [],
                  "doc": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "one",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "substract",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    }
                  ]
                }
              ],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "pred",
                  "hidden": false,
                  "doc": [],
                  "type": "M.t -> M.t"
                },
                {
                  "__class__": "value",
                  "name": "succ",
                  "hidden": false,
                  "doc": [],
                  "type": "M.t -> M.t"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Tests",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Examples",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "succ",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t) list"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "succ",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "pred",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "succ",
                          "hidden": false,
                          "doc": [],
                          "type": "(M.t * M.t) list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Ringoid",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module",
              "name": "Basic",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "zero",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "one",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "negate",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "substract",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "multiply",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "divide",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Operators",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "(~+)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(~-)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(+)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(-)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(*)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(/)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(**)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "negate",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "substract",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "multiply",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "divide",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "exponentiate",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int -> t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(~+)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "(~-)",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "(+)",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "(-)",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "(*)",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "(/)",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> M.t"
                    },
                    {
                      "__class__": "value",
                      "name": "(**)",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> int -> M.t"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "zero",
                  "hidden": false,
                  "doc": [],
                  "type": "t"
                },
                {
                  "__class__": "value",
                  "name": "one",
                  "hidden": false,
                  "doc": [],
                  "type": "t"
                },
                {
                  "__class__": "value",
                  "name": "negate",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "add",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "substract",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "multiply",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "divide",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "square",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "exponentiate",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> int -> t"
                },
                {
                  "__class__": "module",
                  "name": "O",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(~+)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(~-)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(+)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(-)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(*)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(/)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(**)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> t"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Substract",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "negate",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "substract",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> M.t"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Square",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "multiply",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "square",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Exponentiate",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "one",
                          "hidden": false,
                          "doc": [],
                          "type": "t"
                        },
                        {
                          "__class__": "value",
                          "name": "square",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "multiply",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "exponentiate_negative_exponent",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "exponentiate:(t -> int -> t) -> t -> int -> t"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "exponentiate",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> int -> M.t"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Tests",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Examples",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "add_substract",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "negate",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "multiply",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "divide",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "exponentiate",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * int * t) list"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "zero",
                          "hidden": false,
                          "doc": [],
                          "type": "t"
                        },
                        {
                          "__class__": "value",
                          "name": "one",
                          "hidden": false,
                          "doc": [],
                          "type": "t"
                        },
                        {
                          "__class__": "value",
                          "name": "negate",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "substract",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "multiply",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "divide",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "square",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "exponentiate",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int -> t"
                        },
                        {
                          "__class__": "module",
                          "name": "O",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "value",
                              "name": "(~+)",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "(~-)",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "(+)",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "(-)",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "(*)",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "(/)",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "(**)",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int -> t"
                            }
                          ]
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        }
                      ]
                    },
                    {
                      "__class__": "functor_parameter",
                      "name": "E",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "add_substract",
                          "hidden": false,
                          "doc": [],
                          "type": "(M.t * M.t * M.t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "negate",
                          "hidden": false,
                          "doc": [],
                          "type": "(M.t * M.t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "multiply",
                          "hidden": false,
                          "doc": [],
                          "type": "(M.t * M.t * M.t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "divide",
                          "hidden": false,
                          "doc": [],
                          "type": "(M.t * M.t * M.t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "exponentiate",
                          "hidden": false,
                          "doc": [],
                          "type": "(M.t * int * M.t) list"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "test",
                      "hidden": false,
                      "doc": [],
                      "type": "Testing.Test.t"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Scanable",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "elt",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "scan",
                  "hidden": false,
                  "doc": [],
                  "type": "init:elt -> t -> f:(elt -> elt -> elt) -> t"
                },
                {
                  "__class__": "value",
                  "name": "scan_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:elt -> t -> f:(i:int -> elt -> elt -> elt) -> t"
                },
                {
                  "__class__": "value",
                  "name": "scan_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> init:elt -> t -> f:(acc:'acc -> elt -> elt -> 'acc * elt) -> t"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S1",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "'a",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "scan",
                  "hidden": false,
                  "doc": [],
                  "type": "init:'b -> 'a t -> f:('b -> 'a -> 'b) -> 'b t"
                },
                {
                  "__class__": "value",
                  "name": "scan_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'b -> 'a t -> f:(i:int -> 'b -> 'a -> 'b) -> 'b t"
                },
                {
                  "__class__": "value",
                  "name": "scan_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> init:'b -> 'a t -> f:(acc:'acc -> 'b -> 'a -> 'acc * 'b) -> 'b t"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "ToContainer",
              "hidden": false,
              "doc": [],
              "functor_parameters": [
                {
                  "__class__": "functor_parameter",
                  "name": "C",
                  "functor_parameters": [],
                  "doc": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    }
                  ]
                }
              ],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "elt",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "scan",
                      "hidden": false,
                      "doc": [],
                      "type": "init:'a -> t -> f:('a -> elt -> 'a) -> 'a C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'a -> t -> f:(i:int -> 'a -> elt -> 'a) -> 'a C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> init:'a -> t -> f:(acc:'acc -> 'a -> elt -> 'acc * 'a) -> 'a C.t"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "scan",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'b -> 'a t -> f:('b -> 'a -> 'b) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'b -> 'a t -> f:(i:int -> 'b -> 'a -> 'b) -> 'b C.t"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc ->\ninit:'b -> 'a t -> f:(acc:'acc -> 'b -> 'a -> 'acc * 'b) -> 'b C.t"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "ToList",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "elt",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "scan",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'a -> t -> f:('a -> elt -> 'a) -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'a -> t -> f:(i:int -> 'a -> elt -> 'a) -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> init:'a -> t -> f:(acc:'acc -> 'a -> elt -> 'acc * 'a) -> 'a list"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "scan",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'b -> 'a t -> f:('b -> 'a -> 'b) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'b -> 'a t -> f:(i:int -> 'b -> 'a -> 'b) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc ->\ninit:'b -> 'a t -> f:(acc:'acc -> 'b -> 'a -> 'acc * 'b) -> 'b list"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "ToArray",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "elt",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "scan",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'a -> t -> f:('a -> elt -> 'a) -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'a -> t -> f:(i:int -> 'a -> elt -> 'a) -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc ->\ninit:'a -> t -> f:(acc:'acc -> 'a -> elt -> 'acc * 'a) -> 'a array"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "scan",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'b -> 'a t -> f:('b -> 'a -> 'b) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'b -> 'a t -> f:(i:int -> 'b -> 'a -> 'b) -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc ->\ninit:'b -> 'a t -> f:(acc:'acc -> 'b -> 'a -> 'acc * 'b) -> 'b array"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Right",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "elt",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "scan_right",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> init:elt -> f:(elt -> elt -> elt) -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_right_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "t -> init:elt -> f:(i:int -> elt -> elt -> elt) -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_right_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> init:elt -> f:(acc:'acc -> elt -> elt -> 'acc * elt) -> t"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "scan_right",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> init:'b -> f:('a -> 'b -> 'b) -> 'b t"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_right_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a t -> init:'b -> f:(i:int -> 'a -> 'b -> 'b) -> 'b t"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_right_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> 'a t -> init:'b -> f:(acc:'acc -> 'a -> 'b -> 'acc * 'b) -> 'b t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "ToContainer",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "C",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> init:'a -> f:(elt -> 'a -> 'a) -> 'a C.t"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> init:'a -> f:(i:int -> elt -> 'a -> 'a) -> 'a C.t"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc -> t -> init:'a -> f:(acc:'acc -> elt -> 'a -> 'acc * 'a) -> 'a C.t"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> init:'b -> f:('a -> 'b -> 'b) -> 'b C.t"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> init:'b -> f:(i:int -> 'a -> 'b -> 'b) -> 'b C.t"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\n'a t -> init:'b -> f:(acc:'acc -> 'a -> 'b -> 'acc * 'b) -> 'b C.t"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "ToList",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> init:'a -> f:(elt -> 'a -> 'a) -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> init:'a -> f:(i:int -> elt -> 'a -> 'a) -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc -> t -> init:'a -> f:(acc:'acc -> elt -> 'a -> 'acc * 'a) -> 'a list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> init:'b -> f:('a -> 'b -> 'b) -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> init:'b -> f:(i:int -> 'a -> 'b -> 'b) -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\n'a t -> init:'b -> f:(acc:'acc -> 'a -> 'b -> 'acc * 'b) -> 'b list"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "ToArray",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> init:'a -> f:(elt -> 'a -> 'a) -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> init:'a -> f:(i:int -> elt -> 'a -> 'a) -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\nt -> init:'a -> f:(acc:'acc -> elt -> 'a -> 'acc * 'a) -> 'a array"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> init:'b -> f:('a -> 'b -> 'b) -> 'b array"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> init:'b -> f:(i:int -> 'a -> 'b -> 'b) -> 'b array"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\n'a t -> init:'b -> f:(acc:'acc -> 'a -> 'b -> 'acc * 'b) -> 'b array"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Short",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "elt",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "scan_short",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:elt -> t -> f:(elt -> elt -> Foundations.Shorten.t * elt) -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_short_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:elt -> t -> f:(i:int -> elt -> elt -> Foundations.Shorten.t * elt) -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_short_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc ->\ninit:elt ->\nt -> f:(acc:'acc -> elt -> elt -> 'acc * Foundations.Shorten.t * elt) -> t"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S1",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "scan_short",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'b -> 'a t -> f:('b -> 'a -> Foundations.Shorten.t * 'b) -> 'b t"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_short_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'b ->\n'a t -> f:(i:int -> 'b -> 'a -> Foundations.Shorten.t * 'b) -> 'b t"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_short_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc ->\ninit:'b ->\n'a t -> f:(acc:'acc -> 'b -> 'a -> 'acc * Foundations.Shorten.t * 'b) -> 'b t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "ToContainer",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "C",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'a -> t -> f:('a -> elt -> Foundations.Shorten.t * 'a) -> 'a C.t"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'a ->\nt -> f:(i:int -> 'a -> elt -> Foundations.Shorten.t * 'a) -> 'a C.t"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\ninit:'a ->\nt -> f:(acc:'acc -> 'a -> elt -> 'acc * Foundations.Shorten.t * 'a) -> 'a C.t"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'b -> 'a t -> f:('b -> 'a -> Foundations.Shorten.t * 'b) -> 'b C.t"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'b ->\n'a t -> f:(i:int -> 'b -> 'a -> Foundations.Shorten.t * 'b) -> 'b C.t"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\ninit:'b ->\n'a t ->\nf:(acc:'acc -> 'b -> 'a -> 'acc * Foundations.Shorten.t * 'b) -> 'b C.t"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "ToList",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'a -> t -> f:('a -> elt -> Foundations.Shorten.t * 'a) -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'a ->\nt -> f:(i:int -> 'a -> elt -> Foundations.Shorten.t * 'a) -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\ninit:'a ->\nt ->\nf:(acc:'acc -> 'a -> elt -> 'acc * Foundations.Shorten.t * 'a) -> 'a list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'b -> 'a t -> f:('b -> 'a -> Foundations.Shorten.t * 'b) -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'b ->\n'a t -> f:(i:int -> 'b -> 'a -> Foundations.Shorten.t * 'b) -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\ninit:'b ->\n'a t ->\nf:(acc:'acc -> 'b -> 'a -> 'acc * Foundations.Shorten.t * 'b) -> 'b list"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "ToArray",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'a -> t -> f:('a -> elt -> Foundations.Shorten.t * 'a) -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'a ->\nt -> f:(i:int -> 'a -> elt -> Foundations.Shorten.t * 'a) -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\ninit:'a ->\nt ->\nf:(acc:'acc -> 'a -> elt -> 'acc * Foundations.Shorten.t * 'a) -> 'a array"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'b -> 'a t -> f:('b -> 'a -> Foundations.Shorten.t * 'b) -> 'b array"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "init:'b ->\n'a t -> f:(i:int -> 'b -> 'a -> Foundations.Shorten.t * 'b) -> 'b array"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\ninit:'b ->\n'a t ->\nf:(acc:'acc -> 'b -> 'a -> 'acc * Foundations.Shorten.t * 'b) -> 'b array"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Right",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> init:elt -> f:(elt -> elt -> Foundations.Shorten.t * elt) -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "t -> init:elt -> f:(i:int -> elt -> elt -> Foundations.Shorten.t * elt) -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\nt ->\ninit:elt ->\nf:(acc:'acc -> elt -> elt -> 'acc * Foundations.Shorten.t * elt) -> t"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t -> init:'b -> f:('a -> 'b -> Foundations.Shorten.t * 'b) -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_right_i",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a t ->\ninit:'b -> f:(i:int -> 'a -> 'b -> Foundations.Shorten.t * 'b) -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "scan_short_right_acc",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "acc:'acc ->\n'a t ->\ninit:'b ->\nf:(acc:'acc -> 'a -> 'b -> 'acc * Foundations.Shorten.t * 'b) -> 'b t"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "ToContainer",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "C",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "module_type",
                          "name": "S0",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "elt",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "t -> init:'a -> f:(elt -> 'a -> Foundations.Shorten.t * 'a) -> 'a C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "t ->\ninit:'a -> f:(i:int -> elt -> 'a -> Foundations.Shorten.t * 'a) -> 'a C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc ->\nt ->\ninit:'a ->\nf:(acc:'acc -> elt -> 'a -> 'acc * Foundations.Shorten.t * 'a) -> 'a C.t"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "S1",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a t -> init:'b -> f:('a -> 'b -> Foundations.Shorten.t * 'b) -> 'b C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a t ->\ninit:'b -> f:(i:int -> 'a -> 'b -> Foundations.Shorten.t * 'b) -> 'b C.t"
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc ->\n'a t ->\ninit:'b ->\nf:(acc:'acc -> 'a -> 'b -> 'acc * Foundations.Shorten.t * 'b) -> 'b C.t"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "ToList",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "module_type",
                          "name": "S0",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "elt",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "t -> init:'a -> f:(elt -> 'a -> Foundations.Shorten.t * 'a) -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "t ->\ninit:'a -> f:(i:int -> elt -> 'a -> Foundations.Shorten.t * 'a) -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc ->\nt ->\ninit:'a ->\nf:(acc:'acc -> elt -> 'a -> 'acc * Foundations.Shorten.t * 'a) -> 'a list"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "S1",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a t -> init:'b -> f:('a -> 'b -> Foundations.Shorten.t * 'b) -> 'b list"
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a t ->\ninit:'b -> f:(i:int -> 'a -> 'b -> Foundations.Shorten.t * 'b) -> 'b list"
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc ->\n'a t ->\ninit:'b ->\nf:(acc:'acc -> 'a -> 'b -> 'acc * Foundations.Shorten.t * 'b) -> 'b list"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "ToArray",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "module_type",
                          "name": "S0",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "elt",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "t -> init:'a -> f:(elt -> 'a -> Foundations.Shorten.t * 'a) -> 'a array"
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "t ->\ninit:'a -> f:(i:int -> elt -> 'a -> Foundations.Shorten.t * 'a) -> 'a array"
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc ->\nt ->\ninit:'a ->\nf:(acc:'acc -> elt -> 'a -> 'acc * Foundations.Shorten.t * 'a) -> 'a array"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "S1",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a t -> init:'b -> f:('a -> 'b -> Foundations.Shorten.t * 'b) -> 'b array"
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right_i",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "'a t ->\ninit:'b -> f:(i:int -> 'a -> 'b -> Foundations.Shorten.t * 'b) -> 'b array"
                            },
                            {
                              "__class__": "value",
                              "name": "scan_short_right_acc",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "acc:'acc ->\n'a t ->\ninit:'b ->\nf:(acc:'acc -> 'a -> 'b -> 'acc * Foundations.Shorten.t * 'b) -> 'b array"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Concepts",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": "module type of Concepts",
      "alias_of": null,
      "contents": [
        {
          "__class__": "module",
          "name": "Identifiable",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module",
              "name": "Operators",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "SPoly",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Make0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [
                    {
                      "__class__": "functor_parameter",
                      "name": "M",
                      "functor_parameters": [],
                      "doc": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        }
                      ]
                    }
                  ],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "M.t -> M.t -> bool"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "module",
                  "name": "O",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    }
                  ]
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> string"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S1",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "'a",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> repr_a:('a -> string) -> string"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S2",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\nequal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\nequal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t -> repr_a:('a -> string) -> repr_b:('b -> string) -> string"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S3",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) -> repr_c:('c -> string) -> string"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S4",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c, 'd)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) ->\nrepr_c:('c -> string) -> repr_d:('d -> string) -> string"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S5",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c, 'd, 'e)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) ->\nequal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) ->\nequal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) ->\nrepr_c:('c -> string) ->\nrepr_d:('d -> string) -> repr_e:('e -> string) -> string"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Tests",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Examples",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * string) list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "Element",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "A.t t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t t * A.t t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t t * string) list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S2",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "((A.t, B.t) t * (A.t, B.t) t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "((A.t, B.t) t * string) list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S3",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t) t * (A.t, B.t, C.t) t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "((A.t, B.t, C.t) t * string) list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S4",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t, D.t) t * (A.t, B.t, C.t, D.t) t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "((A.t, B.t, C.t, D.t) t * string) list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S5",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd, 'e)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t, E.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t, D.t, E.t) t * (A.t, B.t, C.t, D.t, E.t) t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t, D.t, E.t) t * string) list"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S0",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S1",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S2",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S3",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S4",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S5",
                  "hidden": false,
                  "kind": "module type not found"
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Able",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module",
              "name": "Operators",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "module",
                  "name": "O",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    }
                  ]
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> string"
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> low:t -> high:t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> low:t -> high:t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t * t"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S1",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "'a",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> repr_a:('a -> string) -> string"
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t ->\n'a t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t ->\nlow:'a t ->\nhigh:'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t ->\nlow:'a t ->\nhigh:'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a t * 'a t"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S2",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\nequal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\nequal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t -> repr_a:('a -> string) -> repr_b:('b -> string) -> string"
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\nlow:('a, 'b) t ->\nhigh:('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\nlow:('a, 'b) t ->\nhigh:('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) t * ('a, 'b) t"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S3",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) -> repr_c:('c -> string) -> string"
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\nlow:('a, 'b, 'c) t ->\nhigh:('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\nlow:('a, 'b, 'c) t ->\nhigh:('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> ('a, 'b, 'c) t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> ('a, 'b, 'c) t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\n('a, 'b, 'c) t * ('a, 'b, 'c) t"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S4",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c, 'd)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) ->\nrepr_c:('c -> string) -> repr_d:('d -> string) -> string"
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\nlow:('a, 'b, 'c, 'd) t ->\nhigh:('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\nlow:('a, 'b, 'c, 'd) t ->\nhigh:('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd) t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd) t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\n('a, 'b, 'c, 'd) t * ('a, 'b, 'c, 'd) t"
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S5",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": "('a, 'b, 'c, 'd, 'e)",
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) ->\nequal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) ->\nequal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) ->\nrepr_c:('c -> string) ->\nrepr_d:('d -> string) -> repr_e:('e -> string) -> string"
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\nlow:('a, 'b, 'c, 'd, 'e) t ->\nhigh:('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\nlow:('a, 'b, 'c, 'd, 'e) t ->\nhigh:('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd, 'e) t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd, 'e) t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) ->\n('a, 'b, 'c, 'd, 'e) t * ('a, 'b, 'c, 'd, 'e) t"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Tests",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Examples",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * string) list"
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t list list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "Element",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> Foundations.Compare.t"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> string"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t t * A.t t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t t * string) list"
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "A.t t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "A.t t list list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S2",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "((A.t, B.t) t * (A.t, B.t) t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "((A.t, B.t) t * string) list"
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t) t list list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S3",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t) t * (A.t, B.t, C.t) t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "((A.t, B.t, C.t) t * string) list"
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t) t list list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S4",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t, D.t) t * (A.t, B.t, C.t, D.t) t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "((A.t, B.t, C.t, D.t) t * string) list"
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t) t list list"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S5",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b, 'c, 'd, 'e)",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "autoocamldoc_bug",
                          "name": "Element",
                          "hidden": false,
                          "kind": "module type not found"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t, D.t, E.t) t * (A.t, B.t, C.t, D.t, E.t) t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "((A.t, B.t, C.t, D.t, E.t) t * string) list"
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t, E.t) t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "(A.t, B.t, C.t, D.t, E.t) t list list"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S0",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S1",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S2",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S3",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S4",
                  "hidden": false,
                  "kind": "module type not found"
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S5",
                  "hidden": false,
                  "kind": "module type not found"
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Number",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module",
              "name": "Operators",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(~+)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(~-)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(+)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(-)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(*)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(/)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(**)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> t"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "module",
                  "name": "O",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(~+)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(~-)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(+)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(-)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(*)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(/)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(**)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> t"
                    }
                  ]
                },
                {
                  "__class__": "value",
                  "name": "to_string",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> string"
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "try_of_string",
                  "hidden": false,
                  "doc": [],
                  "type": "string -> t option"
                },
                {
                  "__class__": "value",
                  "name": "of_string",
                  "hidden": false,
                  "doc": [],
                  "type": "string -> t"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> string"
                },
                {
                  "__class__": "value",
                  "name": "zero",
                  "hidden": false,
                  "doc": [],
                  "type": "t"
                },
                {
                  "__class__": "value",
                  "name": "one",
                  "hidden": false,
                  "doc": [],
                  "type": "t"
                },
                {
                  "__class__": "value",
                  "name": "negate",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "add",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "substract",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "multiply",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "divide",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "square",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "exponentiate",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> int -> t"
                },
                {
                  "__class__": "value",
                  "name": "of_int",
                  "hidden": false,
                  "doc": [],
                  "type": "int -> t"
                },
                {
                  "__class__": "value",
                  "name": "of_float",
                  "hidden": false,
                  "doc": [],
                  "type": "float -> t"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Tests",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Examples",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "to_string",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * string) list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "of_string",
                          "hidden": false,
                          "doc": [],
                          "type": "(string * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * string) list"
                        },
                        {
                          "__class__": "value",
                          "name": "add_substract",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "negate",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "multiply",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "divide",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "exponentiate",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * int * t) list"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S0",
                  "hidden": false,
                  "kind": "module type not found"
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "RealNumber",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module",
              "name": "Operators",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module_type",
                  "name": "S0",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": null,
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(~+)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(~-)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(+)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(-)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(*)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(/)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(**)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(<)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(mod)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "module",
                  "name": "O",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(~+)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(~-)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(+)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(-)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(*)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(/)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(**)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(<)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(mod)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    }
                  ]
                },
                {
                  "__class__": "value",
                  "name": "to_string",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> string"
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "try_of_string",
                  "hidden": false,
                  "doc": [],
                  "type": "string -> t option"
                },
                {
                  "__class__": "value",
                  "name": "of_string",
                  "hidden": false,
                  "doc": [],
                  "type": "string -> t"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> string"
                },
                {
                  "__class__": "value",
                  "name": "zero",
                  "hidden": false,
                  "doc": [],
                  "type": "t"
                },
                {
                  "__class__": "value",
                  "name": "one",
                  "hidden": false,
                  "doc": [],
                  "type": "t"
                },
                {
                  "__class__": "value",
                  "name": "negate",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "add",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "substract",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "multiply",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "divide",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "square",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "exponentiate",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> int -> t"
                },
                {
                  "__class__": "value",
                  "name": "of_int",
                  "hidden": false,
                  "doc": [],
                  "type": "int -> t"
                },
                {
                  "__class__": "value",
                  "name": "of_float",
                  "hidden": false,
                  "doc": [],
                  "type": "float -> t"
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> low:t -> high:t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> low:t -> high:t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t * t"
                },
                {
                  "__class__": "value",
                  "name": "abs",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "modulo",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "to_int",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> int"
                },
                {
                  "__class__": "value",
                  "name": "to_float",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> float"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Tests",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Examples",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S0",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "to_string",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * string) list"
                        },
                        {
                          "__class__": "value",
                          "name": "different",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "of_string",
                          "hidden": false,
                          "doc": [],
                          "type": "(string * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "repr",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * string) list"
                        },
                        {
                          "__class__": "value",
                          "name": "add_substract",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "negate",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "multiply",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "divide",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * t * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "exponentiate",
                          "hidden": false,
                          "doc": [],
                          "type": "(t * int * t) list"
                        },
                        {
                          "__class__": "value",
                          "name": "ordered",
                          "hidden": false,
                          "doc": [],
                          "type": "t list list"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t list list"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S0",
                  "hidden": false,
                  "kind": "module type not found"
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Integer",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "module_type",
              "name": "S0",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "module",
                  "name": "O",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(~+)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(~-)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(+)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(-)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(*)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(/)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(**)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "(<)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(mod)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    }
                  ]
                },
                {
                  "__class__": "value",
                  "name": "to_string",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> string"
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "try_of_string",
                  "hidden": false,
                  "doc": [],
                  "type": "string -> t option"
                },
                {
                  "__class__": "value",
                  "name": "of_string",
                  "hidden": false,
                  "doc": [],
                  "type": "string -> t"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> string"
                },
                {
                  "__class__": "value",
                  "name": "zero",
                  "hidden": false,
                  "doc": [],
                  "type": "t"
                },
                {
                  "__class__": "value",
                  "name": "one",
                  "hidden": false,
                  "doc": [],
                  "type": "t"
                },
                {
                  "__class__": "value",
                  "name": "negate",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "add",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "substract",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "multiply",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "divide",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "square",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "exponentiate",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> int -> t"
                },
                {
                  "__class__": "value",
                  "name": "of_int",
                  "hidden": false,
                  "doc": [],
                  "type": "int -> t"
                },
                {
                  "__class__": "value",
                  "name": "of_float",
                  "hidden": false,
                  "doc": [],
                  "type": "float -> t"
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> low:t -> high:t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> low:t -> high:t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t * t"
                },
                {
                  "__class__": "value",
                  "name": "abs",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "modulo",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "to_int",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> int"
                },
                {
                  "__class__": "value",
                  "name": "to_float",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> float"
                },
                {
                  "__class__": "value",
                  "name": "succ",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "pred",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Tests",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "autoocamldoc_bug",
                  "name": "S0",
                  "hidden": false,
                  "kind": "module type not found"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Compare",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "Foundations.Compare.t",
          "kind": "LT | EQ | GT",
          "constructors": [
            {
              "__class__": "type_constructor",
              "name": "LT",
              "doc": [],
              "payload": null
            },
            {
              "__class__": "type_constructor",
              "name": "EQ",
              "doc": [],
              "payload": null
            },
            {
              "__class__": "type_constructor",
              "name": "GT",
              "doc": [],
              "payload": null
            }
          ],
          "labels": []
        },
        {
          "__class__": "module",
          "name": "Poly",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": "Traits.Comparable.SPoly",
          "alias_of": null,
          "contents": [
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> Foundations.Compare.t"
            },
            {
              "__class__": "value",
              "name": "less_than",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "less_or_equal",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_than",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_or_equal",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "between",
              "hidden": false,
              "doc": [],
              "type": "'a -> low:'a -> high:'a -> bool"
            },
            {
              "__class__": "value",
              "name": "between_or_equal",
              "hidden": false,
              "doc": [],
              "type": "'a -> low:'a -> high:'a -> bool"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> 'a"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> 'a"
            },
            {
              "__class__": "value",
              "name": "min_max",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> 'a * 'a"
            },
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(<)",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> 'a -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<=)",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> 'a -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>)",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> 'a -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>=)",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> 'a -> bool"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Equate",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "module",
          "name": "Poly",
          "hidden": false,
          "doc": [ " Doc for General.Traits.Equatable.SPoly " ],
          "functor_parameters": [],
          "contents_from": "Traits.Equatable.SPoly",
          "alias_of": null,
          "contents": [
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [ " Polymorphic structural equality " ],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [ " Polymorphic inequality " ],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(=)",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> 'a -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<>)",
                  "hidden": false,
                  "doc": [],
                  "type": "'a -> 'a -> bool"
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Phys",
          "hidden": false,
          "doc": [ " Doc for General.Traits.Equatable.SPhys " ],
          "functor_parameters": [],
          "contents_from": "Traits.Equatable.SPhys",
          "alias_of": null,
          "contents": [
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [ " Physical identity (address equality) " ],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [ " Physical inequality " ],
              "type": "'a -> 'a -> bool"
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "CallStack",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "Pervasives.OCamlStandard.Printexc.raw_backtrace",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Traits.Displayable.S0 with type t := t",
          "contents": [
            {
              "__class__": "value",
              "name": "to_string",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Traits.Representable.S0 with type t := t",
          "contents": [
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "current",
          "hidden": false,
          "doc": [],
          "type": "?max_size:int -> unit -> t"
        },
        {
          "__class__": "module",
          "name": "Location",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "Pervasives.OCamlStandard.Printexc.location",
              "kind":
                "{filename: string; line_number: int; start_char: int; end_char: int}",
              "constructors": [],
              "labels": [
                {
                  "__class__": "record_label",
                  "name": "filename",
                  "doc": []
                },
                {
                  "__class__": "record_label",
                  "name": "line_number",
                  "doc": []
                },
                {
                  "__class__": "record_label",
                  "name": "start_char",
                  "doc": []
                },
                {
                  "__class__": "record_label",
                  "name": "end_char",
                  "doc": []
                }
              ]
            },
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from": "Concepts.Able.S0 with type t := t",
              "contents": [
                {
                  "__class__": "module",
                  "name": "O",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=)",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    }
                  ]
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "different",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> string"
                },
                {
                  "__class__": "value",
                  "name": "compare",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> Foundations.Compare.t"
                },
                {
                  "__class__": "value",
                  "name": "less_than",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "less_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_than",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "greater_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> low:t -> high:t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "between_or_equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> low:t -> high:t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "min",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "max",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "min_max",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t * t"
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Frame",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "Pervasives.OCamlStandard.Printexc.backtrace_slot",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "is_raise",
              "hidden": false,
              "doc": [],
              "type": "t -> bool"
            },
            {
              "__class__": "value",
              "name": "location",
              "hidden": false,
              "doc": [],
              "type": "t -> Location.t option"
            },
            {
              "__class__": "value",
              "name": "format",
              "hidden": false,
              "doc": [],
              "type": "int -> t -> string option"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "frames",
          "hidden": false,
          "doc": [],
          "type": "t -> Frame.t list"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Exception",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "exn",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Concepts.Identifiable.S0 with type t := t",
          "contents": [
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Traits.Displayable.S0 with type t := t",
          "contents": [
            {
              "__class__": "value",
              "name": "to_string",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "register_printer",
          "hidden": false,
          "doc": [],
          "type": "(t -> string option) -> unit"
        },
        {
          "__class__": "value",
          "name": "record_backtraces",
          "hidden": false,
          "doc": [],
          "type": "bool -> unit"
        },
        {
          "__class__": "value",
          "name": "recording_backtraces",
          "hidden": false,
          "doc": [],
          "type": "unit -> bool"
        },
        {
          "__class__": "value",
          "name": "most_recent_backtrace",
          "hidden": false,
          "doc": [],
          "type": "unit -> CallStack.t option"
        },
        {
          "__class__": "exception",
          "name": "MatchFailure",
          "hidden": false,
          "doc": [],
          "payload": "(string * int * int)",
          "labels": []
        },
        {
          "__class__": "exception",
          "name": "AssertFailure",
          "hidden": false,
          "doc": [],
          "payload": "(string * int * int)",
          "labels": []
        },
        {
          "__class__": "exception",
          "name": "InvalidArgument",
          "hidden": false,
          "doc": [],
          "payload": "string",
          "labels": []
        },
        {
          "__class__": "exception",
          "name": "Failure",
          "hidden": false,
          "doc": [],
          "payload": "string",
          "labels": []
        },
        {
          "__class__": "exception",
          "name": "NotFound",
          "hidden": false,
          "doc": [],
          "payload": null,
          "labels": []
        },
        {
          "__class__": "exception",
          "name": "OutOfMemory",
          "hidden": false,
          "doc": [ " Raised when the system could not allocate memory " ],
          "payload": null,
          "labels": []
        },
        {
          "__class__": "exception",
          "name": "StackOverflow",
          "hidden": false,
          "doc": [],
          "payload": null,
          "labels": []
        },
        {
          "__class__": "exception",
          "name": "SysError",
          "hidden": false,
          "doc": [],
          "payload": "string",
          "labels": []
        },
        {
          "__class__": "exception",
          "name": "EndOfFile",
          "hidden": false,
          "doc": [],
          "payload": null,
          "labels": []
        },
        {
          "__class__": "exception",
          "name": "DivisionByZero",
          "hidden": false,
          "doc": [],
          "payload": null,
          "labels": []
        },
        {
          "__class__": "exception",
          "name": "SysBlockedIO",
          "hidden": false,
          "doc": [],
          "payload": null,
          "labels": []
        },
        {
          "__class__": "exception",
          "name": "UndefinedRecursiveModule",
          "hidden": false,
          "doc": [],
          "payload": "(string * int * int)",
          "labels": []
        },
        {
          "__class__": "exception",
          "name": "Exit",
          "hidden": false,
          "doc": [],
          "payload": null,
          "labels": []
        },
        {
          "__class__": "value",
          "name": "raise",
          "hidden": false,
          "doc": [],
          "type": "t -> 'a"
        },
        {
          "__class__": "value",
          "name": "raise_without_backtrace",
          "hidden": false,
          "doc": [],
          "type": "t -> 'a"
        },
        {
          "__class__": "value",
          "name": "invalid_argument",
          "hidden": false,
          "doc": [],
          "type":
            "('a, unit, string, string, string, 'b) CamlinternalFormatBasics.format6 -> 'a"
        },
        {
          "__class__": "value",
          "name": "failure",
          "hidden": false,
          "doc": [],
          "type":
            "('a, unit, string, string, string, 'b) CamlinternalFormatBasics.format6 -> 'a"
        },
        {
          "__class__": "value",
          "name": "name",
          "hidden": false,
          "doc": [],
          "type": "exn -> string"
        },
        {
          "__class__": "value",
          "name": "or_none",
          "hidden": false,
          "doc": [],
          "type": "'a lazy_t -> 'a option"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Exit",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": null,
          "kind": "Success | Failure of int",
          "constructors": [
            {
              "__class__": "type_constructor",
              "name": "Success",
              "doc": [],
              "payload": null
            },
            {
              "__class__": "type_constructor",
              "name": "Failure",
              "doc": [],
              "payload": "int"
            }
          ],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "of_int",
          "hidden": false,
          "doc": [],
          "type": "int -> t"
        },
        {
          "__class__": "value",
          "name": "exit",
          "hidden": false,
          "doc": [],
          "type": "t -> 'a"
        },
        {
          "__class__": "value",
          "name": "at_exit",
          "hidden": false,
          "doc": [],
          "type": "(unit -> unit) -> unit"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Function1",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "('a, 'z)",
          "private": false,
          "manifest": "'a -> 'z",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "identity",
          "hidden": false,
          "doc": [],
          "type": "('a, 'a) t"
        },
        {
          "__class__": "value",
          "name": "apply",
          "hidden": false,
          "doc": [],
          "type": "('a, 'z) t -> 'a -> 'z"
        },
        {
          "__class__": "value",
          "name": "rev_apply",
          "hidden": false,
          "doc": [],
          "type": "'a -> ('a, 'z) t -> 'z"
        },
        {
          "__class__": "value",
          "name": "compose",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b) t -> ('c, 'a) t -> ('c, 'b) t"
        },
        {
          "__class__": "module",
          "name": "O",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "value",
              "name": "(@@)",
              "hidden": false,
              "doc": [],
              "type": "('a, 'z) t -> 'a -> 'z"
            },
            {
              "__class__": "value",
              "name": "(|>)",
              "hidden": false,
              "doc": [],
              "type": "'a -> ('a, 'z) t -> 'z"
            },
            {
              "__class__": "value",
              "name": "(%)",
              "hidden": false,
              "doc": [],
              "type": "('a, 'b) t -> ('c, 'a) t -> ('c, 'b) t"
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Function2",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "('a, 'b, 'z)",
          "private": false,
          "manifest": "'a -> 'b -> 'z",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "flip",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'z) t -> ('b, 'a, 'z) t"
        },
        {
          "__class__": "value",
          "name": "curry",
          "hidden": false,
          "doc": [],
          "type": "('a * 'b, 'z) Function1.t -> ('a, 'b, 'z) t"
        },
        {
          "__class__": "value",
          "name": "uncurry",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'z) t -> ('a * 'b, 'z) Function1.t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Function3",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "('a, 'b, 'c, 'z)",
          "private": false,
          "manifest": "'a -> 'b -> 'c -> 'z",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "flip",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'z) t -> ('c, 'b, 'a, 'z) t"
        },
        {
          "__class__": "value",
          "name": "curry",
          "hidden": false,
          "doc": [],
          "type": "('a * 'b * 'c, 'z) Function1.t -> ('a, 'b, 'c, 'z) t"
        },
        {
          "__class__": "value",
          "name": "uncurry",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'z) t -> ('a * 'b * 'c, 'z) Function1.t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Function4",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "('a, 'b, 'c, 'd, 'z)",
          "private": false,
          "manifest": "'a -> 'b -> 'c -> 'd -> 'z",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "flip",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd, 'z) t -> ('d, 'c, 'b, 'a, 'z) t"
        },
        {
          "__class__": "value",
          "name": "curry",
          "hidden": false,
          "doc": [],
          "type":
            "('a * 'b * 'c * 'd, 'z) Function1.t -> ('a, 'b, 'c, 'd, 'z) t"
        },
        {
          "__class__": "value",
          "name": "uncurry",
          "hidden": false,
          "doc": [],
          "type":
            "('a, 'b, 'c, 'd, 'z) t -> ('a * 'b * 'c * 'd, 'z) Function1.t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Function5",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "('a, 'b, 'c, 'd, 'e, 'z)",
          "private": false,
          "manifest": "'a -> 'b -> 'c -> 'd -> 'e -> 'z",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "flip",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd, 'e, 'z) t -> ('e, 'd, 'c, 'b, 'a, 'z) t"
        },
        {
          "__class__": "value",
          "name": "curry",
          "hidden": false,
          "doc": [],
          "type":
            "('a * 'b * 'c * 'd * 'e, 'z) Function1.t -> ('a, 'b, 'c, 'd, 'e, 'z) t"
        },
        {
          "__class__": "value",
          "name": "uncurry",
          "hidden": false,
          "doc": [],
          "type":
            "('a, 'b, 'c, 'd, 'e, 'z) t -> ('a * 'b * 'c * 'd * 'e, 'z) Function1.t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Unit",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "unit",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "ignore",
          "hidden": false,
          "doc": [],
          "type": "'a -> t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Bool",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "bool",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "module",
          "name": "O",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from": "Concepts.Able.Operators.S0 with type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "(=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "not",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "(&&)",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "(||)",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "Concepts.Able.S0 with type t := t and module O := O",
          "contents": [
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> Foundations.Compare.t"
            },
            {
              "__class__": "value",
              "name": "less_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "less_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "between",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "between_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "min_max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t * t"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Traits.Displayable.S0 with type t := t",
          "contents": [
            {
              "__class__": "value",
              "name": "to_string",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Traits.Parsable.S0 with type t := t",
          "contents": [
            {
              "__class__": "value",
              "name": "try_of_string",
              "hidden": false,
              "doc": [],
              "type": "string -> t option"
            },
            {
              "__class__": "value",
              "name": "of_string",
              "hidden": false,
              "doc": [],
              "type": "string -> t"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "not",
          "hidden": false,
          "doc": [],
          "type": "t -> t"
        },
        {
          "__class__": "value",
          "name": "and_",
          "hidden": false,
          "doc": [],
          "type": "t -> t -> t"
        },
        {
          "__class__": "value",
          "name": "or_",
          "hidden": false,
          "doc": [],
          "type": "t -> t -> t"
        },
        {
          "__class__": "value",
          "name": "xor",
          "hidden": false,
          "doc": [],
          "type": "t -> t -> t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Char",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "char",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "of_int",
          "hidden": false,
          "doc": [],
          "type": "int -> t"
        },
        {
          "__class__": "value",
          "name": "to_int",
          "hidden": false,
          "doc": [],
          "type": "t -> int"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Int",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "int",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Concepts.Integer.S0 with type t := t",
          "contents": [
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(~+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(~-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(*)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(/)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(**)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> int -> t"
                },
                {
                  "__class__": "value",
                  "name": "(<)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(mod)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "to_string",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            },
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "try_of_string",
              "hidden": false,
              "doc": [],
              "type": "string -> t option"
            },
            {
              "__class__": "value",
              "name": "of_string",
              "hidden": false,
              "doc": [],
              "type": "string -> t"
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            },
            {
              "__class__": "value",
              "name": "zero",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "one",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "negate",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "add",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "substract",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "multiply",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "divide",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "square",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "exponentiate",
              "hidden": false,
              "doc": [],
              "type": "t -> int -> t"
            },
            {
              "__class__": "value",
              "name": "of_int",
              "hidden": false,
              "doc": [],
              "type": "int -> t"
            },
            {
              "__class__": "value",
              "name": "of_float",
              "hidden": false,
              "doc": [],
              "type": "float -> t"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> Foundations.Compare.t"
            },
            {
              "__class__": "value",
              "name": "less_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "less_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "between",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "between_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "min_max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t * t"
            },
            {
              "__class__": "value",
              "name": "abs",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "modulo",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "to_int",
              "hidden": false,
              "doc": [],
              "type": "t -> int"
            },
            {
              "__class__": "value",
              "name": "to_float",
              "hidden": false,
              "doc": [],
              "type": "t -> float"
            },
            {
              "__class__": "value",
              "name": "succ",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "pred",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "smallest",
          "hidden": false,
          "doc": [],
          "type": "t"
        },
        {
          "__class__": "value",
          "name": "greatest",
          "hidden": false,
          "doc": [],
          "type": "t"
        },
        {
          "__class__": "module",
          "name": "Bitwise",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "value",
              "name": "logical_and",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "logical_or",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "logical_xor",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "logical_not",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "logical_shift_left",
              "hidden": false,
              "doc": [],
              "type": "t -> shift:t -> t"
            },
            {
              "__class__": "value",
              "name": "logical_shift_right",
              "hidden": false,
              "doc": [],
              "type": "t -> shift:t -> t"
            },
            {
              "__class__": "value",
              "name": "arithmetic_shift_right",
              "hidden": false,
              "doc": [],
              "type": "t -> shift:t -> t"
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Int32",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "int32",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Concepts.Integer.S0 with type t := t",
          "contents": [
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(~+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(~-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(*)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(/)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(**)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> int -> t"
                },
                {
                  "__class__": "value",
                  "name": "(<)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(mod)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "to_string",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            },
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "try_of_string",
              "hidden": false,
              "doc": [],
              "type": "string -> t option"
            },
            {
              "__class__": "value",
              "name": "of_string",
              "hidden": false,
              "doc": [],
              "type": "string -> t"
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            },
            {
              "__class__": "value",
              "name": "zero",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "one",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "negate",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "add",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "substract",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "multiply",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "divide",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "square",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "exponentiate",
              "hidden": false,
              "doc": [],
              "type": "t -> int -> t"
            },
            {
              "__class__": "value",
              "name": "of_int",
              "hidden": false,
              "doc": [],
              "type": "int -> t"
            },
            {
              "__class__": "value",
              "name": "of_float",
              "hidden": false,
              "doc": [],
              "type": "float -> t"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> Foundations.Compare.t"
            },
            {
              "__class__": "value",
              "name": "less_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "less_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "between",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "between_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "min_max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t * t"
            },
            {
              "__class__": "value",
              "name": "abs",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "modulo",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "to_int",
              "hidden": false,
              "doc": [],
              "type": "t -> int"
            },
            {
              "__class__": "value",
              "name": "to_float",
              "hidden": false,
              "doc": [],
              "type": "t -> float"
            },
            {
              "__class__": "value",
              "name": "succ",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "pred",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "smallest",
          "hidden": false,
          "doc": [],
          "type": "t"
        },
        {
          "__class__": "value",
          "name": "greatest",
          "hidden": false,
          "doc": [],
          "type": "t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Int64",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "int64",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Concepts.Integer.S0 with type t := t",
          "contents": [
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(~+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(~-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(*)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(/)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(**)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> int -> t"
                },
                {
                  "__class__": "value",
                  "name": "(<)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(mod)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "to_string",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            },
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "try_of_string",
              "hidden": false,
              "doc": [],
              "type": "string -> t option"
            },
            {
              "__class__": "value",
              "name": "of_string",
              "hidden": false,
              "doc": [],
              "type": "string -> t"
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            },
            {
              "__class__": "value",
              "name": "zero",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "one",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "negate",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "add",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "substract",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "multiply",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "divide",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "square",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "exponentiate",
              "hidden": false,
              "doc": [],
              "type": "t -> int -> t"
            },
            {
              "__class__": "value",
              "name": "of_int",
              "hidden": false,
              "doc": [],
              "type": "int -> t"
            },
            {
              "__class__": "value",
              "name": "of_float",
              "hidden": false,
              "doc": [],
              "type": "float -> t"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> Foundations.Compare.t"
            },
            {
              "__class__": "value",
              "name": "less_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "less_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "between",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "between_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "min_max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t * t"
            },
            {
              "__class__": "value",
              "name": "abs",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "modulo",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "to_int",
              "hidden": false,
              "doc": [],
              "type": "t -> int"
            },
            {
              "__class__": "value",
              "name": "to_float",
              "hidden": false,
              "doc": [],
              "type": "t -> float"
            },
            {
              "__class__": "value",
              "name": "succ",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "pred",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "smallest",
          "hidden": false,
          "doc": [],
          "type": "t"
        },
        {
          "__class__": "value",
          "name": "greatest",
          "hidden": false,
          "doc": [],
          "type": "t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "NativeInt",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "nativeint",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Concepts.Integer.S0 with type t := t",
          "contents": [
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(~+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(~-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(*)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(/)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(**)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> int -> t"
                },
                {
                  "__class__": "value",
                  "name": "(<)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(mod)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "to_string",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            },
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "try_of_string",
              "hidden": false,
              "doc": [],
              "type": "string -> t option"
            },
            {
              "__class__": "value",
              "name": "of_string",
              "hidden": false,
              "doc": [],
              "type": "string -> t"
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            },
            {
              "__class__": "value",
              "name": "zero",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "one",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "negate",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "add",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "substract",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "multiply",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "divide",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "square",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "exponentiate",
              "hidden": false,
              "doc": [],
              "type": "t -> int -> t"
            },
            {
              "__class__": "value",
              "name": "of_int",
              "hidden": false,
              "doc": [],
              "type": "int -> t"
            },
            {
              "__class__": "value",
              "name": "of_float",
              "hidden": false,
              "doc": [],
              "type": "float -> t"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> Foundations.Compare.t"
            },
            {
              "__class__": "value",
              "name": "less_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "less_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "between",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "between_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "min_max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t * t"
            },
            {
              "__class__": "value",
              "name": "abs",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "modulo",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "to_int",
              "hidden": false,
              "doc": [],
              "type": "t -> int"
            },
            {
              "__class__": "value",
              "name": "to_float",
              "hidden": false,
              "doc": [],
              "type": "t -> float"
            },
            {
              "__class__": "value",
              "name": "succ",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "pred",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "smallest",
          "hidden": false,
          "doc": [],
          "type": "t"
        },
        {
          "__class__": "value",
          "name": "greatest",
          "hidden": false,
          "doc": [],
          "type": "t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "BigInt",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "Pervasives.OCamlStandard.Big_int.big_int",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Concepts.Integer.S0 with type t := t",
          "contents": [
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(~+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(~-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(*)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(/)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(**)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> int -> t"
                },
                {
                  "__class__": "value",
                  "name": "(<)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(mod)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "to_string",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            },
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "try_of_string",
              "hidden": false,
              "doc": [],
              "type": "string -> t option"
            },
            {
              "__class__": "value",
              "name": "of_string",
              "hidden": false,
              "doc": [],
              "type": "string -> t"
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            },
            {
              "__class__": "value",
              "name": "zero",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "one",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "negate",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "add",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "substract",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "multiply",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "divide",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "square",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "exponentiate",
              "hidden": false,
              "doc": [],
              "type": "t -> int -> t"
            },
            {
              "__class__": "value",
              "name": "of_int",
              "hidden": false,
              "doc": [],
              "type": "int -> t"
            },
            {
              "__class__": "value",
              "name": "of_float",
              "hidden": false,
              "doc": [],
              "type": "float -> t"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> Foundations.Compare.t"
            },
            {
              "__class__": "value",
              "name": "less_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "less_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "between",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "between_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "min_max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t * t"
            },
            {
              "__class__": "value",
              "name": "abs",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "modulo",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "to_int",
              "hidden": false,
              "doc": [],
              "type": "t -> int"
            },
            {
              "__class__": "value",
              "name": "to_float",
              "hidden": false,
              "doc": [],
              "type": "t -> float"
            },
            {
              "__class__": "value",
              "name": "succ",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "pred",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Float",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "float",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Concepts.RealNumber.S0 with type t := t",
          "contents": [
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(~+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(~-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(*)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(/)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(**)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> int -> t"
                },
                {
                  "__class__": "value",
                  "name": "(<)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(mod)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "to_string",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            },
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "try_of_string",
              "hidden": false,
              "doc": [],
              "type": "string -> t option"
            },
            {
              "__class__": "value",
              "name": "of_string",
              "hidden": false,
              "doc": [],
              "type": "string -> t"
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            },
            {
              "__class__": "value",
              "name": "zero",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "one",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "negate",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "add",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "substract",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "multiply",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "divide",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "square",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "exponentiate",
              "hidden": false,
              "doc": [],
              "type": "t -> int -> t"
            },
            {
              "__class__": "value",
              "name": "of_int",
              "hidden": false,
              "doc": [],
              "type": "int -> t"
            },
            {
              "__class__": "value",
              "name": "of_float",
              "hidden": false,
              "doc": [],
              "type": "float -> t"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> Foundations.Compare.t"
            },
            {
              "__class__": "value",
              "name": "less_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "less_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "between",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "between_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "min_max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t * t"
            },
            {
              "__class__": "value",
              "name": "abs",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "modulo",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "to_int",
              "hidden": false,
              "doc": [],
              "type": "t -> int"
            },
            {
              "__class__": "value",
              "name": "to_float",
              "hidden": false,
              "doc": [],
              "type": "t -> float"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "epsilon",
          "hidden": false,
          "doc": [],
          "type": "t"
        },
        {
          "__class__": "value",
          "name": "smallest",
          "hidden": false,
          "doc": [],
          "type": "t"
        },
        {
          "__class__": "value",
          "name": "greatest",
          "hidden": false,
          "doc": [],
          "type": "t"
        },
        {
          "__class__": "value",
          "name": "infinity",
          "hidden": false,
          "doc": [],
          "type": "t"
        },
        {
          "__class__": "value",
          "name": "negative_infinity",
          "hidden": false,
          "doc": [],
          "type": "t"
        },
        {
          "__class__": "value",
          "name": "not_a_number",
          "hidden": false,
          "doc": [],
          "type": "t"
        },
        {
          "__class__": "value",
          "name": "pi",
          "hidden": false,
          "doc": [],
          "type": "float"
        },
        {
          "__class__": "value",
          "name": "e",
          "hidden": false,
          "doc": [],
          "type": "float"
        },
        {
          "__class__": "value",
          "name": "of_parts",
          "hidden": false,
          "doc": [],
          "type": "significand:float -> exponent:int -> t"
        },
        {
          "__class__": "value",
          "name": "to_parts",
          "hidden": false,
          "doc": [],
          "type": "t -> float * int"
        },
        {
          "__class__": "value",
          "name": "to_fractional_and_integral",
          "hidden": false,
          "doc": [],
          "type": "t -> float * float"
        },
        {
          "__class__": "value",
          "name": "sqrt",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "exp",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "log",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "log10",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "expm1",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "log1p",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "cos",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "sin",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "tan",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "acos",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "asin",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "atan",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "atan2",
          "hidden": false,
          "doc": [],
          "type": "y:float -> x:float -> float"
        },
        {
          "__class__": "value",
          "name": "hypot",
          "hidden": false,
          "doc": [],
          "type": "float -> float -> float"
        },
        {
          "__class__": "value",
          "name": "cosh",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "sinh",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "tanh",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "ceil",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "floor",
          "hidden": false,
          "doc": [],
          "type": "float -> float"
        },
        {
          "__class__": "value",
          "name": "copy_sign",
          "hidden": false,
          "doc": [],
          "type": "t -> sign:t -> t"
        },
        {
          "__class__": "module",
          "name": "Class",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": null,
              "kind": "Normal | SubNormal | Zero | Infinite | NotANumber",
              "constructors": [
                {
                  "__class__": "type_constructor",
                  "name": "Normal",
                  "doc": [],
                  "payload": null
                },
                {
                  "__class__": "type_constructor",
                  "name": "SubNormal",
                  "doc": [],
                  "payload": null
                },
                {
                  "__class__": "type_constructor",
                  "name": "Zero",
                  "doc": [],
                  "payload": null
                },
                {
                  "__class__": "type_constructor",
                  "name": "Infinite",
                  "doc": [],
                  "payload": null
                },
                {
                  "__class__": "type_constructor",
                  "name": "NotANumber",
                  "doc": [],
                  "payload": null
                }
              ],
              "labels": []
            },
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from": "Traits.Representable.S0 with type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "repr",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> string"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "of_float",
              "hidden": false,
              "doc": [],
              "type": "float -> t"
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "String",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "string",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "get",
          "hidden": false,
          "doc": [],
          "type": "t -> int -> char"
        },
        {
          "__class__": "module",
          "name": "O",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from": "Concepts.Able.Operators.S0 with type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "(=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(>=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "(^)",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Traits.Displayable.S0 with type t := t",
          "contents": [
            {
              "__class__": "value",
              "name": "to_string",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "Concepts.Able.S0 with type t := t and module O := O",
          "contents": [
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> Foundations.Compare.t"
            },
            {
              "__class__": "value",
              "name": "less_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "less_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_than",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "between",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "between_or_equal",
              "hidden": false,
              "doc": [],
              "type": "t -> low:t -> high:t -> bool"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "min_max",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t * t"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "concat",
          "hidden": false,
          "doc": [],
          "type": "t -> t -> t"
        },
        {
          "__class__": "value",
          "name": "substring",
          "hidden": false,
          "doc": [],
          "type": "t -> pos:int -> len:int -> t"
        },
        {
          "__class__": "value",
          "name": "prefix",
          "hidden": false,
          "doc": [],
          "type": "t -> len:int -> t"
        },
        {
          "__class__": "value",
          "name": "suffix",
          "hidden": false,
          "doc": [],
          "type": "t -> len:int -> t"
        },
        {
          "__class__": "value",
          "name": "has_prefix",
          "hidden": false,
          "doc": [],
          "type": "t -> pre:t -> bool"
        },
        {
          "__class__": "value",
          "name": "try_drop_prefix",
          "hidden": false,
          "doc": [],
          "type": "t -> pre:t -> t option"
        },
        {
          "__class__": "value",
          "name": "drop_prefix",
          "hidden": false,
          "doc": [],
          "type": "t -> pre:t -> t"
        },
        {
          "__class__": "value",
          "name": "has_suffix",
          "hidden": false,
          "doc": [],
          "type": "t -> suf:t -> bool"
        },
        {
          "__class__": "value",
          "name": "try_drop_suffix",
          "hidden": false,
          "doc": [],
          "type": "t -> suf:t -> t option"
        },
        {
          "__class__": "value",
          "name": "drop_suffix",
          "hidden": false,
          "doc": [],
          "type": "t -> suf:t -> t"
        },
        {
          "__class__": "value",
          "name": "split",
          "hidden": false,
          "doc": [],
          "type": "t -> sep:t -> t list"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Option",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "'a",
          "private": false,
          "manifest": "'a option",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Concepts.Able.S1 with type 'a t := 'a t",
          "contents": [
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type": "'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type": "'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type": "'a t -> repr_a:('a -> string) -> string"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type":
                "'a t ->\n'a t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) -> Foundations.Compare.t"
            },
            {
              "__class__": "value",
              "name": "less_than",
              "hidden": false,
              "doc": [],
              "type":
                "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "less_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_than",
              "hidden": false,
              "doc": [],
              "type":
                "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "between",
              "hidden": false,
              "doc": [],
              "type":
                "'a t ->\nlow:'a t ->\nhigh:'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "between_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "'a t ->\nlow:'a t ->\nhigh:'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type":
                "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a t"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type":
                "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a t"
            },
            {
              "__class__": "value",
              "name": "min_max",
              "hidden": false,
              "doc": [],
              "type":
                "'a t -> 'a t -> compare_a:('a -> 'a -> Foundations.Compare.t) -> 'a t * 'a t"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "none",
          "hidden": false,
          "doc": [],
          "type": "'a t"
        },
        {
          "__class__": "value",
          "name": "some",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'a t"
        },
        {
          "__class__": "value",
          "name": "some_if",
          "hidden": false,
          "doc": [],
          "type": "bool -> 'a lazy_t -> 'a t"
        },
        {
          "__class__": "value",
          "name": "some_if'",
          "hidden": false,
          "doc": [],
          "type": "bool -> 'a -> 'a t"
        },
        {
          "__class__": "value",
          "name": "is_some",
          "hidden": false,
          "doc": [],
          "type": "'a t -> bool"
        },
        {
          "__class__": "value",
          "name": "is_none",
          "hidden": false,
          "doc": [],
          "type": "'a t -> bool"
        },
        {
          "__class__": "value",
          "name": "value_def",
          "hidden": false,
          "doc": [],
          "type": "'a t -> def:'a -> 'a"
        },
        {
          "__class__": "value",
          "name": "value",
          "hidden": false,
          "doc": [],
          "type": "?exc:exn -> 'a t -> 'a"
        },
        {
          "__class__": "value",
          "name": "or_failure",
          "hidden": false,
          "doc": [],
          "type":
            "('a, unit, string, string, string, 'b t -> 'b)\nCamlinternalFormatBasics.format6 -> 'a"
        },
        {
          "__class__": "value",
          "name": "map",
          "hidden": false,
          "doc": [],
          "type": "'a t -> f:('a -> 'b) -> 'b t"
        },
        {
          "__class__": "value",
          "name": "iter",
          "hidden": false,
          "doc": [],
          "type": "'a t -> f:('a -> unit) -> unit"
        },
        {
          "__class__": "value",
          "name": "filter",
          "hidden": false,
          "doc": [],
          "type": "'a t -> f:('a -> bool) -> 'a t"
        },
        {
          "__class__": "value",
          "name": "filter_map",
          "hidden": false,
          "doc": [],
          "type": "'a t -> f:('a -> 'b option) -> 'b t"
        },
        {
          "__class__": "value",
          "name": "value_map",
          "hidden": false,
          "doc": [],
          "type": "'a t -> def:'b -> f:('a -> 'b) -> 'b"
        },
        {
          "__class__": "module",
          "name": "Specialize",
          "hidden": false,
          "doc": [],
          "functor_parameters": [
            {
              "__class__": "functor_parameter",
              "name": "A",
              "functor_parameters": [],
              "doc": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                }
              ]
            }
          ],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "A.t option",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "some_if",
              "hidden": false,
              "doc": [],
              "type": "bool -> A.t lazy_t -> t"
            },
            {
              "__class__": "value",
              "name": "some_if'",
              "hidden": false,
              "doc": [],
              "type": "bool -> A.t -> t"
            },
            {
              "__class__": "value",
              "name": "is_some",
              "hidden": false,
              "doc": [],
              "type": "t -> bool"
            },
            {
              "__class__": "value",
              "name": "is_none",
              "hidden": false,
              "doc": [],
              "type": "t -> bool"
            },
            {
              "__class__": "value",
              "name": "value_def",
              "hidden": false,
              "doc": [],
              "type": "t -> def:A.t -> A.t"
            },
            {
              "__class__": "value",
              "name": "value",
              "hidden": false,
              "doc": [],
              "type": "?exc:exn -> t -> A.t"
            },
            {
              "__class__": "value",
              "name": "or_failure",
              "hidden": false,
              "doc": [],
              "type":
                "('a, unit, string, string, string, t -> A.t) CamlinternalFormatBasics.format6 ->\n'a"
            },
            {
              "__class__": "value",
              "name": "map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(A.t -> 'a) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "iter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(A.t -> unit) -> unit"
            },
            {
              "__class__": "value",
              "name": "filter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(A.t -> bool) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(A.t -> 'a option) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "value_map",
              "hidden": false,
              "doc": [],
              "type": "t -> def:'a -> f:(A.t -> 'a) -> 'a"
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Lazy",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "'a",
          "private": false,
          "manifest": "'a lazy_t",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "is_value",
          "hidden": false,
          "doc": [],
          "type": "'a t -> bool"
        },
        {
          "__class__": "value",
          "name": "value",
          "hidden": false,
          "doc": [],
          "type": "'a t -> 'a"
        },
        {
          "__class__": "value",
          "name": "map",
          "hidden": false,
          "doc": [],
          "type": "'a t -> f:('a -> 'b) -> 'b t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Reference",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "'a",
          "private": false,
          "manifest": "'a Pervasives.OCamlStandard.Pervasives.ref",
          "kind": "{mutable contents: 'a}",
          "constructors": [],
          "labels": [
            { "__class__": "record_label", "name": "contents", "doc": [] }
          ]
        },
        {
          "__class__": "value",
          "name": "of_contents",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'a t"
        },
        {
          "__class__": "value",
          "name": "contents",
          "hidden": false,
          "doc": [],
          "type": "'a t -> 'a"
        },
        {
          "__class__": "value",
          "name": "assign",
          "hidden": false,
          "doc": [],
          "type": "'a t -> 'a -> unit"
        },
        {
          "__class__": "module",
          "name": "O",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "value",
              "name": "ref",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a t"
            },
            {
              "__class__": "value",
              "name": "(!)",
              "hidden": false,
              "doc": [],
              "type": "'a t -> 'a"
            },
            {
              "__class__": "value",
              "name": "(:=)",
              "hidden": false,
              "doc": [],
              "type": "'a t -> 'a -> unit"
            }
          ]
        },
        {
          "__class__": "module",
          "name": "SpecializeOperators",
          "hidden": false,
          "doc": [],
          "functor_parameters": [
            {
              "__class__": "functor_parameter",
              "name": "A",
              "functor_parameters": [],
              "doc": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                }
              ]
            }
          ],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "A.t t",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "ref",
              "hidden": false,
              "doc": [],
              "type": "A.t -> t"
            },
            {
              "__class__": "value",
              "name": "(!)",
              "hidden": false,
              "doc": [],
              "type": "t -> A.t"
            },
            {
              "__class__": "value",
              "name": "(:=)",
              "hidden": false,
              "doc": [],
              "type": "t -> A.t -> unit"
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Specialize",
          "hidden": false,
          "doc": [],
          "functor_parameters": [
            {
              "__class__": "functor_parameter",
              "name": "A",
              "functor_parameters": [],
              "doc": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                }
              ]
            }
          ],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "A.t t",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "of_contents",
              "hidden": false,
              "doc": [],
              "type": "A.t -> t"
            },
            {
              "__class__": "value",
              "name": "contents",
              "hidden": false,
              "doc": [],
              "type": "t -> A.t"
            },
            {
              "__class__": "value",
              "name": "assign",
              "hidden": false,
              "doc": [],
              "type": "t -> A.t -> unit"
            },
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from":
                "module type of SpecializeOperators(A) with type t := t",
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "ref",
                  "hidden": false,
                  "doc": [],
                  "type": "A.t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(!)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> A.t"
                },
                {
                  "__class__": "value",
                  "name": "(:=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> A.t -> unit"
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "SpecializePredSucc",
          "hidden": false,
          "doc": [],
          "functor_parameters": [
            {
              "__class__": "functor_parameter",
              "name": "A",
              "functor_parameters": [],
              "doc": [],
              "contents_from": "Traits.PredSucc.S0",
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "succ",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "pred",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                }
              ]
            }
          ],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "A.t t",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "increment",
              "hidden": false,
              "doc": [],
              "type": "t -> unit"
            },
            {
              "__class__": "value",
              "name": "decrement",
              "hidden": false,
              "doc": [],
              "type": "t -> unit"
            }
          ]
        },
        {
          "__class__": "module",
          "name": "SpecializeRingoidOperators",
          "hidden": false,
          "doc": [],
          "functor_parameters": [
            {
              "__class__": "functor_parameter",
              "name": "A",
              "functor_parameters": [],
              "doc": [],
              "contents_from": "Traits.Ringoid.Basic.S0",
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "zero",
                  "hidden": false,
                  "doc": [],
                  "type": "t"
                },
                {
                  "__class__": "value",
                  "name": "one",
                  "hidden": false,
                  "doc": [],
                  "type": "t"
                },
                {
                  "__class__": "value",
                  "name": "negate",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "add",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "substract",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "multiply",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "divide",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                }
              ]
            }
          ],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "A.t t",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "(=+)",
              "hidden": false,
              "doc": [],
              "type": "t -> A.t -> unit"
            },
            {
              "__class__": "value",
              "name": "(=-)",
              "hidden": false,
              "doc": [],
              "type": "t -> A.t -> unit"
            },
            {
              "__class__": "value",
              "name": "(=*)",
              "hidden": false,
              "doc": [],
              "type": "t -> A.t -> unit"
            },
            {
              "__class__": "value",
              "name": "(=/)",
              "hidden": false,
              "doc": [],
              "type": "t -> A.t -> unit"
            }
          ]
        },
        {
          "__class__": "module",
          "name": "SpecializeRingoid",
          "hidden": false,
          "doc": [],
          "functor_parameters": [
            {
              "__class__": "functor_parameter",
              "name": "A",
              "functor_parameters": [],
              "doc": [],
              "contents_from": "Traits.Ringoid.Basic.S0",
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "zero",
                  "hidden": false,
                  "doc": [],
                  "type": "t"
                },
                {
                  "__class__": "value",
                  "name": "one",
                  "hidden": false,
                  "doc": [],
                  "type": "t"
                },
                {
                  "__class__": "value",
                  "name": "negate",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t"
                },
                {
                  "__class__": "value",
                  "name": "add",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "substract",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "multiply",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                },
                {
                  "__class__": "value",
                  "name": "divide",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                }
              ]
            }
          ],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "A.t t",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from":
                "module type of SpecializeRingoidOperators(A) with type t := t",
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(=+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> A.t -> unit"
                },
                {
                  "__class__": "value",
                  "name": "(=-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> A.t -> unit"
                },
                {
                  "__class__": "value",
                  "name": "(=*)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> A.t -> unit"
                },
                {
                  "__class__": "value",
                  "name": "(=/)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> A.t -> unit"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Tuple2",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "('a, 'b)",
          "private": false,
          "manifest": "'a * 'b",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "Concepts.Able.S2 with type ('a, 'b) t := ('a, 'b) t",
          "contents": [
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b) t ->\n('a, 'b) t ->\nequal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b) t ->\n('a, 'b) t ->\nequal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b) t -> repr_a:('a -> string) -> repr_b:('b -> string) -> string"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> Foundations.Compare.t"
            },
            {
              "__class__": "value",
              "name": "less_than",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "less_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_than",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "between",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b) t ->\nlow:('a, 'b) t ->\nhigh:('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "between_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b) t ->\nlow:('a, 'b) t ->\nhigh:('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) t"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) t"
            },
            {
              "__class__": "value",
              "name": "min_max",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b) t ->\n('a, 'b) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) -> ('a, 'b) t * ('a, 'b) t"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "make",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'b -> ('a, 'b) t"
        },
        {
          "__class__": "value",
          "name": "get_0",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b) t -> 'a"
        },
        {
          "__class__": "value",
          "name": "get_1",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b) t -> 'b"
        },
        {
          "__class__": "value",
          "name": "flip",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b) t -> ('b, 'a) t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Tuple3",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "('a, 'b, 'c)",
          "private": false,
          "manifest": "'a * 'b * 'c",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "Concepts.Able.S3 with type ('a, 'b, 'c) t := ('a, 'b, 'c) t",
          "contents": [
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) -> repr_c:('c -> string) -> string"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> Foundations.Compare.t"
            },
            {
              "__class__": "value",
              "name": "less_than",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "less_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_than",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "between",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c) t ->\nlow:('a, 'b, 'c) t ->\nhigh:('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "between_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c) t ->\nlow:('a, 'b, 'c) t ->\nhigh:('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> ('a, 'b, 'c) t"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) -> ('a, 'b, 'c) t"
            },
            {
              "__class__": "value",
              "name": "min_max",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c) t ->\n('a, 'b, 'c) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\n('a, 'b, 'c) t * ('a, 'b, 'c) t"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "make",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'b -> 'c -> ('a, 'b, 'c) t"
        },
        {
          "__class__": "value",
          "name": "get_0",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c) t -> 'a"
        },
        {
          "__class__": "value",
          "name": "get_1",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c) t -> 'b"
        },
        {
          "__class__": "value",
          "name": "get_2",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c) t -> 'c"
        },
        {
          "__class__": "value",
          "name": "flip",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c) t -> ('c, 'b, 'a) t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Tuple4",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "('a, 'b, 'c, 'd)",
          "private": false,
          "manifest": "'a * 'b * 'c * 'd",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "Concepts.Able.S4 with type ('a, 'b, 'c, 'd) t := ('a, 'b, 'c, 'd) t",
          "contents": [
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) ->\nrepr_c:('c -> string) -> repr_d:('d -> string) -> string"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> Foundations.Compare.t"
            },
            {
              "__class__": "value",
              "name": "less_than",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "less_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_than",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "between",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd) t ->\nlow:('a, 'b, 'c, 'd) t ->\nhigh:('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "between_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd) t ->\nlow:('a, 'b, 'c, 'd) t ->\nhigh:('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd) t"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd) t"
            },
            {
              "__class__": "value",
              "name": "min_max",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd) t ->\n('a, 'b, 'c, 'd) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\n('a, 'b, 'c, 'd) t * ('a, 'b, 'c, 'd) t"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "make",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'b -> 'c -> 'd -> ('a, 'b, 'c, 'd) t"
        },
        {
          "__class__": "value",
          "name": "get_0",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd) t -> 'a"
        },
        {
          "__class__": "value",
          "name": "get_1",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd) t -> 'b"
        },
        {
          "__class__": "value",
          "name": "get_2",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd) t -> 'c"
        },
        {
          "__class__": "value",
          "name": "get_3",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd) t -> 'd"
        },
        {
          "__class__": "value",
          "name": "flip",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd) t -> ('d, 'c, 'b, 'a) t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Tuple5",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "('a, 'b, 'c, 'd, 'e)",
          "private": false,
          "manifest": "'a * 'b * 'c * 'd * 'e",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "Concepts.Able.S5 with type ('a, 'b, 'c, 'd, 'e) t := ('a, 'b, 'c, 'd, 'e) t",
          "contents": [
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) ->\nequal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\nequal_a:('a -> 'a -> bool) ->\nequal_b:('b -> 'b -> bool) ->\nequal_c:('c -> 'c -> bool) ->\nequal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd, 'e) t ->\nrepr_a:('a -> string) ->\nrepr_b:('b -> string) ->\nrepr_c:('c -> string) ->\nrepr_d:('d -> string) -> repr_e:('e -> string) -> string"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> Foundations.Compare.t"
            },
            {
              "__class__": "value",
              "name": "less_than",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "less_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_than",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "greater_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "between",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd, 'e) t ->\nlow:('a, 'b, 'c, 'd, 'e) t ->\nhigh:('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "between_or_equal",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd, 'e) t ->\nlow:('a, 'b, 'c, 'd, 'e) t ->\nhigh:('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> bool"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd, 'e) t"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) -> ('a, 'b, 'c, 'd, 'e) t"
            },
            {
              "__class__": "value",
              "name": "min_max",
              "hidden": false,
              "doc": [],
              "type":
                "('a, 'b, 'c, 'd, 'e) t ->\n('a, 'b, 'c, 'd, 'e) t ->\ncompare_a:('a -> 'a -> Foundations.Compare.t) ->\ncompare_b:('b -> 'b -> Foundations.Compare.t) ->\ncompare_c:('c -> 'c -> Foundations.Compare.t) ->\ncompare_d:('d -> 'd -> Foundations.Compare.t) ->\ncompare_e:('e -> 'e -> Foundations.Compare.t) ->\n('a, 'b, 'c, 'd, 'e) t * ('a, 'b, 'c, 'd, 'e) t"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "make",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'b -> 'c -> 'd -> 'e -> ('a, 'b, 'c, 'd, 'e) t"
        },
        {
          "__class__": "value",
          "name": "get_0",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd, 'e) t -> 'a"
        },
        {
          "__class__": "value",
          "name": "get_1",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd, 'e) t -> 'b"
        },
        {
          "__class__": "value",
          "name": "get_2",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd, 'e) t -> 'c"
        },
        {
          "__class__": "value",
          "name": "get_3",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd, 'e) t -> 'd"
        },
        {
          "__class__": "value",
          "name": "get_4",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd, 'e) t -> 'e"
        },
        {
          "__class__": "value",
          "name": "flip",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd, 'e) t -> ('e, 'd, 'c, 'b, 'a) t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "IntOption",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "module type of Option.Specialize(Int)",
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "Int.t option",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "some_if",
              "hidden": false,
              "doc": [],
              "type": "bool -> Int.t lazy_t -> t"
            },
            {
              "__class__": "value",
              "name": "some_if'",
              "hidden": false,
              "doc": [],
              "type": "bool -> Int.t -> t"
            },
            {
              "__class__": "value",
              "name": "is_some",
              "hidden": false,
              "doc": [],
              "type": "t -> bool"
            },
            {
              "__class__": "value",
              "name": "is_none",
              "hidden": false,
              "doc": [],
              "type": "t -> bool"
            },
            {
              "__class__": "value",
              "name": "value_def",
              "hidden": false,
              "doc": [],
              "type": "t -> def:Int.t -> Int.t"
            },
            {
              "__class__": "value",
              "name": "value",
              "hidden": false,
              "doc": [],
              "type": "?exc:exn -> t -> Int.t"
            },
            {
              "__class__": "value",
              "name": "or_failure",
              "hidden": false,
              "doc": [],
              "type":
                "('a, unit, string, string, string, t -> Int.t)\nCamlinternalFormatBasics.format6 -> 'a"
            },
            {
              "__class__": "value",
              "name": "map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> 'a) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "iter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> unit) -> unit"
            },
            {
              "__class__": "value",
              "name": "filter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> bool) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> 'a option) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "value_map",
              "hidden": false,
              "doc": [],
              "type": "t -> def:'a -> f:(Int.t -> 'a) -> 'a"
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "FloatOption",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "module type of Option.Specialize(Float)",
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "Float.t option",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "some_if",
              "hidden": false,
              "doc": [],
              "type": "bool -> Float.t lazy_t -> t"
            },
            {
              "__class__": "value",
              "name": "some_if'",
              "hidden": false,
              "doc": [],
              "type": "bool -> Float.t -> t"
            },
            {
              "__class__": "value",
              "name": "is_some",
              "hidden": false,
              "doc": [],
              "type": "t -> bool"
            },
            {
              "__class__": "value",
              "name": "is_none",
              "hidden": false,
              "doc": [],
              "type": "t -> bool"
            },
            {
              "__class__": "value",
              "name": "value_def",
              "hidden": false,
              "doc": [],
              "type": "t -> def:Float.t -> Float.t"
            },
            {
              "__class__": "value",
              "name": "value",
              "hidden": false,
              "doc": [],
              "type": "?exc:exn -> t -> Float.t"
            },
            {
              "__class__": "value",
              "name": "or_failure",
              "hidden": false,
              "doc": [],
              "type":
                "('a, unit, string, string, string, t -> Float.t)\nCamlinternalFormatBasics.format6 -> 'a"
            },
            {
              "__class__": "value",
              "name": "map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> 'a) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "iter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> unit) -> unit"
            },
            {
              "__class__": "value",
              "name": "filter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> bool) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> 'a option) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "value_map",
              "hidden": false,
              "doc": [],
              "type": "t -> def:'a -> f:(Float.t -> 'a) -> 'a"
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "StringOption",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "module type of Option.Specialize(String)",
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "String.t option",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "some_if",
              "hidden": false,
              "doc": [],
              "type": "bool -> String.t lazy_t -> t"
            },
            {
              "__class__": "value",
              "name": "some_if'",
              "hidden": false,
              "doc": [],
              "type": "bool -> String.t -> t"
            },
            {
              "__class__": "value",
              "name": "is_some",
              "hidden": false,
              "doc": [],
              "type": "t -> bool"
            },
            {
              "__class__": "value",
              "name": "is_none",
              "hidden": false,
              "doc": [],
              "type": "t -> bool"
            },
            {
              "__class__": "value",
              "name": "value_def",
              "hidden": false,
              "doc": [],
              "type": "t -> def:String.t -> String.t"
            },
            {
              "__class__": "value",
              "name": "value",
              "hidden": false,
              "doc": [],
              "type": "?exc:exn -> t -> String.t"
            },
            {
              "__class__": "value",
              "name": "or_failure",
              "hidden": false,
              "doc": [],
              "type":
                "('a, unit, string, string, string, t -> String.t)\nCamlinternalFormatBasics.format6 -> 'a"
            },
            {
              "__class__": "value",
              "name": "map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> 'a) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "iter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> unit) -> unit"
            },
            {
              "__class__": "value",
              "name": "filter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> bool) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> 'a option) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "value_map",
              "hidden": false,
              "doc": [],
              "type": "t -> def:'a -> f:(String.t -> 'a) -> 'a"
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "IntReference",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "int Reference.t",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "module",
          "name": "O",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from":
                "module type of Reference.SpecializeOperators(Int) with type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "ref",
                  "hidden": false,
                  "doc": [],
                  "type": "Int.t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(!)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> Int.t"
                },
                {
                  "__class__": "value",
                  "name": "(:=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> Int.t -> unit"
                }
              ]
            },
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from":
                "module type of Reference.SpecializeRingoidOperators(Int) with type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "(=+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> Int.t -> unit"
                },
                {
                  "__class__": "value",
                  "name": "(=-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> Int.t -> unit"
                },
                {
                  "__class__": "value",
                  "name": "(=*)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> Int.t -> unit"
                },
                {
                  "__class__": "value",
                  "name": "(=/)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> Int.t -> unit"
                }
              ]
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "module type of Reference.Specialize(Int) with type t := t and module O := O",
          "contents": [
            {
              "__class__": "value",
              "name": "of_contents",
              "hidden": false,
              "doc": [],
              "type": "Int.t -> t"
            },
            {
              "__class__": "value",
              "name": "contents",
              "hidden": false,
              "doc": [],
              "type": "t -> Int.t"
            },
            {
              "__class__": "value",
              "name": "assign",
              "hidden": false,
              "doc": [],
              "type": "t -> Int.t -> unit"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "module type of Reference.SpecializePredSucc(Int) with type t := t",
          "contents": [
            {
              "__class__": "value",
              "name": "increment",
              "hidden": false,
              "doc": [],
              "type": "t -> unit"
            },
            {
              "__class__": "value",
              "name": "decrement",
              "hidden": false,
              "doc": [],
              "type": "t -> unit"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "module type of Reference.SpecializeRingoid(Int) with type t := t and module O := O",
          "contents": []
        }
      ]
    },
    {
      "__class__": "module",
      "name": "FloatReference",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "float Reference.t",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "module",
          "name": "O",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from":
                "module type of Reference.SpecializeOperators(Float) with type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "ref",
                  "hidden": false,
                  "doc": [],
                  "type": "Float.t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(!)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> Float.t"
                },
                {
                  "__class__": "value",
                  "name": "(:=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> Float.t -> unit"
                }
              ]
            },
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from":
                "module type of Reference.SpecializeRingoidOperators(Float) with type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "(=+)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> Float.t -> unit"
                },
                {
                  "__class__": "value",
                  "name": "(=-)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> Float.t -> unit"
                },
                {
                  "__class__": "value",
                  "name": "(=*)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> Float.t -> unit"
                },
                {
                  "__class__": "value",
                  "name": "(=/)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> Float.t -> unit"
                }
              ]
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "module type of Reference.Specialize(Float) with type t := t and module O := O",
          "contents": [
            {
              "__class__": "value",
              "name": "of_contents",
              "hidden": false,
              "doc": [],
              "type": "Float.t -> t"
            },
            {
              "__class__": "value",
              "name": "contents",
              "hidden": false,
              "doc": [],
              "type": "t -> Float.t"
            },
            {
              "__class__": "value",
              "name": "assign",
              "hidden": false,
              "doc": [],
              "type": "t -> Float.t -> unit"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "module type of Reference.SpecializeRingoid(Float) with type t := t and module O := O",
          "contents": []
        }
      ]
    },
    {
      "__class__": "module",
      "name": "StringReference",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "string Reference.t",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "module",
          "name": "O",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from":
                "module type of Reference.SpecializeOperators(String) with type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "ref",
                  "hidden": false,
                  "doc": [],
                  "type": "String.t -> t"
                },
                {
                  "__class__": "value",
                  "name": "(!)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> String.t"
                },
                {
                  "__class__": "value",
                  "name": "(:=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> String.t -> unit"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "(=^)",
              "hidden": false,
              "doc": [],
              "type": "t -> string -> unit"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "module type of Reference.Specialize(String) with type t := t and module O := O",
          "contents": [
            {
              "__class__": "value",
              "name": "of_contents",
              "hidden": false,
              "doc": [],
              "type": "String.t -> t"
            },
            {
              "__class__": "value",
              "name": "contents",
              "hidden": false,
              "doc": [],
              "type": "t -> String.t"
            },
            {
              "__class__": "value",
              "name": "assign",
              "hidden": false,
              "doc": [],
              "type": "t -> String.t -> unit"
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "List",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "'a",
          "private": false,
          "manifest": "'a list",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "module",
          "name": "O",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "value",
              "name": "(@)",
              "hidden": false,
              "doc": [],
              "type": "'a t -> 'a t -> 'a t"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "empty",
          "hidden": false,
          "doc": [],
          "type": "'a t"
        },
        {
          "__class__": "value",
          "name": "singleton",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'a t"
        },
        {
          "__class__": "value",
          "name": "of_list",
          "hidden": false,
          "doc": [],
          "type": "'a list -> 'a t"
        },
        {
          "__class__": "value",
          "name": "to_list",
          "hidden": false,
          "doc": [],
          "type": "'a t -> 'a list"
        },
        {
          "__class__": "value",
          "name": "of_array",
          "hidden": false,
          "doc": [],
          "type": "'a array -> 'a t"
        },
        {
          "__class__": "value",
          "name": "to_array",
          "hidden": false,
          "doc": [],
          "type": "'a t -> 'a array"
        },
        {
          "__class__": "value",
          "name": "size",
          "hidden": false,
          "doc": [],
          "type": "'a t -> int"
        },
        {
          "__class__": "value",
          "name": "is_empty",
          "hidden": false,
          "doc": [],
          "type": "'a t -> bool"
        },
        {
          "__class__": "value",
          "name": "head",
          "hidden": false,
          "doc": [],
          "type": "'a t -> 'a"
        },
        {
          "__class__": "value",
          "name": "tail",
          "hidden": false,
          "doc": [],
          "type": "'a t -> 'a t"
        },
        {
          "__class__": "value",
          "name": "try_head",
          "hidden": false,
          "doc": [],
          "type": "'a t -> 'a option"
        },
        {
          "__class__": "value",
          "name": "try_tail",
          "hidden": false,
          "doc": [],
          "type": "'a t -> 'a t option"
        },
        {
          "__class__": "value",
          "name": "contains",
          "hidden": false,
          "doc": [],
          "type": "'a t -> 'a -> equal_a:('a -> 'a -> bool) -> bool"
        },
        {
          "__class__": "module",
          "name": "Poly",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "value",
              "name": "contains",
              "hidden": false,
              "doc": [],
              "type": "'a t -> 'a -> bool"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "prepend",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'a t -> 'a t"
        },
        {
          "__class__": "value",
          "name": "reverse",
          "hidden": false,
          "doc": [],
          "type": "'a t -> 'a t"
        },
        {
          "__class__": "value",
          "name": "concat",
          "hidden": false,
          "doc": [],
          "type": "'a t -> 'a t -> 'a t"
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Traits.FilterMapable.S1 with type 'a t := 'a t",
          "contents": [
            {
              "__class__": "value",
              "name": "map",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> 'b) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "map_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> 'b) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "filter",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> bool) -> 'a t"
            },
            {
              "__class__": "value",
              "name": "filter_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> bool) -> 'a t"
            },
            {
              "__class__": "value",
              "name": "filter_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a t"
            },
            {
              "__class__": "value",
              "name": "filter_map",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> 'b option) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "filter_map_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> 'b option) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "filter_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "flat_map",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> 'b t) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "flat_map_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> 'b t) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "flat_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b t) -> 'b t"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Traits.Foldable.S1 with type 'a t := 'a t",
          "contents": [
            {
              "__class__": "value",
              "name": "fold",
              "hidden": false,
              "doc": [],
              "type": "init:'b -> 'a t -> f:('b -> 'a -> 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_i",
              "hidden": false,
              "doc": [],
              "type": "init:'b -> 'a t -> f:(i:int -> 'b -> 'a -> 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> init:'b -> 'a t -> f:(acc:'acc -> 'b -> 'a -> 'acc * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "reduce",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> 'a -> 'a) -> 'a"
            },
            {
              "__class__": "value",
              "name": "reduce_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> 'a -> 'a) -> 'a"
            },
            {
              "__class__": "value",
              "name": "reduce_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'a -> 'acc * 'a) -> 'a"
            },
            {
              "__class__": "value",
              "name": "try_reduce",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> 'a -> 'a) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> 'a -> 'a) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'a -> 'acc * 'a) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "iter",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> unit) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> unit) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc) -> unit"
            },
            {
              "__class__": "value",
              "name": "count",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> bool) -> int"
            },
            {
              "__class__": "value",
              "name": "count_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> bool) -> int"
            },
            {
              "__class__": "value",
              "name": "count_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> int"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Traits.Foldable.Short.S1 with type 'a t := 'a t",
          "contents": [
            {
              "__class__": "value",
              "name": "fold_short",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b -> 'a t -> f:('b -> 'a -> Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b -> 'a t -> f:(i:int -> 'b -> 'a -> Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\ninit:'b ->\n'a t -> f:(acc:'acc -> 'b -> 'a -> 'acc * Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "reduce_short",
              "hidden": false,
              "doc": [],
              "type":
                "'a t -> f:('a -> 'a -> Foundations.Shorten.t * 'a) -> 'a"
            },
            {
              "__class__": "value",
              "name": "reduce_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "'a t -> f:(i:int -> 'a -> 'a -> Foundations.Shorten.t * 'a) -> 'a"
            },
            {
              "__class__": "value",
              "name": "reduce_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\n'a t -> f:(acc:'acc -> 'a -> 'a -> 'acc * Foundations.Shorten.t * 'a) -> 'a"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short",
              "hidden": false,
              "doc": [],
              "type":
                "'a t -> f:('a -> 'a -> Foundations.Shorten.t * 'a) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "'a t -> f:(i:int -> 'a -> 'a -> Foundations.Shorten.t * 'a) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\n'a t ->\nf:(acc:'acc -> 'a -> 'a -> 'acc * Foundations.Shorten.t * 'a) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "iter_short",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "'a t -> f:(i:int -> 'a -> Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\n'a t -> f:(acc:'acc -> 'a -> 'acc * Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "for_all",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "for_all_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "for_all_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "find",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> bool) -> 'a"
            },
            {
              "__class__": "value",
              "name": "find_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> bool) -> 'a"
            },
            {
              "__class__": "value",
              "name": "find_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a"
            },
            {
              "__class__": "value",
              "name": "try_find",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> bool) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "try_find_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> bool) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "try_find_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a option"
            },
            {
              "__class__": "value",
              "name": "find_map",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "find_map_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "find_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "try_find_map",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> 'b option) -> 'b option"
            },
            {
              "__class__": "value",
              "name": "try_find_map_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> 'b option) -> 'b option"
            },
            {
              "__class__": "value",
              "name": "try_find_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b option"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Traits.Scanable.S1 with type 'a t := 'a t",
          "contents": [
            {
              "__class__": "value",
              "name": "scan",
              "hidden": false,
              "doc": [],
              "type": "init:'b -> 'a t -> f:('b -> 'a -> 'b) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "scan_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b -> 'a t -> f:(i:int -> 'b -> 'a -> 'b) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "scan_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> init:'b -> 'a t -> f:(acc:'acc -> 'b -> 'a -> 'acc * 'b) -> 'b t"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Traits.Scanable.Short.S1 with type 'a t := 'a t",
          "contents": [
            {
              "__class__": "value",
              "name": "scan_short",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b -> 'a t -> f:('b -> 'a -> Foundations.Shorten.t * 'b) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "scan_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b ->\n'a t -> f:(i:int -> 'b -> 'a -> Foundations.Shorten.t * 'b) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "scan_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\ninit:'b ->\n'a t -> f:(acc:'acc -> 'b -> 'a -> 'acc * Foundations.Shorten.t * 'b) -> 'b t"
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Two",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "value",
              "name": "to_pair_list",
              "hidden": false,
              "doc": [],
              "type": "'a t -> 'b t -> ('a * 'b) t"
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Specialize",
          "hidden": false,
          "doc": [],
          "functor_parameters": [
            {
              "__class__": "functor_parameter",
              "name": "A",
              "functor_parameters": [],
              "doc": [],
              "contents_from": null,
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                }
              ]
            }
          ],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "A.t list",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(@)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "empty",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "singleton",
              "hidden": false,
              "doc": [],
              "type": "A.t -> t"
            },
            {
              "__class__": "value",
              "name": "of_list",
              "hidden": false,
              "doc": [],
              "type": "A.t list -> t"
            },
            {
              "__class__": "value",
              "name": "to_list",
              "hidden": false,
              "doc": [],
              "type": "t -> A.t list"
            },
            {
              "__class__": "value",
              "name": "of_array",
              "hidden": false,
              "doc": [],
              "type": "A.t array -> t"
            },
            {
              "__class__": "value",
              "name": "to_array",
              "hidden": false,
              "doc": [],
              "type": "t -> A.t array"
            },
            {
              "__class__": "value",
              "name": "size",
              "hidden": false,
              "doc": [],
              "type": "t -> int"
            },
            {
              "__class__": "value",
              "name": "is_empty",
              "hidden": false,
              "doc": [],
              "type": "t -> bool"
            },
            {
              "__class__": "value",
              "name": "head",
              "hidden": false,
              "doc": [],
              "type": "t -> A.t"
            },
            {
              "__class__": "value",
              "name": "tail",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "try_head",
              "hidden": false,
              "doc": [],
              "type": "t -> A.t option"
            },
            {
              "__class__": "value",
              "name": "try_tail",
              "hidden": false,
              "doc": [],
              "type": "t -> t option"
            },
            {
              "__class__": "value",
              "name": "prepend",
              "hidden": false,
              "doc": [],
              "type": "A.t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "reverse",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "concat",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from":
                "Traits.FilterMapable.S0 with type elt := A.t and type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> A.t) -> t"
                },
                {
                  "__class__": "value",
                  "name": "map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> A.t -> A.t) -> t"
                },
                {
                  "__class__": "value",
                  "name": "map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * A.t) -> t"
                },
                {
                  "__class__": "value",
                  "name": "filter",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> bool) -> t"
                },
                {
                  "__class__": "value",
                  "name": "filter_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> A.t -> bool) -> t"
                },
                {
                  "__class__": "value",
                  "name": "filter_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * bool) -> t"
                },
                {
                  "__class__": "value",
                  "name": "filter_map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> A.t option) -> t"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> A.t -> A.t option) -> t"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * A.t option) -> t"
                },
                {
                  "__class__": "value",
                  "name": "flat_map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> t) -> t"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> A.t -> t) -> t"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * t) -> t"
                }
              ]
            },
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from":
                "Traits.Foldable.S0 with type elt := A.t and type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "fold",
                  "hidden": false,
                  "doc": [],
                  "type": "init:'b -> t -> f:('b -> A.t -> 'b) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "fold_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'b -> t -> f:(i:int -> 'b -> A.t -> 'b) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "fold_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> init:'b -> t -> f:(acc:'acc -> 'b -> A.t -> 'acc * 'b) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "reduce",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> A.t -> A.t) -> A.t"
                },
                {
                  "__class__": "value",
                  "name": "reduce_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> A.t -> A.t -> A.t) -> A.t"
                },
                {
                  "__class__": "value",
                  "name": "reduce_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> A.t -> 'acc * A.t) -> A.t"
                },
                {
                  "__class__": "value",
                  "name": "try_reduce",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> A.t -> A.t) -> A.t option"
                },
                {
                  "__class__": "value",
                  "name": "try_reduce_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> A.t -> A.t -> A.t) -> A.t option"
                },
                {
                  "__class__": "value",
                  "name": "try_reduce_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> A.t -> 'acc * A.t) -> A.t option"
                },
                {
                  "__class__": "value",
                  "name": "iter",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> unit) -> unit"
                },
                {
                  "__class__": "value",
                  "name": "iter_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> A.t -> unit) -> unit"
                },
                {
                  "__class__": "value",
                  "name": "iter_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc) -> unit"
                },
                {
                  "__class__": "value",
                  "name": "count",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> bool) -> int"
                },
                {
                  "__class__": "value",
                  "name": "count_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> A.t -> bool) -> int"
                },
                {
                  "__class__": "value",
                  "name": "count_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * bool) -> int"
                }
              ]
            },
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from":
                "Traits.Foldable.Short.S0 with type elt := A.t and type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "fold_short",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'b -> t -> f:('b -> A.t -> Foundations.Shorten.t * 'b) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "fold_short_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'b -> t -> f:(i:int -> 'b -> A.t -> Foundations.Shorten.t * 'b) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "fold_short_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc ->\ninit:'b ->\nt -> f:(acc:'acc -> 'b -> A.t -> 'acc * Foundations.Shorten.t * 'b) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "reduce_short",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "t -> f:(A.t -> A.t -> Foundations.Shorten.t * A.t) -> A.t"
                },
                {
                  "__class__": "value",
                  "name": "reduce_short_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "t -> f:(i:int -> A.t -> A.t -> Foundations.Shorten.t * A.t) -> A.t"
                },
                {
                  "__class__": "value",
                  "name": "reduce_short_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc ->\nt -> f:(acc:'acc -> A.t -> A.t -> 'acc * Foundations.Shorten.t * A.t) -> A.t"
                },
                {
                  "__class__": "value",
                  "name": "try_reduce_short",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "t -> f:(A.t -> A.t -> Foundations.Shorten.t * A.t) -> A.t option"
                },
                {
                  "__class__": "value",
                  "name": "try_reduce_short_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "t -> f:(i:int -> A.t -> A.t -> Foundations.Shorten.t * A.t) -> A.t option"
                },
                {
                  "__class__": "value",
                  "name": "try_reduce_short_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc ->\nt ->\nf:(acc:'acc -> A.t -> A.t -> 'acc * Foundations.Shorten.t * A.t) ->\nA.t option"
                },
                {
                  "__class__": "value",
                  "name": "iter_short",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> Foundations.Shorten.t) -> unit"
                },
                {
                  "__class__": "value",
                  "name": "iter_short_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "t -> f:(i:int -> A.t -> Foundations.Shorten.t) -> unit"
                },
                {
                  "__class__": "value",
                  "name": "iter_short_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * Foundations.Shorten.t) -> unit"
                },
                {
                  "__class__": "value",
                  "name": "for_all",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "for_all_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> A.t -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "for_all_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "there_exists",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "there_exists_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> A.t -> bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "there_exists_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * bool) -> bool"
                },
                {
                  "__class__": "value",
                  "name": "find",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> bool) -> A.t"
                },
                {
                  "__class__": "value",
                  "name": "find_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> A.t -> bool) -> A.t"
                },
                {
                  "__class__": "value",
                  "name": "find_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * bool) -> A.t"
                },
                {
                  "__class__": "value",
                  "name": "try_find",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> bool) -> A.t option"
                },
                {
                  "__class__": "value",
                  "name": "try_find_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> A.t -> bool) -> A.t option"
                },
                {
                  "__class__": "value",
                  "name": "try_find_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * bool) -> A.t option"
                },
                {
                  "__class__": "value",
                  "name": "find_map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> 'b option) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "find_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> A.t -> 'b option) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "find_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * 'b option) -> 'b"
                },
                {
                  "__class__": "value",
                  "name": "try_find_map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(A.t -> 'b option) -> 'b option"
                },
                {
                  "__class__": "value",
                  "name": "try_find_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> A.t -> 'b option) -> 'b option"
                },
                {
                  "__class__": "value",
                  "name": "try_find_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * 'b option) -> 'b option"
                }
              ]
            },
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from":
                "Traits.Scanable.S0 with type elt := A.t and type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "scan",
                  "hidden": false,
                  "doc": [],
                  "type": "init:A.t -> t -> f:(A.t -> A.t -> A.t) -> t"
                },
                {
                  "__class__": "value",
                  "name": "scan_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:A.t -> t -> f:(i:int -> A.t -> A.t -> A.t) -> t"
                },
                {
                  "__class__": "value",
                  "name": "scan_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> init:A.t -> t -> f:(acc:'acc -> A.t -> A.t -> 'acc * A.t) -> t"
                }
              ]
            },
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from":
                "Traits.Scanable.Short.S0 with type elt := A.t and type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "scan_short",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:A.t -> t -> f:(A.t -> A.t -> Foundations.Shorten.t * A.t) -> t"
                },
                {
                  "__class__": "value",
                  "name": "scan_short_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:A.t -> t -> f:(i:int -> A.t -> A.t -> Foundations.Shorten.t * A.t) -> t"
                },
                {
                  "__class__": "value",
                  "name": "scan_short_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc ->\ninit:A.t ->\nt -> f:(acc:'acc -> A.t -> A.t -> 'acc * Foundations.Shorten.t * A.t) -> t"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "ToList",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "include",
                  "hidden": false,
                  "doc": [],
                  "contents_from":
                    "Traits.FilterMapable.ToList.S0 with type elt := A.t and type t := t",
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(A.t -> 'b) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> A.t -> 'b) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * 'b) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(A.t -> bool) -> A.t list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> A.t -> bool) -> A.t list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * bool) -> A.t list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(A.t -> 'b option) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> A.t -> 'b option) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * 'b option) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(A.t -> 'b list) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map_i",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> f:(i:int -> A.t -> 'b list) -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "flat_map_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> t -> f:(acc:'acc -> A.t -> 'acc * 'b list) -> 'b list"
                    }
                  ]
                },
                {
                  "__class__": "include",
                  "hidden": false,
                  "doc": [],
                  "contents_from":
                    "Traits.Scanable.ToList.S0 with type elt := A.t and type t := t",
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "scan",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'a -> t -> f:('a -> A.t -> 'a) -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'a -> t -> f:(i:int -> 'a -> A.t -> 'a) -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc -> init:'a -> t -> f:(acc:'acc -> 'a -> A.t -> 'acc * 'a) -> 'a list"
                    }
                  ]
                },
                {
                  "__class__": "include",
                  "hidden": false,
                  "doc": [],
                  "contents_from":
                    "Traits.Scanable.Short.ToList.S0 with type elt := A.t and type t := t",
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "scan_short",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'a -> t -> f:('a -> A.t -> Foundations.Shorten.t * 'a) -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_short_i",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "init:'a ->\nt -> f:(i:int -> 'a -> A.t -> Foundations.Shorten.t * 'a) -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "scan_short_acc",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "acc:'acc ->\ninit:'a ->\nt ->\nf:(acc:'acc -> 'a -> A.t -> 'acc * Foundations.Shorten.t * 'a) -> 'a list"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "__class__": "module",
          "name": "SpecializeEquatable",
          "hidden": false,
          "doc": [],
          "functor_parameters": [
            {
              "__class__": "functor_parameter",
              "name": "A",
              "functor_parameters": [],
              "doc": [],
              "contents_from": "Traits.Equatable.Basic.S0",
              "contents": [
                {
                  "__class__": "type",
                  "name": "t",
                  "hidden": false,
                  "doc": [],
                  "parameters": null,
                  "private": false,
                  "manifest": null,
                  "kind": null,
                  "constructors": [],
                  "labels": []
                },
                {
                  "__class__": "value",
                  "name": "equal",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                }
              ]
            }
          ],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "A.t list",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "contains",
              "hidden": false,
              "doc": [],
              "type": "t -> A.t -> bool"
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Array",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "'a",
          "private": false,
          "manifest": "'a array",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "get",
          "hidden": false,
          "doc": [],
          "type": "'a t -> int -> 'a"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Stream",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "'a",
          "private": false,
          "manifest": "'a Pervasives.OCamlStandard.Stream.t",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "empty",
          "hidden": false,
          "doc": [],
          "type": "'a t"
        },
        {
          "__class__": "value",
          "name": "singleton",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'a t"
        },
        {
          "__class__": "value",
          "name": "to_list",
          "hidden": false,
          "doc": [],
          "type": "'a t -> 'a list"
        },
        {
          "__class__": "value",
          "name": "of_list",
          "hidden": false,
          "doc": [],
          "type": "'a list -> 'a t"
        },
        {
          "__class__": "value",
          "name": "prepend",
          "hidden": false,
          "doc": [],
          "type": "'a -> 'a t -> 'a t"
        },
        {
          "__class__": "value",
          "name": "concat",
          "hidden": false,
          "doc": [],
          "type": "'a t -> 'a t -> 'a t"
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Traits.FilterMapable.S1 with type 'a t := 'a t",
          "contents": [
            {
              "__class__": "value",
              "name": "map",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> 'b) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "map_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> 'b) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "filter",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> bool) -> 'a t"
            },
            {
              "__class__": "value",
              "name": "filter_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> bool) -> 'a t"
            },
            {
              "__class__": "value",
              "name": "filter_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a t"
            },
            {
              "__class__": "value",
              "name": "filter_map",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> 'b option) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "filter_map_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> 'b option) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "filter_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "flat_map",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:('a -> 'b t) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "flat_map_i",
              "hidden": false,
              "doc": [],
              "type": "'a t -> f:(i:int -> 'a -> 'b t) -> 'b t"
            },
            {
              "__class__": "value",
              "name": "flat_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b t) -> 'b t"
            }
          ]
        },
        {
          "__class__": "module",
          "name": "ToList",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from":
                "Traits.FilterMapable.ToList.S1 with type 'a t := 'a t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "map",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:('a -> 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:(i:int -> 'a -> 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:('a -> bool) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "filter_i",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:(i:int -> 'a -> bool) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "filter_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * bool) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:('a -> 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:(i:int -> 'a -> 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:('a -> 'b list) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "'a t -> f:(i:int -> 'a -> 'b list) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> 'a t -> f:(acc:'acc -> 'a -> 'acc * 'b list) -> 'b list"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "IntRange",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": null,
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "Concepts.Identifiable.S0 with type t := t",
          "contents": [
            {
              "__class__": "value",
              "name": "equal",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "value",
              "name": "different",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> bool"
            },
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(=)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                },
                {
                  "__class__": "value",
                  "name": "(<>)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> bool"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "repr",
              "hidden": false,
              "doc": [],
              "type": "t -> string"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "empty",
          "hidden": false,
          "doc": [],
          "type": "t"
        },
        {
          "__class__": "value",
          "name": "create",
          "hidden": false,
          "doc": [],
          "type": "?start:int -> ?step:int -> int -> t"
        },
        {
          "__class__": "value",
          "name": "to_list",
          "hidden": false,
          "doc": [],
          "type": "t -> int list"
        },
        {
          "__class__": "value",
          "name": "to_array",
          "hidden": false,
          "doc": [],
          "type": "t -> int array"
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "Traits.Foldable.S0 with type elt := int and type t := t",
          "contents": [
            {
              "__class__": "value",
              "name": "fold",
              "hidden": false,
              "doc": [],
              "type": "init:'b -> t -> f:('b -> int -> 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_i",
              "hidden": false,
              "doc": [],
              "type": "init:'b -> t -> f:(i:int -> 'b -> int -> 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> init:'b -> t -> f:(acc:'acc -> 'b -> int -> 'acc * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "reduce",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(int -> int -> int) -> int"
            },
            {
              "__class__": "value",
              "name": "reduce_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> int -> int -> int) -> int"
            },
            {
              "__class__": "value",
              "name": "reduce_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> int -> int -> 'acc * int) -> int"
            },
            {
              "__class__": "value",
              "name": "try_reduce",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(int -> int -> int) -> int option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> int -> int -> int) -> int option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> int -> int -> 'acc * int) -> int option"
            },
            {
              "__class__": "value",
              "name": "iter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(int -> unit) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> int -> unit) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_acc",
              "hidden": false,
              "doc": [],
              "type": "acc:'acc -> t -> f:(acc:'acc -> int -> 'acc) -> unit"
            },
            {
              "__class__": "value",
              "name": "count",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(int -> bool) -> int"
            },
            {
              "__class__": "value",
              "name": "count_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> int -> bool) -> int"
            },
            {
              "__class__": "value",
              "name": "count_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> int -> 'acc * bool) -> int"
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "Traits.Foldable.Short.S0 with type elt := int and type t := t",
          "contents": [
            {
              "__class__": "value",
              "name": "fold_short",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b -> t -> f:('b -> int -> Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b -> t -> f:(i:int -> 'b -> int -> Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\ninit:'b ->\nt -> f:(acc:'acc -> 'b -> int -> 'acc * Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "reduce_short",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(int -> int -> Foundations.Shorten.t * int) -> int"
            },
            {
              "__class__": "value",
              "name": "reduce_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(i:int -> int -> int -> Foundations.Shorten.t * int) -> int"
            },
            {
              "__class__": "value",
              "name": "reduce_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt -> f:(acc:'acc -> int -> int -> 'acc * Foundations.Shorten.t * int) -> int"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(int -> int -> Foundations.Shorten.t * int) -> int option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(i:int -> int -> int -> Foundations.Shorten.t * int) -> int option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt ->\nf:(acc:'acc -> int -> int -> 'acc * Foundations.Shorten.t * int) ->\nint option"
            },
            {
              "__class__": "value",
              "name": "iter_short",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(int -> Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(i:int -> int -> Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> int -> 'acc * Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "for_all",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(int -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "for_all_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> int -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "for_all_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> int -> 'acc * bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(int -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> int -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> int -> 'acc * bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "find",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(int -> bool) -> int"
            },
            {
              "__class__": "value",
              "name": "find_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> int -> bool) -> int"
            },
            {
              "__class__": "value",
              "name": "find_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> int -> 'acc * bool) -> int"
            },
            {
              "__class__": "value",
              "name": "try_find",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(int -> bool) -> int option"
            },
            {
              "__class__": "value",
              "name": "try_find_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> int -> bool) -> int option"
            },
            {
              "__class__": "value",
              "name": "try_find_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> int -> 'acc * bool) -> int option"
            },
            {
              "__class__": "value",
              "name": "find_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(int -> 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "find_map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> int -> 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "find_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> int -> 'acc * 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "try_find_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(int -> 'b option) -> 'b option"
            },
            {
              "__class__": "value",
              "name": "try_find_map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> int -> 'b option) -> 'b option"
            },
            {
              "__class__": "value",
              "name": "try_find_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> int -> 'acc * 'b option) -> 'b option"
            }
          ]
        },
        {
          "__class__": "module",
          "name": "ToList",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from":
                "Traits.FilterMapable.ToList.S0 with type elt := int and type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(int -> 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> int -> 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> int -> 'acc * 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(int -> bool) -> int list"
                },
                {
                  "__class__": "value",
                  "name": "filter_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> int -> bool) -> int list"
                },
                {
                  "__class__": "value",
                  "name": "filter_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> int -> 'acc * bool) -> int list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(int -> 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> int -> 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> int -> 'acc * 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(int -> 'b list) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> int -> 'b list) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> int -> 'acc * 'b list) -> 'b list"
                }
              ]
            },
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from":
                "Traits.Scanable.ToList.S0 with type elt := int and type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "scan",
                  "hidden": false,
                  "doc": [],
                  "type": "init:'a -> t -> f:('a -> int -> 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'a -> t -> f:(i:int -> 'a -> int -> 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> init:'a -> t -> f:(acc:'acc -> 'a -> int -> 'acc * 'a) -> 'a list"
                }
              ]
            },
            {
              "__class__": "include",
              "hidden": false,
              "doc": [],
              "contents_from":
                "Traits.Scanable.Short.ToList.S0 with type elt := int and type t := t",
              "contents": [
                {
                  "__class__": "value",
                  "name": "scan_short",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'a -> t -> f:('a -> int -> Foundations.Shorten.t * 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_short_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'a ->\nt -> f:(i:int -> 'a -> int -> Foundations.Shorten.t * 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_short_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc ->\ninit:'a ->\nt ->\nf:(acc:'acc -> 'a -> int -> 'acc * Foundations.Shorten.t * 'a) -> 'a list"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "IntList",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "module type of List.Specialize(Int)",
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "Int.t list",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(@)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "empty",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "singleton",
              "hidden": false,
              "doc": [],
              "type": "Int.t -> t"
            },
            {
              "__class__": "value",
              "name": "of_list",
              "hidden": false,
              "doc": [],
              "type": "Int.t list -> t"
            },
            {
              "__class__": "value",
              "name": "to_list",
              "hidden": false,
              "doc": [],
              "type": "t -> Int.t list"
            },
            {
              "__class__": "value",
              "name": "of_array",
              "hidden": false,
              "doc": [],
              "type": "Int.t array -> t"
            },
            {
              "__class__": "value",
              "name": "to_array",
              "hidden": false,
              "doc": [],
              "type": "t -> Int.t array"
            },
            {
              "__class__": "value",
              "name": "size",
              "hidden": false,
              "doc": [],
              "type": "t -> int"
            },
            {
              "__class__": "value",
              "name": "is_empty",
              "hidden": false,
              "doc": [],
              "type": "t -> bool"
            },
            {
              "__class__": "value",
              "name": "head",
              "hidden": false,
              "doc": [],
              "type": "t -> Int.t"
            },
            {
              "__class__": "value",
              "name": "tail",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "try_head",
              "hidden": false,
              "doc": [],
              "type": "t -> Int.t option"
            },
            {
              "__class__": "value",
              "name": "try_tail",
              "hidden": false,
              "doc": [],
              "type": "t -> t option"
            },
            {
              "__class__": "value",
              "name": "prepend",
              "hidden": false,
              "doc": [],
              "type": "Int.t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "reverse",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "concat",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> Int.t) -> t"
            },
            {
              "__class__": "value",
              "name": "map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Int.t -> Int.t) -> t"
            },
            {
              "__class__": "value",
              "name": "map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * Int.t) -> t"
            },
            {
              "__class__": "value",
              "name": "filter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> bool) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Int.t -> bool) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * bool) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> Int.t option) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Int.t -> Int.t option) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * Int.t option) -> t"
            },
            {
              "__class__": "value",
              "name": "flat_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> t) -> t"
            },
            {
              "__class__": "value",
              "name": "flat_map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Int.t -> t) -> t"
            },
            {
              "__class__": "value",
              "name": "flat_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * t) -> t"
            },
            {
              "__class__": "value",
              "name": "fold",
              "hidden": false,
              "doc": [],
              "type": "init:'b -> t -> f:('b -> Int.t -> 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_i",
              "hidden": false,
              "doc": [],
              "type": "init:'b -> t -> f:(i:int -> 'b -> Int.t -> 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> init:'b -> t -> f:(acc:'acc -> 'b -> Int.t -> 'acc * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "reduce",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> Int.t -> Int.t) -> Int.t"
            },
            {
              "__class__": "value",
              "name": "reduce_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Int.t -> Int.t -> Int.t) -> Int.t"
            },
            {
              "__class__": "value",
              "name": "reduce_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Int.t -> Int.t -> 'acc * Int.t) -> Int.t"
            },
            {
              "__class__": "value",
              "name": "try_reduce",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> Int.t -> Int.t) -> Int.t option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_i",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(i:int -> Int.t -> Int.t -> Int.t) -> Int.t option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt -> f:(acc:'acc -> Int.t -> Int.t -> 'acc * Int.t) -> Int.t option"
            },
            {
              "__class__": "value",
              "name": "iter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> unit) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Int.t -> unit) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc) -> unit"
            },
            {
              "__class__": "value",
              "name": "count",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> bool) -> int"
            },
            {
              "__class__": "value",
              "name": "count_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Int.t -> bool) -> int"
            },
            {
              "__class__": "value",
              "name": "count_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * bool) -> int"
            },
            {
              "__class__": "value",
              "name": "fold_short",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b -> t -> f:('b -> Int.t -> Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b -> t -> f:(i:int -> 'b -> Int.t -> Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\ninit:'b ->\nt -> f:(acc:'acc -> 'b -> Int.t -> 'acc * Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "reduce_short",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(Int.t -> Int.t -> Foundations.Shorten.t * Int.t) -> Int.t"
            },
            {
              "__class__": "value",
              "name": "reduce_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(i:int -> Int.t -> Int.t -> Foundations.Shorten.t * Int.t) -> Int.t"
            },
            {
              "__class__": "value",
              "name": "reduce_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt ->\nf:(acc:'acc -> Int.t -> Int.t -> 'acc * Foundations.Shorten.t * Int.t) ->\nInt.t"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(Int.t -> Int.t -> Foundations.Shorten.t * Int.t) -> Int.t option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "t ->\nf:(i:int -> Int.t -> Int.t -> Foundations.Shorten.t * Int.t) -> Int.t option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt ->\nf:(acc:'acc -> Int.t -> Int.t -> 'acc * Foundations.Shorten.t * Int.t) ->\nInt.t option"
            },
            {
              "__class__": "value",
              "name": "iter_short",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(i:int -> Int.t -> Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt -> f:(acc:'acc -> Int.t -> 'acc * Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "for_all",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "for_all_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Int.t -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "for_all_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Int.t -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "find",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> bool) -> Int.t"
            },
            {
              "__class__": "value",
              "name": "find_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Int.t -> bool) -> Int.t"
            },
            {
              "__class__": "value",
              "name": "find_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * bool) -> Int.t"
            },
            {
              "__class__": "value",
              "name": "try_find",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> bool) -> Int.t option"
            },
            {
              "__class__": "value",
              "name": "try_find_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Int.t -> bool) -> Int.t option"
            },
            {
              "__class__": "value",
              "name": "try_find_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * bool) -> Int.t option"
            },
            {
              "__class__": "value",
              "name": "find_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "find_map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Int.t -> 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "find_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "try_find_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Int.t -> 'b option) -> 'b option"
            },
            {
              "__class__": "value",
              "name": "try_find_map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Int.t -> 'b option) -> 'b option"
            },
            {
              "__class__": "value",
              "name": "try_find_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * 'b option) -> 'b option"
            },
            {
              "__class__": "value",
              "name": "scan",
              "hidden": false,
              "doc": [],
              "type": "init:Int.t -> t -> f:(Int.t -> Int.t -> Int.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:Int.t -> t -> f:(i:int -> Int.t -> Int.t -> Int.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\ninit:Int.t -> t -> f:(acc:'acc -> Int.t -> Int.t -> 'acc * Int.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_short",
              "hidden": false,
              "doc": [],
              "type":
                "init:Int.t -> t -> f:(Int.t -> Int.t -> Foundations.Shorten.t * Int.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:Int.t ->\nt -> f:(i:int -> Int.t -> Int.t -> Foundations.Shorten.t * Int.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\ninit:Int.t ->\nt ->\nf:(acc:'acc -> Int.t -> Int.t -> 'acc * Foundations.Shorten.t * Int.t) -> t"
            },
            {
              "__class__": "module",
              "name": "ToList",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(Int.t -> 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> Int.t -> 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(Int.t -> bool) -> Int.t list"
                },
                {
                  "__class__": "value",
                  "name": "filter_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> Int.t -> bool) -> Int.t list"
                },
                {
                  "__class__": "value",
                  "name": "filter_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * bool) -> Int.t list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(Int.t -> 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> Int.t -> 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(Int.t -> 'b list) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> Int.t -> 'b list) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> Int.t -> 'acc * 'b list) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "scan",
                  "hidden": false,
                  "doc": [],
                  "type": "init:'a -> t -> f:('a -> Int.t -> 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'a -> t -> f:(i:int -> 'a -> Int.t -> 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc ->\ninit:'a -> t -> f:(acc:'acc -> 'a -> Int.t -> 'acc * 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_short",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'a -> t -> f:('a -> Int.t -> Foundations.Shorten.t * 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_short_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'a ->\nt -> f:(i:int -> 'a -> Int.t -> Foundations.Shorten.t * 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_short_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc ->\ninit:'a ->\nt ->\nf:(acc:'acc -> 'a -> Int.t -> 'acc * Foundations.Shorten.t * 'a) -> 'a list"
                }
              ]
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "module type of List.SpecializeEquatable(Int) with type t := t",
          "contents": [
            {
              "__class__": "value",
              "name": "contains",
              "hidden": false,
              "doc": [],
              "type": "t -> Int.t -> bool"
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "FloatList",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "module type of List.Specialize(Float)",
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "Float.t list",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(@)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "empty",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "singleton",
              "hidden": false,
              "doc": [],
              "type": "Float.t -> t"
            },
            {
              "__class__": "value",
              "name": "of_list",
              "hidden": false,
              "doc": [],
              "type": "Float.t list -> t"
            },
            {
              "__class__": "value",
              "name": "to_list",
              "hidden": false,
              "doc": [],
              "type": "t -> Float.t list"
            },
            {
              "__class__": "value",
              "name": "of_array",
              "hidden": false,
              "doc": [],
              "type": "Float.t array -> t"
            },
            {
              "__class__": "value",
              "name": "to_array",
              "hidden": false,
              "doc": [],
              "type": "t -> Float.t array"
            },
            {
              "__class__": "value",
              "name": "size",
              "hidden": false,
              "doc": [],
              "type": "t -> int"
            },
            {
              "__class__": "value",
              "name": "is_empty",
              "hidden": false,
              "doc": [],
              "type": "t -> bool"
            },
            {
              "__class__": "value",
              "name": "head",
              "hidden": false,
              "doc": [],
              "type": "t -> Float.t"
            },
            {
              "__class__": "value",
              "name": "tail",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "try_head",
              "hidden": false,
              "doc": [],
              "type": "t -> Float.t option"
            },
            {
              "__class__": "value",
              "name": "try_tail",
              "hidden": false,
              "doc": [],
              "type": "t -> t option"
            },
            {
              "__class__": "value",
              "name": "prepend",
              "hidden": false,
              "doc": [],
              "type": "Float.t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "reverse",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "concat",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> Float.t) -> t"
            },
            {
              "__class__": "value",
              "name": "map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Float.t -> Float.t) -> t"
            },
            {
              "__class__": "value",
              "name": "map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * Float.t) -> t"
            },
            {
              "__class__": "value",
              "name": "filter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> bool) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Float.t -> bool) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * bool) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> Float.t option) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Float.t -> Float.t option) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * Float.t option) -> t"
            },
            {
              "__class__": "value",
              "name": "flat_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> t) -> t"
            },
            {
              "__class__": "value",
              "name": "flat_map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Float.t -> t) -> t"
            },
            {
              "__class__": "value",
              "name": "flat_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * t) -> t"
            },
            {
              "__class__": "value",
              "name": "fold",
              "hidden": false,
              "doc": [],
              "type": "init:'b -> t -> f:('b -> Float.t -> 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b -> t -> f:(i:int -> 'b -> Float.t -> 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> init:'b -> t -> f:(acc:'acc -> 'b -> Float.t -> 'acc * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "reduce",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> Float.t -> Float.t) -> Float.t"
            },
            {
              "__class__": "value",
              "name": "reduce_i",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(i:int -> Float.t -> Float.t -> Float.t) -> Float.t"
            },
            {
              "__class__": "value",
              "name": "reduce_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt -> f:(acc:'acc -> Float.t -> Float.t -> 'acc * Float.t) -> Float.t"
            },
            {
              "__class__": "value",
              "name": "try_reduce",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(Float.t -> Float.t -> Float.t) -> Float.t option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_i",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(i:int -> Float.t -> Float.t -> Float.t) -> Float.t option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt -> f:(acc:'acc -> Float.t -> Float.t -> 'acc * Float.t) -> Float.t option"
            },
            {
              "__class__": "value",
              "name": "iter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> unit) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Float.t -> unit) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc) -> unit"
            },
            {
              "__class__": "value",
              "name": "count",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> bool) -> int"
            },
            {
              "__class__": "value",
              "name": "count_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Float.t -> bool) -> int"
            },
            {
              "__class__": "value",
              "name": "count_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * bool) -> int"
            },
            {
              "__class__": "value",
              "name": "fold_short",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b -> t -> f:('b -> Float.t -> Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b ->\nt -> f:(i:int -> 'b -> Float.t -> Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\ninit:'b ->\nt -> f:(acc:'acc -> 'b -> Float.t -> 'acc * Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "reduce_short",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(Float.t -> Float.t -> Foundations.Shorten.t * Float.t) -> Float.t"
            },
            {
              "__class__": "value",
              "name": "reduce_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "t ->\nf:(i:int -> Float.t -> Float.t -> Foundations.Shorten.t * Float.t) -> Float.t"
            },
            {
              "__class__": "value",
              "name": "reduce_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt ->\nf:(acc:'acc -> Float.t -> Float.t -> 'acc * Foundations.Shorten.t * Float.t) ->\nFloat.t"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short",
              "hidden": false,
              "doc": [],
              "type":
                "t ->\nf:(Float.t -> Float.t -> Foundations.Shorten.t * Float.t) -> Float.t option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "t ->\nf:(i:int -> Float.t -> Float.t -> Foundations.Shorten.t * Float.t) ->\nFloat.t option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt ->\nf:(acc:'acc -> Float.t -> Float.t -> 'acc * Foundations.Shorten.t * Float.t) ->\nFloat.t option"
            },
            {
              "__class__": "value",
              "name": "iter_short",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(i:int -> Float.t -> Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt -> f:(acc:'acc -> Float.t -> 'acc * Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "for_all",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "for_all_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Float.t -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "for_all_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Float.t -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "find",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> bool) -> Float.t"
            },
            {
              "__class__": "value",
              "name": "find_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Float.t -> bool) -> Float.t"
            },
            {
              "__class__": "value",
              "name": "find_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * bool) -> Float.t"
            },
            {
              "__class__": "value",
              "name": "try_find",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> bool) -> Float.t option"
            },
            {
              "__class__": "value",
              "name": "try_find_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Float.t -> bool) -> Float.t option"
            },
            {
              "__class__": "value",
              "name": "try_find_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * bool) -> Float.t option"
            },
            {
              "__class__": "value",
              "name": "find_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "find_map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Float.t -> 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "find_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "try_find_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(Float.t -> 'b option) -> 'b option"
            },
            {
              "__class__": "value",
              "name": "try_find_map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> Float.t -> 'b option) -> 'b option"
            },
            {
              "__class__": "value",
              "name": "try_find_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * 'b option) -> 'b option"
            },
            {
              "__class__": "value",
              "name": "scan",
              "hidden": false,
              "doc": [],
              "type":
                "init:Float.t -> t -> f:(Float.t -> Float.t -> Float.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:Float.t -> t -> f:(i:int -> Float.t -> Float.t -> Float.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\ninit:Float.t ->\nt -> f:(acc:'acc -> Float.t -> Float.t -> 'acc * Float.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_short",
              "hidden": false,
              "doc": [],
              "type":
                "init:Float.t ->\nt -> f:(Float.t -> Float.t -> Foundations.Shorten.t * Float.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:Float.t ->\nt -> f:(i:int -> Float.t -> Float.t -> Foundations.Shorten.t * Float.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\ninit:Float.t ->\nt ->\nf:(acc:'acc -> Float.t -> Float.t -> 'acc * Foundations.Shorten.t * Float.t) ->\nt"
            },
            {
              "__class__": "module",
              "name": "ToList",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(Float.t -> 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> Float.t -> 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(Float.t -> bool) -> Float.t list"
                },
                {
                  "__class__": "value",
                  "name": "filter_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> Float.t -> bool) -> Float.t list"
                },
                {
                  "__class__": "value",
                  "name": "filter_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * bool) -> Float.t list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(Float.t -> 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> Float.t -> 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(Float.t -> 'b list) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> Float.t -> 'b list) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> Float.t -> 'acc * 'b list) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "scan",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'a -> t -> f:('a -> Float.t -> 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'a -> t -> f:(i:int -> 'a -> Float.t -> 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc ->\ninit:'a -> t -> f:(acc:'acc -> 'a -> Float.t -> 'acc * 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_short",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'a -> t -> f:('a -> Float.t -> Foundations.Shorten.t * 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_short_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'a ->\nt -> f:(i:int -> 'a -> Float.t -> Foundations.Shorten.t * 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_short_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc ->\ninit:'a ->\nt ->\nf:(acc:'acc -> 'a -> Float.t -> 'acc * Foundations.Shorten.t * 'a) -> 'a list"
                }
              ]
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "module type of List.SpecializeEquatable(Float) with type t := t",
          "contents": [
            {
              "__class__": "value",
              "name": "contains",
              "hidden": false,
              "doc": [],
              "type": "t -> Float.t -> bool"
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "StringList",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from": "module type of List.Specialize(String)",
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "String.t list",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "module",
              "name": "O",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "(@)",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> t -> t"
                }
              ]
            },
            {
              "__class__": "value",
              "name": "empty",
              "hidden": false,
              "doc": [],
              "type": "t"
            },
            {
              "__class__": "value",
              "name": "singleton",
              "hidden": false,
              "doc": [],
              "type": "String.t -> t"
            },
            {
              "__class__": "value",
              "name": "of_list",
              "hidden": false,
              "doc": [],
              "type": "String.t list -> t"
            },
            {
              "__class__": "value",
              "name": "to_list",
              "hidden": false,
              "doc": [],
              "type": "t -> String.t list"
            },
            {
              "__class__": "value",
              "name": "of_array",
              "hidden": false,
              "doc": [],
              "type": "String.t array -> t"
            },
            {
              "__class__": "value",
              "name": "to_array",
              "hidden": false,
              "doc": [],
              "type": "t -> String.t array"
            },
            {
              "__class__": "value",
              "name": "size",
              "hidden": false,
              "doc": [],
              "type": "t -> int"
            },
            {
              "__class__": "value",
              "name": "is_empty",
              "hidden": false,
              "doc": [],
              "type": "t -> bool"
            },
            {
              "__class__": "value",
              "name": "head",
              "hidden": false,
              "doc": [],
              "type": "t -> String.t"
            },
            {
              "__class__": "value",
              "name": "tail",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "try_head",
              "hidden": false,
              "doc": [],
              "type": "t -> String.t option"
            },
            {
              "__class__": "value",
              "name": "try_tail",
              "hidden": false,
              "doc": [],
              "type": "t -> t option"
            },
            {
              "__class__": "value",
              "name": "prepend",
              "hidden": false,
              "doc": [],
              "type": "String.t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "reverse",
              "hidden": false,
              "doc": [],
              "type": "t -> t"
            },
            {
              "__class__": "value",
              "name": "concat",
              "hidden": false,
              "doc": [],
              "type": "t -> t -> t"
            },
            {
              "__class__": "value",
              "name": "map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> String.t) -> t"
            },
            {
              "__class__": "value",
              "name": "map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> String.t -> String.t) -> t"
            },
            {
              "__class__": "value",
              "name": "map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * String.t) -> t"
            },
            {
              "__class__": "value",
              "name": "filter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> bool) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> String.t -> bool) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * bool) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> String.t option) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> String.t -> String.t option) -> t"
            },
            {
              "__class__": "value",
              "name": "filter_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * String.t option) -> t"
            },
            {
              "__class__": "value",
              "name": "flat_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> t) -> t"
            },
            {
              "__class__": "value",
              "name": "flat_map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> String.t -> t) -> t"
            },
            {
              "__class__": "value",
              "name": "flat_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * t) -> t"
            },
            {
              "__class__": "value",
              "name": "fold",
              "hidden": false,
              "doc": [],
              "type": "init:'b -> t -> f:('b -> String.t -> 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b -> t -> f:(i:int -> 'b -> String.t -> 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> init:'b -> t -> f:(acc:'acc -> 'b -> String.t -> 'acc * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "reduce",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> String.t -> String.t) -> String.t"
            },
            {
              "__class__": "value",
              "name": "reduce_i",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(i:int -> String.t -> String.t -> String.t) -> String.t"
            },
            {
              "__class__": "value",
              "name": "reduce_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt -> f:(acc:'acc -> String.t -> String.t -> 'acc * String.t) -> String.t"
            },
            {
              "__class__": "value",
              "name": "try_reduce",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(String.t -> String.t -> String.t) -> String.t option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_i",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(i:int -> String.t -> String.t -> String.t) -> String.t option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt ->\nf:(acc:'acc -> String.t -> String.t -> 'acc * String.t) -> String.t option"
            },
            {
              "__class__": "value",
              "name": "iter",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> unit) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> String.t -> unit) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc) -> unit"
            },
            {
              "__class__": "value",
              "name": "count",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> bool) -> int"
            },
            {
              "__class__": "value",
              "name": "count_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> String.t -> bool) -> int"
            },
            {
              "__class__": "value",
              "name": "count_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * bool) -> int"
            },
            {
              "__class__": "value",
              "name": "fold_short",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b -> t -> f:('b -> String.t -> Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:'b ->\nt -> f:(i:int -> 'b -> String.t -> Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "fold_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\ninit:'b ->\nt ->\nf:(acc:'acc -> 'b -> String.t -> 'acc * Foundations.Shorten.t * 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "reduce_short",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(String.t -> String.t -> Foundations.Shorten.t * String.t) -> String.t"
            },
            {
              "__class__": "value",
              "name": "reduce_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "t ->\nf:(i:int -> String.t -> String.t -> Foundations.Shorten.t * String.t) ->\nString.t"
            },
            {
              "__class__": "value",
              "name": "reduce_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt ->\nf:(acc:'acc ->\n   String.t -> String.t -> 'acc * Foundations.Shorten.t * String.t) ->\nString.t"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short",
              "hidden": false,
              "doc": [],
              "type":
                "t ->\nf:(String.t -> String.t -> Foundations.Shorten.t * String.t) ->\nString.t option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "t ->\nf:(i:int -> String.t -> String.t -> Foundations.Shorten.t * String.t) ->\nString.t option"
            },
            {
              "__class__": "value",
              "name": "try_reduce_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt ->\nf:(acc:'acc ->\n   String.t -> String.t -> 'acc * Foundations.Shorten.t * String.t) ->\nString.t option"
            },
            {
              "__class__": "value",
              "name": "iter_short",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "t -> f:(i:int -> String.t -> Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "iter_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\nt -> f:(acc:'acc -> String.t -> 'acc * Foundations.Shorten.t) -> unit"
            },
            {
              "__class__": "value",
              "name": "for_all",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "for_all_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> String.t -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "for_all_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> String.t -> bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "there_exists_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * bool) -> bool"
            },
            {
              "__class__": "value",
              "name": "find",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> bool) -> String.t"
            },
            {
              "__class__": "value",
              "name": "find_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> String.t -> bool) -> String.t"
            },
            {
              "__class__": "value",
              "name": "find_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * bool) -> String.t"
            },
            {
              "__class__": "value",
              "name": "try_find",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> bool) -> String.t option"
            },
            {
              "__class__": "value",
              "name": "try_find_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> String.t -> bool) -> String.t option"
            },
            {
              "__class__": "value",
              "name": "try_find_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * bool) -> String.t option"
            },
            {
              "__class__": "value",
              "name": "find_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "find_map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> String.t -> 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "find_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * 'b option) -> 'b"
            },
            {
              "__class__": "value",
              "name": "try_find_map",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(String.t -> 'b option) -> 'b option"
            },
            {
              "__class__": "value",
              "name": "try_find_map_i",
              "hidden": false,
              "doc": [],
              "type": "t -> f:(i:int -> String.t -> 'b option) -> 'b option"
            },
            {
              "__class__": "value",
              "name": "try_find_map_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * 'b option) -> 'b option"
            },
            {
              "__class__": "value",
              "name": "scan",
              "hidden": false,
              "doc": [],
              "type":
                "init:String.t -> t -> f:(String.t -> String.t -> String.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:String.t -> t -> f:(i:int -> String.t -> String.t -> String.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\ninit:String.t ->\nt -> f:(acc:'acc -> String.t -> String.t -> 'acc * String.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_short",
              "hidden": false,
              "doc": [],
              "type":
                "init:String.t ->\nt -> f:(String.t -> String.t -> Foundations.Shorten.t * String.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_short_i",
              "hidden": false,
              "doc": [],
              "type":
                "init:String.t ->\nt ->\nf:(i:int -> String.t -> String.t -> Foundations.Shorten.t * String.t) -> t"
            },
            {
              "__class__": "value",
              "name": "scan_short_acc",
              "hidden": false,
              "doc": [],
              "type":
                "acc:'acc ->\ninit:String.t ->\nt ->\nf:(acc:'acc ->\n   String.t -> String.t -> 'acc * Foundations.Shorten.t * String.t) ->\nt"
            },
            {
              "__class__": "module",
              "name": "ToList",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(String.t -> 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> String.t -> 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * 'b) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(String.t -> bool) -> String.t list"
                },
                {
                  "__class__": "value",
                  "name": "filter_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "t -> f:(i:int -> String.t -> bool) -> String.t list"
                },
                {
                  "__class__": "value",
                  "name": "filter_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * bool) -> String.t list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(String.t -> 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "t -> f:(i:int -> String.t -> 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "filter_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * 'b option) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(String.t -> 'b list) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_i",
                  "hidden": false,
                  "doc": [],
                  "type": "t -> f:(i:int -> String.t -> 'b list) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "flat_map_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc -> t -> f:(acc:'acc -> String.t -> 'acc * 'b list) -> 'b list"
                },
                {
                  "__class__": "value",
                  "name": "scan",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'a -> t -> f:('a -> String.t -> 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'a -> t -> f:(i:int -> 'a -> String.t -> 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc ->\ninit:'a -> t -> f:(acc:'acc -> 'a -> String.t -> 'acc * 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_short",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'a -> t -> f:('a -> String.t -> Foundations.Shorten.t * 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_short_i",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "init:'a ->\nt -> f:(i:int -> 'a -> String.t -> Foundations.Shorten.t * 'a) -> 'a list"
                },
                {
                  "__class__": "value",
                  "name": "scan_short_acc",
                  "hidden": false,
                  "doc": [],
                  "type":
                    "acc:'acc ->\ninit:'a ->\nt ->\nf:(acc:'acc -> 'a -> String.t -> 'acc * Foundations.Shorten.t * 'a) ->\n'a list"
                }
              ]
            }
          ]
        },
        {
          "__class__": "include",
          "hidden": false,
          "doc": [],
          "contents_from":
            "module type of List.SpecializeEquatable(String) with type t := t",
          "contents": [
            {
              "__class__": "value",
              "name": "contains",
              "hidden": false,
              "doc": [],
              "type": "t -> String.t -> bool"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "join",
          "hidden": false,
          "doc": [],
          "type": "?sep:string -> t -> string"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Format",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": "('a, 'b, 'c, 'd, 'e, 'f)",
          "private": false,
          "manifest":
            "('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.format6",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "with_result",
          "hidden": false,
          "doc": [],
          "type":
            "('b, unit, string, string, string, 'a) t -> f:(string -> 'a) -> 'b"
        },
        {
          "__class__": "value",
          "name": "apply",
          "hidden": false,
          "doc": [],
          "type": "('a, unit, string, string, string, string) t -> 'a"
        },
        {
          "__class__": "value",
          "name": "to_string",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd, 'e, 'f) t -> string"
        },
        {
          "__class__": "value",
          "name": "of_string",
          "hidden": false,
          "doc": [],
          "type": "('a, 'b, 'c, 'd, 'e, 'f) t -> ('a, 'b, 'c, 'd, 'e, 'f) t"
        },
        {
          "__class__": "value",
          "name": "concat",
          "hidden": false,
          "doc": [],
          "type":
            "('a, 'b, 'c, 'd, 'e, 'f) t ->\n('f, 'b, 'c, 'e, 'g, 'h) t -> ('a, 'b, 'c, 'd, 'g, 'h) t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "InChannel",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "Pervasives.OCamlStandard.Pervasives.in_channel",
          "kind": null,
          "constructors": [],
          "labels": []
        }
      ]
    },
    {
      "__class__": "module",
      "name": "InFile",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": null,
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "with_file",
          "hidden": false,
          "doc": [],
          "type": "string -> f:(t -> 'a) -> 'a"
        },
        {
          "__class__": "value",
          "name": "with_channel",
          "hidden": false,
          "doc": [],
          "type": "string -> f:(InChannel.t -> 'a) -> 'a"
        },
        {
          "__class__": "value",
          "name": "channel",
          "hidden": false,
          "doc": [],
          "type": "t -> InChannel.t"
        },
        {
          "__class__": "value",
          "name": "seek",
          "hidden": false,
          "doc": [],
          "type": "t -> pos:int64 -> unit"
        },
        {
          "__class__": "value",
          "name": "pos",
          "hidden": false,
          "doc": [],
          "type": "t -> int64"
        },
        {
          "__class__": "value",
          "name": "size",
          "hidden": false,
          "doc": [],
          "type": "t -> int64"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "OutChannel",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": "Pervasives.OCamlStandard.Pervasives.out_channel",
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "print",
          "hidden": false,
          "doc": [],
          "type": "t -> ('a, t, unit, unit, unit, unit) Format.t -> 'a"
        },
        {
          "__class__": "value",
          "name": "output",
          "hidden": false,
          "doc": [],
          "type": "t -> bytes -> unit"
        },
        {
          "__class__": "value",
          "name": "flush",
          "hidden": false,
          "doc": [],
          "type": "t -> unit"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "OutFile",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "type",
          "name": "t",
          "hidden": false,
          "doc": [],
          "parameters": null,
          "private": false,
          "manifest": null,
          "kind": null,
          "constructors": [],
          "labels": []
        },
        {
          "__class__": "value",
          "name": "with_file",
          "hidden": false,
          "doc": [],
          "type": "string -> f:(t -> 'a) -> 'a"
        },
        {
          "__class__": "value",
          "name": "with_channel",
          "hidden": false,
          "doc": [],
          "type": "string -> f:(OutChannel.t -> 'a) -> 'a"
        },
        {
          "__class__": "value",
          "name": "channel",
          "hidden": false,
          "doc": [],
          "type": "t -> OutChannel.t"
        },
        {
          "__class__": "value",
          "name": "seek",
          "hidden": false,
          "doc": [],
          "type": "t -> pos:int64 -> unit"
        },
        {
          "__class__": "value",
          "name": "pos",
          "hidden": false,
          "doc": [],
          "type": "t -> int64"
        },
        {
          "__class__": "value",
          "name": "size",
          "hidden": false,
          "doc": [],
          "type": "t -> int64"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "StdIn",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "value",
          "name": "channel",
          "hidden": false,
          "doc": [],
          "type": "InChannel.t"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "StdOut",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "value",
          "name": "channel",
          "hidden": false,
          "doc": [],
          "type": "OutChannel.t"
        },
        {
          "__class__": "value",
          "name": "print",
          "hidden": false,
          "doc": [],
          "type": "('a, OutChannel.t, unit, unit, unit, unit) Format.t -> 'a"
        },
        {
          "__class__": "value",
          "name": "output",
          "hidden": false,
          "doc": [],
          "type": "bytes -> unit"
        },
        {
          "__class__": "value",
          "name": "flush",
          "hidden": false,
          "doc": [],
          "type": "unit -> unit"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "StdErr",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "value",
          "name": "channel",
          "hidden": false,
          "doc": [],
          "type": "OutChannel.t"
        },
        {
          "__class__": "value",
          "name": "print",
          "hidden": false,
          "doc": [],
          "type": "('a, OutChannel.t, unit, unit, unit, unit) Format.t -> 'a"
        },
        {
          "__class__": "value",
          "name": "output",
          "hidden": false,
          "doc": [],
          "type": "bytes -> unit"
        },
        {
          "__class__": "value",
          "name": "flush",
          "hidden": false,
          "doc": [],
          "type": "unit -> unit"
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Testing",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "module",
          "name": "Result",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": null,
              "kind": null,
              "constructors": [],
              "labels": []
            }
          ]
        },
        {
          "__class__": "module",
          "name": "Test",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": null,
          "contents": [
            {
              "__class__": "type",
              "name": "t",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "Testing.Test.t",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "run",
              "hidden": false,
              "doc": [],
              "type": "?record_backtrace:bool -> t -> Result.t"
            }
          ]
        },
        {
          "__class__": "value",
          "name": "command_line_main",
          "hidden": false,
          "doc": [],
          "type": "argv:string list -> Test.t -> Exit.t"
        },
        {
          "__class__": "value",
          "name": "(>::)",
          "hidden": false,
          "doc": [],
          "type": "string -> Test.t list -> Test.t"
        },
        {
          "__class__": "value",
          "name": "(>:)",
          "hidden": false,
          "doc": [],
          "type": "string -> unit lazy_t -> Test.t"
        },
        {
          "__class__": "value",
          "name": "(~:)",
          "hidden": false,
          "doc": [],
          "type":
            "('a, unit, string, string, string, unit lazy_t -> Test.t)\nCamlinternalFormatBasics.format6 -> 'a"
        },
        {
          "__class__": "value",
          "name": "(~::)",
          "hidden": false,
          "doc": [],
          "type":
            "('a, unit, string, string, string, Test.t list -> Test.t)\nCamlinternalFormatBasics.format6 -> 'a"
        },
        {
          "__class__": "value",
          "name": "fail",
          "hidden": false,
          "doc": [],
          "type":
            "('a, unit, string, string, string, 'b) CamlinternalFormatBasics.format6 -> 'a"
        },
        {
          "__class__": "value",
          "name": "expect_exception",
          "hidden": false,
          "doc": [],
          "type": "expected:exn -> 'a lazy_t -> unit"
        },
        {
          "__class__": "value",
          "name": "check",
          "hidden": false,
          "doc": [],
          "type":
            "repr:('a -> string) -> equal:('a -> 'a -> bool) -> expected:'a -> 'a -> unit"
        },
        {
          "__class__": "value",
          "name": "check_poly",
          "hidden": false,
          "doc": [],
          "type": "repr:('a -> string) -> expected:'a -> 'a -> unit"
        },
        {
          "__class__": "value",
          "name": "check_string",
          "hidden": false,
          "doc": [],
          "type": "expected:string -> string -> unit"
        },
        {
          "__class__": "value",
          "name": "check_bool",
          "hidden": false,
          "doc": [],
          "type": "expected:bool -> bool -> unit"
        },
        {
          "__class__": "value",
          "name": "check_true",
          "hidden": false,
          "doc": [],
          "type": "bool -> unit"
        },
        {
          "__class__": "value",
          "name": "check_false",
          "hidden": false,
          "doc": [],
          "type": "bool -> unit"
        },
        {
          "__class__": "value",
          "name": "check_int",
          "hidden": false,
          "doc": [],
          "type": "expected:int -> int -> unit"
        },
        {
          "__class__": "value",
          "name": "check_float_exact",
          "hidden": false,
          "doc": [],
          "type": "expected:float -> float -> unit"
        },
        {
          "__class__": "value",
          "name": "check_option",
          "hidden": false,
          "doc": [],
          "type":
            "repr:('a -> string) ->\nequal:('a -> 'a -> bool) -> expected:'a option -> 'a option -> unit"
        },
        {
          "__class__": "value",
          "name": "check_some",
          "hidden": false,
          "doc": [],
          "type":
            "repr:('a -> string) ->\nequal:('a -> 'a -> bool) -> expected:'a -> 'a option -> unit"
        },
        {
          "__class__": "value",
          "name": "check_none",
          "hidden": false,
          "doc": [],
          "type":
            "repr:('a -> string) -> equal:('a -> 'a -> bool) -> 'a option -> unit"
        },
        {
          "__class__": "value",
          "name": "check_int_option",
          "hidden": false,
          "doc": [],
          "type": "expected:int option -> int option -> unit"
        },
        {
          "__class__": "value",
          "name": "check_some_int",
          "hidden": false,
          "doc": [],
          "type": "expected:int -> int option -> unit"
        },
        {
          "__class__": "value",
          "name": "check_none_int",
          "hidden": false,
          "doc": [],
          "type": "int option -> unit"
        },
        {
          "__class__": "value",
          "name": "check_list",
          "hidden": false,
          "doc": [],
          "type":
            "repr:('a -> string) ->\nequal:('a -> 'a -> bool) -> expected:'a list -> 'a list -> unit"
        },
        {
          "__class__": "value",
          "name": "check_string_list",
          "hidden": false,
          "doc": [],
          "type": "expected:string list -> string list -> unit"
        },
        {
          "__class__": "value",
          "name": "check_int_list",
          "hidden": false,
          "doc": [],
          "type": "expected:int list -> int list -> unit"
        }
      ]
    },
    {
      "__class__": "floating_documentation",
      "hidden": false,
      "text": " Modules to be opened "
    },
    {
      "__class__": "module",
      "name": "Standard",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "floating_documentation",
          "hidden": false,
          "text":
            " This modules defines aliases for all standard modules in :mod:`General`: "
        },
        {
          "__class__": "module",
          "name": "Testing",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Testing",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Array",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Array",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "BigInt",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "BigInt",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Bool",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Bool",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "CallStack",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "CallStack",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Char",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Char",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Exception",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Exception",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Exit",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Exit",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Float",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Float",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Format",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Format",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Function1",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Function1",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Function2",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Function2",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Function3",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Function3",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Function4",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Function4",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Function5",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Function5",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "InChannel",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "InChannel",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "InFile",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "InFile",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Int32",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Int32",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Int64",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Int64",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Int",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Int",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Lazy",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Lazy",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "List",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "List",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "NativeInt",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "NativeInt",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Option",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Option",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "OutChannel",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "OutChannel",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "OutFile",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "OutFile",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Reference",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Reference",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "StdErr",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "StdErr",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "StdIn",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "StdIn",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "StdOut",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "StdOut",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Stream",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Stream",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "String",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "String",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Tuple2",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Tuple2",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Tuple3",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Tuple3",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Tuple4",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Tuple4",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Tuple5",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Tuple5",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Unit",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Unit",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "IntRange",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "IntRange",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "IntOption",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "IntOption",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "FloatOption",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "FloatOption",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "StringOption",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "StringOption",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "IntReference",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "IntReference",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "FloatReference",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "FloatReference",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "StringReference",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "StringReference",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "IntList",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "IntList",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "FloatList",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "FloatList",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "StringList",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "StringList",
          "contents": []
        },
        {
          "__class__": "floating_documentation",
          "hidden": false,
          "text": " It also includes :mod:`General.Pervasives`. "
        },
        {
          "__class__": "include",
          "hidden": true,
          "doc": [ " Some doc for :mod:`General.Pervasives` " ],
          "contents_from":
            "module type of Pervasives with module Array := Array and module Char := Char and module Format := Format and module Int32 := Int32 and module Int64 := Int64 and module Lazy := Lazy and module List := List and module Stream := Stream and module String := String",
          "contents": [
            {
              "__class__": "exception",
              "name": "Exit",
              "hidden": false,
              "doc": [],
              "payload": null,
              "labels": []
            },
            {
              "__class__": "value",
              "name": "__LOC__",
              "hidden": false,
              "doc": [],
              "type": "string"
            },
            {
              "__class__": "value",
              "name": "__FILE__",
              "hidden": false,
              "doc": [],
              "type": "string"
            },
            {
              "__class__": "value",
              "name": "__LINE__",
              "hidden": false,
              "doc": [],
              "type": "int"
            },
            {
              "__class__": "value",
              "name": "__MODULE__",
              "hidden": false,
              "doc": [],
              "type": "string"
            },
            {
              "__class__": "value",
              "name": "__POS__",
              "hidden": false,
              "doc": [],
              "type": "string * int * int * int"
            },
            {
              "__class__": "value",
              "name": "__LOC_OF__",
              "hidden": false,
              "doc": [],
              "type": "'a -> string * 'a"
            },
            {
              "__class__": "value",
              "name": "__LINE_OF__",
              "hidden": false,
              "doc": [],
              "type": "'a -> int * 'a"
            },
            {
              "__class__": "value",
              "name": "__POS_OF__",
              "hidden": false,
              "doc": [],
              "type": "'a -> (string * int * int * int) * 'a"
            },
            {
              "__class__": "value",
              "name": "raise",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exception__raise ]"
            },
            {
              "__class__": "value",
              "name": "raise_notrace",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Exception__raise_without_backtrace ]"
            },
            {
              "__class__": "value",
              "name": "invalid_arg",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exception__invalid_argument ]"
            },
            {
              "__class__": "value",
              "name": "failwith",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exception__failure ]"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Compare__Poly__compare ]"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Compare__Poly__min ]"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Compare__Poly__max ]"
            },
            {
              "__class__": "value",
              "name": "(==)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Equate__Phys__equal ]"
            },
            {
              "__class__": "value",
              "name": "(!=)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Equate__Phys__different ]"
            },
            {
              "__class__": "value",
              "name": "(&)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__and_ ]"
            },
            {
              "__class__": "value",
              "name": "(or)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__or_ ]"
            },
            {
              "__class__": "value",
              "name": "succ",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__succ ]"
            },
            {
              "__class__": "value",
              "name": "pred",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__pred ]"
            },
            {
              "__class__": "value",
              "name": "abs",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__abs ]"
            },
            {
              "__class__": "value",
              "name": "max_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__greatest ]"
            },
            {
              "__class__": "value",
              "name": "min_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__smallest ]"
            },
            {
              "__class__": "value",
              "name": "(land)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__Bitwise__logical_and ]"
            },
            {
              "__class__": "value",
              "name": "(lor)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__Bitwise__logical_or ]"
            },
            {
              "__class__": "value",
              "name": "(lxor)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__Bitwise__logical_xor ]"
            },
            {
              "__class__": "value",
              "name": "lnot",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__Bitwise__logical_not ]"
            },
            {
              "__class__": "value",
              "name": "(lsl)",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Int__Bitwise__logical_shift_left ]"
            },
            {
              "__class__": "value",
              "name": "(lsr)",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Int__Bitwise__logical_shift_right ]"
            },
            {
              "__class__": "value",
              "name": "(asr)",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Int__Bitwise__arithmetic_shift_right ]"
            },
            {
              "__class__": "value",
              "name": "sqrt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__sqrt ]"
            },
            {
              "__class__": "value",
              "name": "exp",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__exp ]"
            },
            {
              "__class__": "value",
              "name": "log",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__log ]"
            },
            {
              "__class__": "value",
              "name": "log10",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__log10 ]"
            },
            {
              "__class__": "value",
              "name": "expm1",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__expm1 ]"
            },
            {
              "__class__": "value",
              "name": "log1p",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__log1p ]"
            },
            {
              "__class__": "value",
              "name": "cos",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__cos ]"
            },
            {
              "__class__": "value",
              "name": "sin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__sin ]"
            },
            {
              "__class__": "value",
              "name": "tan",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__tan ]"
            },
            {
              "__class__": "value",
              "name": "acos",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__acos ]"
            },
            {
              "__class__": "value",
              "name": "asin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__asin ]"
            },
            {
              "__class__": "value",
              "name": "atan",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__atan ]"
            },
            {
              "__class__": "value",
              "name": "atan2",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__atan2 ]"
            },
            {
              "__class__": "value",
              "name": "hypot",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__hypot ]"
            },
            {
              "__class__": "value",
              "name": "cosh",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__cosh ]"
            },
            {
              "__class__": "value",
              "name": "sinh",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__sinh ]"
            },
            {
              "__class__": "value",
              "name": "tanh",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__tanh ]"
            },
            {
              "__class__": "value",
              "name": "ceil",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__ceil ]"
            },
            {
              "__class__": "value",
              "name": "floor",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__floor ]"
            },
            {
              "__class__": "value",
              "name": "abs_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__abs ]"
            },
            {
              "__class__": "value",
              "name": "copysign",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__copy_sign ]"
            },
            {
              "__class__": "value",
              "name": "mod_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__modulo ]"
            },
            {
              "__class__": "value",
              "name": "frexp",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__to_parts ]"
            },
            {
              "__class__": "value",
              "name": "ldexp",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__of_parts ]"
            },
            {
              "__class__": "value",
              "name": "modf",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Float__to_fractional_and_integral ]"
            },
            {
              "__class__": "value",
              "name": "float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__of_int ]"
            },
            {
              "__class__": "value",
              "name": "float_of_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__of_int ]"
            },
            {
              "__class__": "value",
              "name": "truncate",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__of_float ]"
            },
            {
              "__class__": "value",
              "name": "int_of_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__of_float ]"
            },
            {
              "__class__": "value",
              "name": "infinity",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__infinity ]"
            },
            {
              "__class__": "value",
              "name": "neg_infinity",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__negative_infinity ]"
            },
            {
              "__class__": "value",
              "name": "nan",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__not_a_number ]"
            },
            {
              "__class__": "value",
              "name": "max_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__smallest ]"
            },
            {
              "__class__": "value",
              "name": "min_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__greatest ]"
            },
            {
              "__class__": "value",
              "name": "epsilon_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__epsilon ]"
            },
            {
              "__class__": "type",
              "name": "fpclass",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "[ `Please_use_General__Float__Class__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "classify_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__Class__of_float ]"
            },
            {
              "__class__": "value",
              "name": "int_of_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Char__of_int ]"
            },
            {
              "__class__": "value",
              "name": "char_of_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Char__to_int ]"
            },
            {
              "__class__": "value",
              "name": "string_of_bool",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__to_string ]"
            },
            {
              "__class__": "value",
              "name": "bool_of_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__of_string ]"
            },
            {
              "__class__": "value",
              "name": "bool_of_string_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__try_of_string ]"
            },
            {
              "__class__": "value",
              "name": "string_of_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__to_string ]"
            },
            {
              "__class__": "value",
              "name": "int_of_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__of_string ]"
            },
            {
              "__class__": "value",
              "name": "int_of_string_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__try_of_string ]"
            },
            {
              "__class__": "value",
              "name": "string_of_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__of_string ]"
            },
            {
              "__class__": "value",
              "name": "float_of_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__to_string ]"
            },
            {
              "__class__": "value",
              "name": "float_of_string_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__try_of_string ]"
            },
            {
              "__class__": "value",
              "name": "fst",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Tuple2__get_0 ]"
            },
            {
              "__class__": "value",
              "name": "snd",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Tuple2__get_1 ]"
            },
            {
              "__class__": "type",
              "name": "in_channel",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "[ `Please_use_General__InChannel__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "type",
              "name": "out_channel",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "[ `Please_use_General__OutChannel__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "stdin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdIn__channel ]"
            },
            {
              "__class__": "value",
              "name": "stdout",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__channel ]"
            },
            {
              "__class__": "value",
              "name": "stderr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__channel ]"
            },
            {
              "__class__": "value",
              "name": "print_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_bytes",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_endline",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_newline",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_bytes",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_endline",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_newline",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "read_line",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "read_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "read_int_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "read_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "read_float_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "type",
              "name": "open_flag",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "[ `Please_use_General__todo ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "open_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "open_out_bin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "open_out_gen",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "flush",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__flush ]"
            },
            {
              "__class__": "value",
              "name": "flush_all",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "output_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__print ]"
            },
            {
              "__class__": "value",
              "name": "output_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__print ]"
            },
            {
              "__class__": "value",
              "name": "output_bytes",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output_substring",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output_byte",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output_binary_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output_value",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "seek_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__seek ]"
            },
            {
              "__class__": "value",
              "name": "pos_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__pos ]"
            },
            {
              "__class__": "value",
              "name": "out_channel_length",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__size ]"
            },
            {
              "__class__": "value",
              "name": "close_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "close_out_noerr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "set_binary_mode_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "open_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "open_in_bin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "open_in_gen",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "input_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input_line",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "really_input",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "really_input_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input_byte",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input_binary_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input_value",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "seek_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__seek ]"
            },
            {
              "__class__": "value",
              "name": "pos_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__pos ]"
            },
            {
              "__class__": "value",
              "name": "in_channel_length",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__size ]"
            },
            {
              "__class__": "value",
              "name": "close_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "close_in_noerr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "set_binary_mode_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "module",
              "name": "LargeFile",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "seek_out",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__OutFile__seek ]"
                },
                {
                  "__class__": "value",
                  "name": "pos_out",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__OutFile__pos ]"
                },
                {
                  "__class__": "value",
                  "name": "out_channel_length",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__OutFile__size ]"
                },
                {
                  "__class__": "value",
                  "name": "seek_in",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__InFile__seek ]"
                },
                {
                  "__class__": "value",
                  "name": "pos_in",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__InFile__pos ]"
                },
                {
                  "__class__": "value",
                  "name": "in_channel_length",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__InFile__size ]"
                }
              ]
            },
            {
              "__class__": "type",
              "name": "ref",
              "hidden": false,
              "doc": [],
              "parameters": "'a",
              "private": false,
              "manifest": "[ `Please_use_General__Reference__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "incr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__IntReference__increment ]"
            },
            {
              "__class__": "value",
              "name": "decr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__IntReference__decrement ]"
            },
            {
              "__class__": "type",
              "name": "result",
              "hidden": false,
              "doc": [],
              "parameters": "('a, 'b)",
              "private": false,
              "manifest": "[ `Please_use_General__todo ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "type",
              "name": "format6",
              "hidden": false,
              "doc": [],
              "parameters": "('a, 'b, 'c, 'd, 'e, 'f)",
              "private": false,
              "manifest": "[ `Please_use_General__Format__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "type",
              "name": "format4",
              "hidden": false,
              "doc": [],
              "parameters": "('a, 'b, 'c, 'd)",
              "private": false,
              "manifest": "[ `Please_use_General__Format__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "type",
              "name": "format",
              "hidden": false,
              "doc": [],
              "parameters": "('a, 'b, 'c)",
              "private": false,
              "manifest": "[ `Please_use_General__Format__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "string_of_format",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Format__to_string ]"
            },
            {
              "__class__": "value",
              "name": "format_of_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Format__of_string ]"
            },
            {
              "__class__": "value",
              "name": "(^^)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Format__concat ]"
            },
            {
              "__class__": "value",
              "name": "exit",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exit__exit ]"
            },
            {
              "__class__": "value",
              "name": "at_exit",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exit__at_exit ]"
            },
            {
              "__class__": "value",
              "name": "valid_float_lexem",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Standard__OCamlStandard__Pervasives__valid_float_lexem ]"
            },
            {
              "__class__": "value",
              "name": "unsafe_really_input",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Standard__OCamlStandard__Pervasives__unsafe_really_input ]"
            },
            {
              "__class__": "value",
              "name": "do_at_exit",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Standard__OCamlStandard__Pervasives__do_at_exit ]"
            },
            {
              "__class__": "module",
              "name": "OCamlStandard",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Pervasives",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "raise",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "raise_notrace",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "invalid_arg",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "failwith",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> 'a"
                    },
                    {
                      "__class__": "exception",
                      "name": "Exit",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "min",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "max",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "(==)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(!=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "not",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(&&)",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(&)",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(||)",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(or)",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "__LOC__",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "__FILE__",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "__LINE__",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "__MODULE__",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "__POS__",
                      "hidden": false,
                      "doc": [],
                      "type": "string * int * int * int"
                    },
                    {
                      "__class__": "value",
                      "name": "__LOC_OF__",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> string * 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "__LINE_OF__",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> int * 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "__POS_OF__",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> (string * int * int * int) * 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "(|>)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a -> 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "(@@)",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "(~-)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(~+)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(+)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(-)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(*)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(/)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(mod)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "abs",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "max_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "min_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "(land)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(lor)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(lxor)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "lnot",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(lsl)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(lsr)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(asr)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(~-.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(~+.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(+.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(-.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(*.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(/.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(**)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "sqrt",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "exp",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "log",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "log10",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "expm1",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "log1p",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "cos",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "sin",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "tan",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "acos",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "asin",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "atan",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "atan2",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "hypot",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "cosh",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "sinh",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "tanh",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "ceil",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "floor",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "abs_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "copysign",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "mod_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "frexp",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float * int"
                    },
                    {
                      "__class__": "value",
                      "name": "ldexp",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "modf",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float * float"
                    },
                    {
                      "__class__": "value",
                      "name": "float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "truncate",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "infinity",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "neg_infinity",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "nan",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "max_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "min_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "epsilon_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "type",
                      "name": "fpclass",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "fpclass",
                      "kind":
                        "FP_normal | FP_subnormal | FP_zero | FP_infinite | FP_nan",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "FP_normal",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "FP_subnormal",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "FP_zero",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "FP_infinite",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "FP_nan",
                          "doc": [],
                          "payload": null
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "classify_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> fpclass"
                    },
                    {
                      "__class__": "value",
                      "name": "(^)",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "char_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "ignore",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_bool",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "bool_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "bool_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool option"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> float option"
                    },
                    {
                      "__class__": "value",
                      "name": "fst",
                      "hidden": false,
                      "doc": [],
                      "type": "'a * 'b -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "snd",
                      "hidden": false,
                      "doc": [],
                      "type": "'a * 'b -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "(@)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "type",
                      "name": "in_channel",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "in_channel",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "out_channel",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "out_channel",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "stdin",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "stdout",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "stderr",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "print_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_endline",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_endline",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "read_line",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "read_int",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "read_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "read_float",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "read_float_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float option"
                    },
                    {
                      "__class__": "type",
                      "name": "open_flag",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "open_flag",
                      "kind":
                        "Open_rdonly | Open_wronly | Open_append | Open_creat | Open_trunc | Open_excl | Open_binary | Open_text | Open_nonblock",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Open_rdonly",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_wronly",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_append",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_creat",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_trunc",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_excl",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_binary",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_text",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_nonblock",
                          "doc": [],
                          "payload": null
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "open_out",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "open_out_bin",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "open_out_gen",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "open_flag list -> int -> string -> out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "flush",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "flush_all",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_char",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_string",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_substring",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> string -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_byte",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_binary_int",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_value",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "seek_out",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pos_out",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "out_channel_length",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "close_out",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_out_noerr",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_binary_mode_out",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_in",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> in_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "open_in_bin",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> in_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "open_in_gen",
                      "hidden": false,
                      "doc": [],
                      "type": "open_flag list -> int -> string -> in_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "input_char",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "input_line",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "input",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> bytes -> int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "really_input",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "really_input_string",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "input_byte",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "input_binary_int",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "input_value",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "seek_in",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pos_in",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "in_channel_length",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "close_in",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_in_noerr",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_binary_mode_in",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> bool -> unit"
                    },
                    {
                      "__class__": "module",
                      "name": "LargeFile",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "seek_out",
                          "hidden": false,
                          "doc": [],
                          "type": "out_channel -> int64 -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "pos_out",
                          "hidden": false,
                          "doc": [],
                          "type": "out_channel -> int64"
                        },
                        {
                          "__class__": "value",
                          "name": "out_channel_length",
                          "hidden": false,
                          "doc": [],
                          "type": "out_channel -> int64"
                        },
                        {
                          "__class__": "value",
                          "name": "seek_in",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> int64 -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "pos_in",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> int64"
                        },
                        {
                          "__class__": "value",
                          "name": "in_channel_length",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> int64"
                        }
                      ]
                    },
                    {
                      "__class__": "type",
                      "name": "ref",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a ref",
                      "kind": "{mutable contents: 'a}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "contents",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "ref",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a ref"
                    },
                    {
                      "__class__": "value",
                      "name": "(!)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a ref -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "(:=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a ref -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "incr",
                      "hidden": false,
                      "doc": [],
                      "type": "int ref -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "decr",
                      "hidden": false,
                      "doc": [],
                      "type": "int ref -> unit"
                    },
                    {
                      "__class__": "type",
                      "name": "result",
                      "hidden": false,
                      "doc": [],
                      "parameters": "(+'a, +'b)",
                      "private": false,
                      "manifest": "('a, 'b) result",
                      "kind": "Ok of 'a | Error of 'b",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Ok",
                          "doc": [],
                          "payload": "'a"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Error",
                          "doc": [],
                          "payload": "'b"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "format6",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd, 'e, 'f)",
                      "private": false,
                      "manifest":
                        "('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.format6",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "format4",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd)",
                      "private": false,
                      "manifest": "('a, 'b, 'c, 'c, 'c, 'd) format6",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "format",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c)",
                      "private": false,
                      "manifest": "('a, 'b, 'c, 'c) format4",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_format",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b, 'c, 'd, 'e, 'f) format6 -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "format_of_string",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e, 'f) format6 -> ('a, 'b, 'c, 'd, 'e, 'f) format6"
                    },
                    {
                      "__class__": "value",
                      "name": "(^^)",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e, 'f) format6 ->\n('f, 'b, 'c, 'e, 'g, 'h) format6 -> ('a, 'b, 'c, 'd, 'g, 'h) format6"
                    },
                    {
                      "__class__": "value",
                      "name": "exit",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "at_exit",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "valid_float_lexem",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_really_input",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "do_at_exit",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Arg",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "spec",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Arg.spec",
                      "kind":
                        "Unit of unit -> unit | Bool of bool -> unit | Set of bool ref | Clear of bool ref | String of string -> unit | Set_string of string ref | Int of int -> unit | Set_int of int ref | Float of float -> unit | Set_float of float ref | Tuple of spec list | Symbol of string list * string -> unit | Rest of string -> unit | Expand of string -> string array",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Unit",
                          "doc": [],
                          "payload": "unit -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Bool",
                          "doc": [],
                          "payload": "bool -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Set",
                          "doc": [],
                          "payload": "bool ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Clear",
                          "doc": [],
                          "payload": "bool ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "String",
                          "doc": [],
                          "payload": "string -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Set_string",
                          "doc": [],
                          "payload": "string ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Int",
                          "doc": [],
                          "payload": "int -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Set_int",
                          "doc": [],
                          "payload": "int ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Float",
                          "doc": [],
                          "payload": "float -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Set_float",
                          "doc": [],
                          "payload": "float ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Tuple",
                          "doc": [],
                          "payload": "spec list"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Symbol",
                          "doc": [],
                          "payload": "string list * string -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Rest",
                          "doc": [],
                          "payload": "string -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Expand",
                          "doc": [],
                          "payload": "string -> string array"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "key",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "doc",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "usage_msg",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "anon_fun",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string -> unit",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "parse",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(key * spec * doc) list -> anon_fun -> usage_msg -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_dynamic",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(key * spec * doc) list ref -> anon_fun -> usage_msg -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_argv",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?current:int ref ->\nstring array -> (key * spec * doc) list -> anon_fun -> usage_msg -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_argv_dynamic",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?current:int ref ->\nstring array -> (key * spec * doc) list ref -> anon_fun -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_and_expand_argv_dynamic",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "int ref ->\nstring array ref -> (key * spec * doc) list ref -> anon_fun -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_expand",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(key * spec * doc) list -> anon_fun -> usage_msg -> unit"
                    },
                    {
                      "__class__": "exception",
                      "name": "Help",
                      "hidden": false,
                      "doc": [],
                      "payload": "string",
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Bad",
                      "hidden": false,
                      "doc": [],
                      "payload": "string",
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "usage",
                      "hidden": false,
                      "doc": [],
                      "type": "(key * spec * doc) list -> usage_msg -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "usage_string",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(key * spec * doc) list -> usage_msg -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "align",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?limit:int -> (key * spec * doc) list -> (key * spec * doc) list"
                    },
                    {
                      "__class__": "value",
                      "name": "current",
                      "hidden": false,
                      "doc": [],
                      "type": "int ref"
                    },
                    {
                      "__class__": "value",
                      "name": "read_arg",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array"
                    },
                    {
                      "__class__": "value",
                      "name": "read_arg0",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array"
                    },
                    {
                      "__class__": "value",
                      "name": "write_arg",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "write_arg0",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Array",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "create_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float array"
                    },
                    {
                      "__class__": "value",
                      "name": "make_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float array"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> (int -> 'a) -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "make_matrix",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> 'a -> 'a array array"
                    },
                    {
                      "__class__": "value",
                      "name": "create_matrix",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> 'a -> 'a array array"
                    },
                    {
                      "__class__": "value",
                      "name": "append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a array -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array list -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> int -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> int -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a array -> int -> 'a array -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "to_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "of_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a -> unit) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a array -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a -> 'b) -> 'a array -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> 'a) -> 'a -> 'b array -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right",
                      "hidden": false,
                      "doc": [],
                      "type": "('b -> 'a -> 'a) -> 'b array -> 'a -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "iter2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> unit) -> 'a array -> 'b array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c) -> 'a array -> 'b array -> 'c array"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "memq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "stable_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fast_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "ArrayLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> f:(int -> 'a) -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "make_matrix",
                      "hidden": false,
                      "doc": [],
                      "type": "dimx:int -> dimy:int -> 'a -> 'a array array"
                    },
                    {
                      "__class__": "value",
                      "name": "create_matrix",
                      "hidden": false,
                      "doc": [],
                      "type": "dimx:int -> dimy:int -> 'a -> 'a array array"
                    },
                    {
                      "__class__": "value",
                      "name": "append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a array -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array list -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> pos:int -> len:int -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> pos:int -> len:int -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:'a array -> src_pos:int -> dst:'a array -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "to_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "of_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> unit) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> 'b) -> 'a array -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> 'a -> unit) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> 'a -> 'b) -> 'a array -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'a) -> init:'a -> 'b array -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('b -> 'a -> 'a) -> 'b array -> init:'a -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "iter2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> unit) -> 'a array -> 'b array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c) -> 'a array -> 'b array -> 'c array"
                    },
                    {
                      "__class__": "value",
                      "name": "exists",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> set:'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "memq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> set:'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "create_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float array"
                    },
                    {
                      "__class__": "value",
                      "name": "make_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float array"
                    },
                    {
                      "__class__": "value",
                      "name": "sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "stable_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fast_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Buffer",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Buffer.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "contents",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "to_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "nth",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "clear",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "reset",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_char",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_string",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_substring",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> string -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_subbytes",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_substitute",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> (string -> string) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_buffer",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> in_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_buffer",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "truncate",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Bytes",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> (int -> char) -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "empty",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "extend",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes list -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "cat",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "(char -> unit) -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> char -> unit) -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "(char -> char) -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> char -> char) -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "trim",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "index",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "contains",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "contains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "rcontains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "bytes",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_blit",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> char -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "BytesLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> f:(int -> char) -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "empty",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "extend",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> left:int -> right:int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:bytes -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit_string",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "sep:bytes -> bytes list -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "cat",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(char -> unit) -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> char -> unit) -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(char -> char) -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> char -> char) -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "trim",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "index",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "contains",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "contains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "rcontains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "bytes",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:bytes -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bytes"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Callback",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "register",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "register_exception",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> exn -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Char",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "code",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "chr",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> char"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "char",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_chr",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Complex",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Complex.t",
                      "kind": "{re: float; im: float}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "re",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "im",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "zero",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "one",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "i",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "neg",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "conj",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "mul",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "inv",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "div",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "sqrt",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "norm2",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "norm",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "arg",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "polar",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "exp",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "log",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "pow",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Digest",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "substring",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "subbytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "channel",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "file",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "output",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "input",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "to_hex",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "from_hex",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Ephemeron",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        },
                        {
                          "__class__": "value",
                          "name": "clean",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "stats_alive",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "SeededS",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "?random:bool -> int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        },
                        {
                          "__class__": "value",
                          "name": "clean",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "stats_alive",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "K1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('k, 'd)",
                          "private": false,
                          "manifest": "('k, 'd) Ephemeron.K1.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> ('k, 'd) t"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'k option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'k option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'k -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'a) t -> ('k, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'd) t -> ('b, 'd) t -> unit"
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.K1.Make(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.K1.MakeSeeded(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "K2",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('k1, 'k2, 'd)",
                          "private": false,
                          "manifest": "('k1, 'k2, 'd) Ephemeron.K2.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> ('k1, 'k2, 'd) t"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key1",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k1 option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key1_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k1 option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_key1",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k1 -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_key1",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_key1",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key2",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k2 option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key2_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k2 option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_key2",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k2 -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_key2",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_key2",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key1",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('k1, 'a, 'b) t -> ('k1, 'c, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'k2, 'b) t -> ('c, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key12",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('k1, 'k2, 'a) t -> ('k1, 'k2, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'd -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_data",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('k1, 'k2, 'd) t -> ('k1, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H1",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            },
                            {
                              "__class__": "functor_parameter",
                              "name": "H2",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H1.t * H2.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.K2.Make(H1)(H2).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H1",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            },
                            {
                              "__class__": "functor_parameter",
                              "name": "H2",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H1.t * H2.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest":
                                "'a Ephemeron.K2.MakeSeeded(H1)(H2).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Kn",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('k, 'd)",
                          "private": false,
                          "manifest": "('k, 'd) Ephemeron.Kn.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> ('k, 'd) t"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> 'k option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> 'k option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> 'k -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('k, 'a) t -> int -> ('k, 'b) t -> int -> int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> ('k, 'd) t -> unit"
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t array",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.Kn.Make(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t array",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.Kn.MakeSeeded(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "GenHashTable",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Ephemeron.GenHashTable.equal",
                          "kind": "ETrue | EFalse | EDead",
                          "constructors": [
                            {
                              "__class__": "type_constructor",
                              "name": "ETrue",
                              "doc": [],
                              "payload": null
                            },
                            {
                              "__class__": "type_constructor",
                              "name": "EFalse",
                              "doc": [],
                              "payload": null
                            },
                            {
                              "__class__": "type_constructor",
                              "name": "EDead",
                              "doc": [],
                              "payload": null
                            }
                          ],
                          "labels": []
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": null,
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "type",
                                  "name": "container",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": "'a",
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type":
                                    "'a container -> t -> Ephemeron.GenHashTable.equal"
                                },
                                {
                                  "__class__": "value",
                                  "name": "create",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> 'a -> 'a container"
                                },
                                {
                                  "__class__": "value",
                                  "name": "get_key",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "'a container -> t option"
                                },
                                {
                                  "__class__": "value",
                                  "name": "get_data",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "'a container -> 'a option"
                                },
                                {
                                  "__class__": "value",
                                  "name": "set_key_data",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "'a container -> t -> 'a -> unit"
                                },
                                {
                                  "__class__": "value",
                                  "name": "check_key",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "'a container -> bool"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest":
                                "'a Ephemeron.GenHashTable.MakeSeeded(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Filename",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "current_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "parent_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "dir_sep",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "is_relative",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "is_implicit",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "check_suffix",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "chop_suffix",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "extension",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_extension",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "chop_extension",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "basename",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "dirname",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "temp_file",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?temp_dir:string -> string -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "open_temp_file",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?mode:open_flag list ->\n?perms:int -> ?temp_dir:string -> string -> string -> string * out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "get_temp_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "set_temp_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "temp_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "quote",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Format",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "open_box",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_box",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_as",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_bool",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_space",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_cut",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_break",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_flush",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "force_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_if_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_margin",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_margin",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "set_max_indent",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_max_indent",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "set_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "over_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "open_hbox",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_vbox",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_hvbox",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_hovbox",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_ellipsis_text",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_ellipsis_text",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "tag",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "open_tag",
                      "hidden": false,
                      "doc": [],
                      "type": "tag -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_tag",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_print_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_mark_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_print_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "get_mark_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_formatter_out_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> int -> int -> unit) -> (unit -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "unit -> (string -> int -> int -> unit) * (unit -> unit)"
                    },
                    {
                      "__class__": "type",
                      "name": "formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Format.formatter_out_functions",
                      "kind":
                        "{out_string: string -> int -> int -> unit; out_flush: unit -> unit; out_newline: unit -> unit; out_spaces: int -> unit}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "out_string",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "out_flush",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "out_newline",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "out_spaces",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "set_formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter_out_functions -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> formatter_out_functions"
                    },
                    {
                      "__class__": "type",
                      "name": "formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Format.formatter_tag_functions",
                      "kind":
                        "{mark_open_tag: tag -> string; mark_close_tag: tag -> string; print_open_tag: tag -> unit; print_close_tag: tag -> unit}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "mark_open_tag",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "mark_close_tag",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "print_open_tag",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "print_close_tag",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "set_formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter_tag_functions -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> formatter_tag_functions"
                    },
                    {
                      "__class__": "type",
                      "name": "formatter",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Format.formatter",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "formatter_of_out_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "std_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "err_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "formatter_of_buffer",
                      "hidden": false,
                      "doc": [],
                      "type": "Buffer.t -> formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "stdbuf",
                      "hidden": false,
                      "doc": [],
                      "type": "Buffer.t"
                    },
                    {
                      "__class__": "value",
                      "name": "str_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "flush_str_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "make_formatter",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> int -> int -> unit) -> (unit -> unit) -> formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_hbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_vbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_hvbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_hovbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_box",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_close_box",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_tag",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_close_tag",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_string",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_as",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_int",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_float",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> float -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_char",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_bool",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_break",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_cut",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_space",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_force_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_flush",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_if_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_print_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_mark_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_print_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_mark_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_margin",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_margin",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_max_indent",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_max_indent",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_over_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_ellipsis_text",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_ellipsis_text",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_formatter_out_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter -> (string -> int -> int -> unit) -> (unit -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter -> unit -> (string -> int -> int -> unit) * (unit -> unit)"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> formatter_tag_functions -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> formatter_tag_functions"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> formatter_out_functions -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> formatter_out_functions"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_flush_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_list",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?pp_sep:(formatter -> unit -> unit) ->\n(formatter -> 'a -> unit) -> formatter -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_text",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter -> ('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "printf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "eprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "sprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, unit, string) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "asprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, formatter, unit, string) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "ifprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter -> ('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kfprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(formatter -> 'a) -> formatter -> ('b, formatter, unit, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "ikfprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(formatter -> 'a) -> formatter -> ('b, formatter, unit, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "ksprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'a) -> ('b, unit, string, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "kasprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'a) -> ('b, formatter, unit, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "bprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "Buffer.t -> ('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'a) -> ('b, unit, string, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "set_all_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "out:(string -> int -> int -> unit) ->\nflush:(unit -> unit) ->\nnewline:(unit -> unit) -> spaces:(int -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_all_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "unit ->\n(string -> int -> int -> unit) * (unit -> unit) * (unit -> unit) *\n(int -> unit)"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_all_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter ->\nout:(string -> int -> int -> unit) ->\nflush:(unit -> unit) ->\nnewline:(unit -> unit) -> spaces:(int -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_all_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter ->\nunit ->\n(string -> int -> int -> unit) * (unit -> unit) * (unit -> unit) *\n(int -> unit)"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_tbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_close_tbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_tbreak",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_tab",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_tab",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_tbox",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_tbox",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_tbreak",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_tab",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_tab",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Gc",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "stat",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Gc.stat",
                      "kind":
                        "{minor_words: float; promoted_words: float; major_words: float; minor_collections: int; major_collections: int; heap_words: int; heap_chunks: int; live_words: int; live_blocks: int; free_words: int; free_blocks: int; largest_free: int; fragments: int; compactions: int; top_heap_words: int; stack_size: int}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "minor_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "promoted_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "major_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "minor_collections",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "major_collections",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "heap_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "heap_chunks",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "live_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "live_blocks",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "free_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "free_blocks",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "largest_free",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "fragments",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "compactions",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "top_heap_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "stack_size",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "type",
                      "name": "control",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Gc.control",
                      "kind":
                        "{mutable minor_heap_size: int; mutable major_heap_increment: int; mutable space_overhead: int; mutable verbose: int; mutable max_overhead: int; mutable stack_limit: int; mutable allocation_policy: int; window_size: int}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "minor_heap_size",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "major_heap_increment",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "space_overhead",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "verbose",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "max_overhead",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "stack_limit",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "allocation_policy",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "window_size",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "stat",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> stat"
                    },
                    {
                      "__class__": "value",
                      "name": "quick_stat",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> stat"
                    },
                    {
                      "__class__": "value",
                      "name": "counters",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float * float * float"
                    },
                    {
                      "__class__": "value",
                      "name": "minor_words",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> control"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "control -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "minor",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "major_slice",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "major",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "full_major",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "compact",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_stat",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "allocated_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "get_minor_free",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get_bucket",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get_credit",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "huge_fallback_count",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "finalise",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "finalise_last",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> unit) -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "finalise_release",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "type",
                      "name": "alarm",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Gc.alarm",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create_alarm",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> unit) -> alarm"
                    },
                    {
                      "__class__": "value",
                      "name": "delete_alarm",
                      "hidden": false,
                      "doc": [],
                      "type": "alarm -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Genlex",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "token",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Genlex.token",
                      "kind":
                        "Kwd of string | Ident of string | Int of int | Float of float | String of string | Char of char",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Kwd",
                          "doc": [],
                          "payload": "string"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Ident",
                          "doc": [],
                          "payload": "string"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Int",
                          "doc": [],
                          "payload": "int"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Float",
                          "doc": [],
                          "payload": "float"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "String",
                          "doc": [],
                          "payload": "string"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Char",
                          "doc": [],
                          "payload": "char"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "make_lexer",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "string list -> char Stream.t -> token Stream.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Hashtbl",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b)",
                      "private": false,
                      "manifest": "('a, 'b) Hashtbl.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "?random:bool -> int -> ('a, 'b) t"
                    },
                    {
                      "__class__": "value",
                      "name": "clear",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "reset",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> ('a, 'b) t"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "find",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "find_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "find_all",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "remove",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "replace",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> unit) -> ('a, 'b) t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_inplace",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> 'b option) -> ('a, 'b) t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fold",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c -> 'c) -> ('a, 'b) t -> 'c -> 'c"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "randomize",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "is_randomized",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "type",
                      "name": "statistics",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Hashtbl.statistics",
                      "kind":
                        "{num_bindings: int; num_buckets: int; max_bucket_length: int; bucket_histogram: int array}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "num_bindings",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "num_buckets",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "max_bucket_length",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "bucket_histogram",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "stats",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> statistics"
                    },
                    {
                      "__class__": "module_type",
                      "name": "HashedType",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "hash",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Make",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "H",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Hashtbl.HashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "H.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": "'a Hashtbl.Make(H).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "SeededHashedType",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "hash",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> t -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "SeededS",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "?random:bool -> int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "MakeSeeded",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "H",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Hashtbl.SeededHashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "H.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": "'a Hashtbl.MakeSeeded(H).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "?random:bool -> int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "hash",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "seeded_hash",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "hash_param",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> 'a -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "seeded_hash_param",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int -> 'a -> int"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Int32",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "zero",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "one",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_one",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "neg",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "mul",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "div",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "rem",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "abs",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "max_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "min_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "logand",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "logor",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "logxor",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "lognot",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_left",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_logical",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "to_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int32 option"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "bits_of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_bits",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> float"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "int32",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "format",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int32 -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Int64",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "zero",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "one",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_one",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "neg",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "mul",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "div",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "rem",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "abs",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "max_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "min_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "logand",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "logor",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "logxor",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "lognot",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_left",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_logical",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "to_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "of_nativeint",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "to_nativeint",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int64 option"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "bits_of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_bits",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> float"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "int64",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "format",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int64 -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Lazy",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "+'a",
                      "private": false,
                      "manifest": "'a lazy_t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Undefined",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "force",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "force_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "from_fun",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "from_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "is_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "lazy_from_fun",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lazy_from_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lazy_is_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Lexing",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "position",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Lexing.position",
                      "kind":
                        "{pos_fname: string; pos_lnum: int; pos_bol: int; pos_cnum: int}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "pos_fname",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "pos_lnum",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "pos_bol",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "pos_cnum",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "dummy_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "position"
                    },
                    {
                      "__class__": "type",
                      "name": "lexbuf",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Lexing.lexbuf",
                      "kind":
                        "{refill_buff: lexbuf -> unit; mutable lex_buffer: bytes; mutable lex_buffer_len: int; mutable lex_abs_pos: int; mutable lex_start_pos: int; mutable lex_curr_pos: int; mutable lex_last_pos: int; mutable lex_last_action: int; mutable lex_eof_reached: bool; mutable lex_mem: int array; mutable lex_start_p: position; mutable lex_curr_p: position}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "refill_buff",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_buffer",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_buffer_len",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_abs_pos",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_start_pos",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_curr_pos",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_last_pos",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_last_action",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_eof_reached",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_mem",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_start_p",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_curr_p",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "from_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> lexbuf"
                    },
                    {
                      "__class__": "value",
                      "name": "from_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> lexbuf"
                    },
                    {
                      "__class__": "value",
                      "name": "from_function",
                      "hidden": false,
                      "doc": [],
                      "type": "(bytes -> int -> int) -> lexbuf"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_char",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_start",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_end",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_start_p",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> position"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_end_p",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> position"
                    },
                    {
                      "__class__": "value",
                      "name": "new_line",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "flush_input",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_lexeme",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_lexeme_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> int -> string option"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_lexeme_char",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_lexeme_char_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> char option"
                    },
                    {
                      "__class__": "type",
                      "name": "lex_tables",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Lexing.lex_tables",
                      "kind":
                        "{lex_base: string; lex_backtrk: string; lex_default: string; lex_trans: string; lex_check: string; lex_base_code: string; lex_backtrk_code: string; lex_default_code: string; lex_trans_code: string; lex_check_code: string; lex_code: string}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "lex_base",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_backtrk",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_default",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_trans",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_check",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_base_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_backtrk_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_default_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_trans_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_check_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_code",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "engine",
                      "hidden": false,
                      "doc": [],
                      "type": "lex_tables -> int -> lexbuf -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "new_engine",
                      "hidden": false,
                      "doc": [],
                      "type": "lex_tables -> int -> lexbuf -> int"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "List",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_lengths",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'b list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_length_with",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "cons",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "hd",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "tl",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "nth",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "nth_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "rev",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "flatten",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a -> unit) -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_map",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> 'a) -> 'a -> 'b list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> 'b) -> 'a list -> 'b -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "iter2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> unit) -> 'a list -> 'b list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c -> 'a) -> 'a -> 'b list -> 'c list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c -> 'c) -> 'a list -> 'b list -> 'c -> 'c"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "memq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "find",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "find_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "filter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "find_all",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "partition",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a list * 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "assoc_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "assq_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "mem_assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem_assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "split",
                      "hidden": false,
                      "doc": [],
                      "type": "('a * 'b) list -> 'a list * 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "combine",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'b list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "stable_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "fast_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "sort_uniq",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "merge",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'a -> int) -> 'a list -> 'a list -> 'a list"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "ListLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "hd",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_lengths",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'b list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_length_with",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> len:int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "cons",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "tl",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "nth",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "nth_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "rev",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "flatten",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> unit) -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> 'a -> unit) -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> 'a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'a) -> init:'a -> 'b list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'b) -> 'a list -> init:'b -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "iter2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> unit) -> 'a list -> 'b list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c -> 'a) -> init:'a -> 'b list -> 'c list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c -> 'c) -> 'a list -> 'b list -> init:'c -> 'c"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> set:'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "memq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> set:'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "find",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "find_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "filter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "find_all",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "partition",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> bool) -> 'a list -> 'a list * 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "assoc_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "assq_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "mem_assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> map:('a * 'b) list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem_assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> map:('a * 'b) list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "split",
                      "hidden": false,
                      "doc": [],
                      "type": "('a * 'b) list -> 'a list * 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "combine",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'b list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "stable_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "fast_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "sort_uniq",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "merge",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "cmp:('a -> 'a -> int) -> 'a list -> 'a list -> 'a list"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Map",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "OrderedType",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "+'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "is_empty",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "singleton",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t"
                        },
                        {
                          "__class__": "value",
                          "name": "union",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "('a -> 'a -> int) -> 'a t -> 'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a -> 'a -> bool) -> 'a t -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> bool) -> 'a t -> 'a t * 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "cardinal",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "bindings",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) list"
                        },
                        {
                          "__class__": "value",
                          "name": "min_binding",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "min_binding_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "max_binding",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "max_binding_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "choose",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "choose_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a t * 'a option * 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> bool) -> 'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first_opt",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> bool) -> 'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> bool) -> 'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last_opt",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> bool) -> 'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "('a -> 'b) -> 'a t -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'b) -> 'a t -> 'b t"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Make",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "Ord",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Map.OrderedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Ord.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "+'a",
                          "private": false,
                          "manifest": "'a Map.Make(Ord).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "is_empty",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "singleton",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t"
                        },
                        {
                          "__class__": "value",
                          "name": "union",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "('a -> 'a -> int) -> 'a t -> 'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a -> 'a -> bool) -> 'a t -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> bool) -> 'a t -> 'a t * 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "cardinal",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "bindings",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) list"
                        },
                        {
                          "__class__": "value",
                          "name": "min_binding",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "min_binding_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "max_binding",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "max_binding_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "choose",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "choose_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a t * 'a option * 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> bool) -> 'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first_opt",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> bool) -> 'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> bool) -> 'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last_opt",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> bool) -> 'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "('a -> 'b) -> 'a t -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'b) -> 'a t -> 'b t"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Marshal",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "extern_flags",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Marshal.extern_flags",
                      "kind": "No_sharing | Closures | Compat_32",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "No_sharing",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Closures",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Compat_32",
                          "doc": [],
                          "payload": null
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "to_channel",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "out_channel -> 'a -> extern_flags list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "to_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> extern_flags list -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> extern_flags list -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "to_buffer",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "bytes -> int -> int -> 'a -> extern_flags list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "from_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "from_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "from_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "header_size",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "data_size",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "total_size",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "MoreLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module",
                      "name": "Hashtbl",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b)",
                          "private": false,
                          "manifest": "('a, 'b) Hashtbl.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "?random:bool -> int -> ('a, 'b) t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> ('a, 'b) t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> key:'a -> data:'b -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> 'b option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> key:'a -> data:'b -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(key:'a -> data:'b -> unit) -> ('a, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(key:'a -> data:'b -> 'b option) -> ('a, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(key:'a -> data:'b -> 'c -> 'c) -> ('a, 'b) t -> init:'c -> 'c"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "randomize",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "is_randomized",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> bool"
                        },
                        {
                          "__class__": "type",
                          "name": "statistics",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Hashtbl.statistics",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> statistics"
                        },
                        {
                          "__class__": "module_type",
                          "name": "HashedType",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": "Hashtbl.HashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "SeededHashedType",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": "Hashtbl.SeededHashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> t -> int"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "S",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "SeededS",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from":
                                "MoreLabels.Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a MoreLabels.Hashtbl.Make(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> MoreLabels.Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from":
                                "MoreLabels.Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest":
                                "'a MoreLabels.Hashtbl.MakeSeeded(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> MoreLabels.Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "value",
                          "name": "hash",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "seeded_hash",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "hash_param",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> int -> 'a -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "seeded_hash_param",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> int -> int -> 'a -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Map",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "module_type",
                          "name": "OrderedType",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": "Map.OrderedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "S",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "+'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "empty",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "is_empty",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "key:key -> data:'a -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "singleton",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "merge",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t"
                            },
                            {
                              "__class__": "value",
                              "name": "union",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "cmp:('a -> 'a -> int) -> 'a t -> 'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "cmp:('a -> 'a -> bool) -> 'a t -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "for_all",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "exists",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "partition",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a -> bool) -> 'a t -> 'a t * 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "cardinal",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "bindings",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) list"
                            },
                            {
                              "__class__": "value",
                              "name": "min_binding",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "min_binding_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "max_binding",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "max_binding_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "choose",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "choose_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "split",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "key -> 'a t -> 'a t * 'a option * 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> bool) -> 'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first_opt",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> bool) -> 'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> bool) -> 'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last_opt",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> bool) -> 'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "f:('a -> 'b) -> 'a t -> 'b t"
                            },
                            {
                              "__class__": "value",
                              "name": "mapi",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> 'b) -> 'a t -> 'b t"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "Ord",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "MoreLabels.Map.OrderedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "compare",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "Ord.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "+'a",
                              "private": false,
                              "manifest": "'a MoreLabels.Map.Make(Ord).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "empty",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "is_empty",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "key:key -> data:'a -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "singleton",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "merge",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t"
                            },
                            {
                              "__class__": "value",
                              "name": "union",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "cmp:('a -> 'a -> int) -> 'a t -> 'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "cmp:('a -> 'a -> bool) -> 'a t -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "for_all",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "exists",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "partition",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a -> bool) -> 'a t -> 'a t * 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "cardinal",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "bindings",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) list"
                            },
                            {
                              "__class__": "value",
                              "name": "min_binding",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "min_binding_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "max_binding",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "max_binding_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "choose",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "choose_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "split",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "key -> 'a t -> 'a t * 'a option * 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> bool) -> 'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first_opt",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> bool) -> 'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> bool) -> 'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last_opt",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> bool) -> 'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "f:('a -> 'b) -> 'a t -> 'b t"
                            },
                            {
                              "__class__": "value",
                              "name": "mapi",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> 'b) -> 'a t -> 'b t"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Set",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "module_type",
                          "name": "OrderedType",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": "Set.OrderedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "S",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "elt",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "empty",
                              "hidden": false,
                              "doc": [],
                              "type": "t"
                            },
                            {
                              "__class__": "value",
                              "name": "is_empty",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "singleton",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "union",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "inter",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "diff",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "subset",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> unit) -> t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> elt) -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(elt -> 'a -> 'a) -> t -> init:'a -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "for_all",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "exists",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "partition",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> t * t"
                            },
                            {
                              "__class__": "value",
                              "name": "cardinal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "elements",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt list"
                            },
                            {
                              "__class__": "value",
                              "name": "min_elt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "min_elt_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "max_elt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "max_elt_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "choose",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "choose_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "split",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t * bool * t"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "of_list",
                              "hidden": false,
                              "doc": [],
                              "type": "elt list -> t"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "Ord",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "MoreLabels.Set.OrderedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "compare",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "elt",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "Ord.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "MoreLabels.Set.Make(Ord).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "empty",
                              "hidden": false,
                              "doc": [],
                              "type": "t"
                            },
                            {
                              "__class__": "value",
                              "name": "is_empty",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "singleton",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "union",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "inter",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "diff",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "subset",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> unit) -> t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> elt) -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(elt -> 'a -> 'a) -> t -> init:'a -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "for_all",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "exists",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "partition",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> t * t"
                            },
                            {
                              "__class__": "value",
                              "name": "cardinal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "elements",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt list"
                            },
                            {
                              "__class__": "value",
                              "name": "min_elt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "min_elt_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "max_elt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "max_elt_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "choose",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "choose_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "split",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t * bool * t"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "of_list",
                              "hidden": false,
                              "doc": [],
                              "type": "elt list -> t"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Nativeint",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "zero",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "one",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_one",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "neg",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "mul",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "div",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "rem",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "abs",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "size",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "max_int",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "min_int",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "logand",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "logor",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "logxor",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "lognot",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_left",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_logical",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "to_float",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> nativeint option"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "nativeint",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "format",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> nativeint -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Oo",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "< .. > -> < .. >"
                    },
                    {
                      "__class__": "value",
                      "name": "id",
                      "hidden": false,
                      "doc": [],
                      "type": "< .. > -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "new_method",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> CamlinternalOO.tag"
                    },
                    {
                      "__class__": "value",
                      "name": "public_method_label",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> CamlinternalOO.tag"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Parsing",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "symbol_start",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "symbol_end",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rhs_start",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rhs_end",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "symbol_start_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> Lexing.position"
                    },
                    {
                      "__class__": "value",
                      "name": "symbol_end_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> Lexing.position"
                    },
                    {
                      "__class__": "value",
                      "name": "rhs_start_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> Lexing.position"
                    },
                    {
                      "__class__": "value",
                      "name": "rhs_end_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> Lexing.position"
                    },
                    {
                      "__class__": "value",
                      "name": "clear_parser",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "exception",
                      "name": "Parse_error",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "set_trace",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool"
                    },
                    {
                      "__class__": "type",
                      "name": "parser_env",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Parsing.parser_env",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "parse_tables",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Parsing.parse_tables",
                      "kind":
                        "{actions: (parser_env -> Obj.t) array; transl_const: int array; transl_block: int array; lhs: string; len: string; defred: string; dgoto: string; sindex: string; rindex: string; gindex: string; tablesize: int; table: string; check: string; error_function: string -> unit; names_const: string; names_block: string}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "actions",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "transl_const",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "transl_block",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lhs",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "len",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "defred",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "dgoto",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "sindex",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "rindex",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "gindex",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "tablesize",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "table",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "check",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "error_function",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "names_const",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "names_block",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "exception",
                      "name": "YYexit",
                      "hidden": false,
                      "doc": [],
                      "payload": "Obj.t",
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "yyparse",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "parse_tables -> int -> (Lexing.lexbuf -> 'a) -> Lexing.lexbuf -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "peek_val",
                      "hidden": false,
                      "doc": [],
                      "type": "parser_env -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "is_current_lookahead",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_error",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Printexc",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "print",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "catch",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "print_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "record_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "backtrace_status",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "register_printer",
                      "hidden": false,
                      "doc": [],
                      "type": "(exn -> string option) -> unit"
                    },
                    {
                      "__class__": "type",
                      "name": "raw_backtrace",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Printexc.raw_backtrace",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "get_raw_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> raw_backtrace"
                    },
                    {
                      "__class__": "value",
                      "name": "print_raw_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> raw_backtrace -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "raw_backtrace_to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "raise_with_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> raw_backtrace -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "get_callstack",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> raw_backtrace"
                    },
                    {
                      "__class__": "value",
                      "name": "set_uncaught_exception_handler",
                      "hidden": false,
                      "doc": [],
                      "type": "(exn -> raw_backtrace -> unit) -> unit"
                    },
                    {
                      "__class__": "type",
                      "name": "backtrace_slot",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Printexc.backtrace_slot",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "backtrace_slots",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace -> backtrace_slot array option"
                    },
                    {
                      "__class__": "type",
                      "name": "location",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Printexc.location",
                      "kind":
                        "{filename: string; line_number: int; start_char: int; end_char: int}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "filename",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "line_number",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "start_char",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "end_char",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Slot",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Printexc.backtrace_slot",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "is_raise",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "is_inline",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "location",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> Printexc.location option"
                        },
                        {
                          "__class__": "value",
                          "name": "format",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> t -> string option"
                        }
                      ]
                    },
                    {
                      "__class__": "type",
                      "name": "raw_backtrace_slot",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Printexc.raw_backtrace_slot",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "raw_backtrace_length",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get_raw_backtrace_slot",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace -> int -> raw_backtrace_slot"
                    },
                    {
                      "__class__": "value",
                      "name": "convert_raw_backtrace_slot",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace_slot -> backtrace_slot"
                    },
                    {
                      "__class__": "value",
                      "name": "get_raw_backtrace_next_slot",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "raw_backtrace_slot -> raw_backtrace_slot option"
                    },
                    {
                      "__class__": "value",
                      "name": "exn_slot_id",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "exn_slot_name",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Printf",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "fprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "out_channel -> ('a, out_channel, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "printf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, out_channel, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "eprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, out_channel, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "sprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, unit, string) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "bprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "Buffer.t -> ('a, Buffer.t, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "ifprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "'b -> ('a, 'b, 'c, unit) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kfprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(out_channel -> 'd) ->\nout_channel -> ('a, out_channel, unit, 'd) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "ikfprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('b -> 'd) -> 'b -> ('a, 'b, 'c, 'd) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "ksprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'd) -> ('a, unit, string, 'd) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kbprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(Buffer.t -> 'd) -> Buffer.t -> ('a, Buffer.t, unit, 'd) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'b) -> ('a, unit, string, 'b) format4 -> 'a"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Queue",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a Queue.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Empty",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "push",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "take",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "pop",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "peek",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "top",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "clear",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "is_empty",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fold",
                      "hidden": false,
                      "doc": [],
                      "type": "('b -> 'a -> 'b) -> 'b -> 'a t -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "transfer",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a t -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Random",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "full_init",
                      "hidden": false,
                      "doc": [],
                      "type": "int array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "self_init",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "bits",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int32",
                      "hidden": false,
                      "doc": [],
                      "type": "Int32.t -> Int32.t"
                    },
                    {
                      "__class__": "value",
                      "name": "nativeint",
                      "hidden": false,
                      "doc": [],
                      "type": "Nativeint.t -> Nativeint.t"
                    },
                    {
                      "__class__": "value",
                      "name": "int64",
                      "hidden": false,
                      "doc": [],
                      "type": "Int64.t -> Int64.t"
                    },
                    {
                      "__class__": "value",
                      "name": "float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "bool",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "module",
                      "name": "State",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Random.State.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "make",
                          "hidden": false,
                          "doc": [],
                          "type": "int array -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "make_self_init",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "bits",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "int",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "int32",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> Int32.t -> Int32.t"
                        },
                        {
                          "__class__": "value",
                          "name": "nativeint",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> Nativeint.t -> Nativeint.t"
                        },
                        {
                          "__class__": "value",
                          "name": "int64",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> Int64.t -> Int64.t"
                        },
                        {
                          "__class__": "value",
                          "name": "float",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> float -> float"
                        },
                        {
                          "__class__": "value",
                          "name": "bool",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "get_state",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> State.t"
                    },
                    {
                      "__class__": "value",
                      "name": "set_state",
                      "hidden": false,
                      "doc": [],
                      "type": "State.t -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Scanf",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module",
                      "name": "Scanning",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "in_channel",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Scanf.Scanning.in_channel",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "scanbuf",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "in_channel",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "stdin",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel"
                        },
                        {
                          "__class__": "type",
                          "name": "file_name",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "string",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "open_in",
                          "hidden": false,
                          "doc": [],
                          "type": "file_name -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "open_in_bin",
                          "hidden": false,
                          "doc": [],
                          "type": "file_name -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "close_in",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "from_file",
                          "hidden": false,
                          "doc": [],
                          "type": "file_name -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "from_file_bin",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "from_string",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "from_function",
                          "hidden": false,
                          "doc": [],
                          "type": "(unit -> char) -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "from_channel",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "end_of_input",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "beginning_of_input",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "name_of_input",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "stdib",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel"
                        }
                      ]
                    },
                    {
                      "__class__": "type",
                      "name": "scanner",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd)",
                      "private": false,
                      "manifest":
                        "('a, Scanning.in_channel, 'b, 'c, 'a -> 'd, 'd) format6 -> 'c",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Scan_failure",
                      "hidden": false,
                      "doc": [],
                      "payload": "string",
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "bscanf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "Scanning.in_channel -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "sscanf",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "scanf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "kscanf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "Scanning.in_channel ->\n(Scanning.in_channel -> exn -> 'd) -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "ksscanf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "string -> (Scanning.in_channel -> exn -> 'd) -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "bscanf_format",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "Scanning.in_channel ->\n('a, 'b, 'c, 'd, 'e, 'f) format6 ->\n(('a, 'b, 'c, 'd, 'e, 'f) format6 -> 'g) -> 'g"
                    },
                    {
                      "__class__": "value",
                      "name": "sscanf_format",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "string ->\n('a, 'b, 'c, 'd, 'e, 'f) format6 ->\n(('a, 'b, 'c, 'd, 'e, 'f) format6 -> 'g) -> 'g"
                    },
                    {
                      "__class__": "value",
                      "name": "format_from_string",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "string ->\n('a, 'b, 'c, 'd, 'e, 'f) format6 -> ('a, 'b, 'c, 'd, 'e, 'f) format6"
                    },
                    {
                      "__class__": "value",
                      "name": "unescaped",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "fscanf",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "kfscanf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "in_channel -> (Scanning.in_channel -> exn -> 'd) -> ('a, 'b, 'c, 'd) scanner"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Set",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "OrderedType",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "t"
                        },
                        {
                          "__class__": "value",
                          "name": "is_empty",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "singleton",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "union",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "inter",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "diff",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "subset",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> unit) -> t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> elt) -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> 'a -> 'a) -> t -> 'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> t * t"
                        },
                        {
                          "__class__": "value",
                          "name": "cardinal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "elements",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt list"
                        },
                        {
                          "__class__": "value",
                          "name": "min_elt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "min_elt_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "max_elt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "max_elt_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "choose",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "choose_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t * bool * t"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "of_list",
                          "hidden": false,
                          "doc": [],
                          "type": "elt list -> t"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Make",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "Ord",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Set.OrderedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Ord.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Set.Make(Ord).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "t"
                        },
                        {
                          "__class__": "value",
                          "name": "is_empty",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "singleton",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "union",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "inter",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "diff",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "subset",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> unit) -> t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> elt) -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> 'a -> 'a) -> t -> 'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> t * t"
                        },
                        {
                          "__class__": "value",
                          "name": "cardinal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "elements",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt list"
                        },
                        {
                          "__class__": "value",
                          "name": "min_elt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "min_elt_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "max_elt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "max_elt_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "choose",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "choose_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t * bool * t"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "of_list",
                          "hidden": false,
                          "doc": [],
                          "type": "elt list -> t"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Sort",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "list",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "array",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> bool) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "merge",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'a -> bool) -> 'a list -> 'a list -> 'a list"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Spacetime",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "enabled",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "module",
                      "name": "Series",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Spacetime.Series.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "path:string -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "save_event",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "?time:float -> t -> event_name:string -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "save_and_close",
                          "hidden": false,
                          "doc": [],
                          "type": "?time:float -> t -> unit"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Snapshot",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "take",
                          "hidden": false,
                          "doc": [],
                          "type": "?time:float -> Spacetime.Series.t -> unit"
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "save_event_for_automatic_snapshots",
                      "hidden": false,
                      "doc": [],
                      "type": "event_name:string -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Stack",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a Stack.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Empty",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "push",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pop",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "top",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "clear",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "is_empty",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fold",
                      "hidden": false,
                      "doc": [],
                      "type": "('b -> 'a -> 'b) -> 'b -> 'a t -> 'b"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "StdLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module",
                      "name": "Array",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "get",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "set",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "make",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "init",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> f:(int -> 'a) -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "make_matrix",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "dimx:int -> dimy:int -> 'a -> 'a array array"
                        },
                        {
                          "__class__": "value",
                          "name": "create_matrix",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "dimx:int -> dimy:int -> 'a -> 'a array array"
                        },
                        {
                          "__class__": "value",
                          "name": "append",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> 'a array -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "concat",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array list -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "sub",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a array -> pos:int -> len:int -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a array -> pos:int -> len:int -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:'a array -> src_pos:int -> dst:'a array -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "to_list",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "of_list",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> unit) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> 'b) -> 'a array -> 'b array"
                        },
                        {
                          "__class__": "value",
                          "name": "iteri",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> 'a -> unit) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(int -> 'a -> 'b) -> 'a array -> 'b array"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_left",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'a) -> init:'a -> 'b array -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('b -> 'a -> 'a) -> 'b array -> init:'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "iter2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> unit) -> 'a array -> 'b array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c) -> 'a array -> 'b array -> 'c array"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a array -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a array -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> set:'a array -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "memq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> set:'a array -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "create_float",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> float array"
                        },
                        {
                          "__class__": "value",
                          "name": "make_float",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> float array"
                        },
                        {
                          "__class__": "value",
                          "name": "sort",
                          "hidden": false,
                          "doc": [],
                          "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "stable_sort",
                          "hidden": false,
                          "doc": [],
                          "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fast_sort",
                          "hidden": false,
                          "doc": [],
                          "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_get",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_set",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int -> 'a -> unit"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Bytes",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "get",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char"
                        },
                        {
                          "__class__": "value",
                          "name": "set",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "make",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> char -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "init",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> f:(int -> char) -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "of_string",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "to_string",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "sub",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> pos:int -> len:int -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "sub_string",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> int -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "extend",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> left:int -> right:int -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "bytes -> pos:int -> len:int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:bytes -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_string",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "concat",
                          "hidden": false,
                          "doc": [],
                          "type": "sep:bytes -> bytes list -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "cat",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(char -> unit) -> bytes -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iteri",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> char -> unit) -> bytes -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(char -> char) -> bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> char -> char) -> bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "trim",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "escaped",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "index",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "index_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "index_from",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "index_from_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_from",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_from_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "contains",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "contains_from",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "rcontains_from",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "uppercase",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "lowercase",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "capitalize",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "uncapitalize",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "uppercase_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "lowercase_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "capitalize_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "uncapitalize_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "bytes",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_get",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_set",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:bytes -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "bytes -> pos:int -> len:int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_to_string",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_of_string",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> bytes"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "List",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "hd",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "compare_lengths",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'b list -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "compare_length_with",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> len:int -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "cons",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "tl",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "nth",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> int -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "nth_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> int -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "rev",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "append",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "rev_append",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "concat",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "flatten",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> unit) -> 'a list -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iteri",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> 'a -> unit) -> 'a list -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> 'b) -> 'a list -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> 'a -> 'b) -> 'a list -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "rev_map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> 'b) -> 'a list -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_left",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'a) -> init:'a -> 'b list -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'b) -> 'a list -> init:'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "iter2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> unit) -> 'a list -> 'b list -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                        },
                        {
                          "__class__": "value",
                          "name": "rev_map2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_left2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c -> 'a) -> init:'a -> 'b list -> 'c list -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c -> 'c) -> 'a list -> 'b list -> init:'c -> 'c"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> set:'a list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "memq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> set:'a list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> bool) -> 'a list -> 'a list * 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "assoc",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "assoc_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> 'b option"
                        },
                        {
                          "__class__": "value",
                          "name": "assq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "assq_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> 'b option"
                        },
                        {
                          "__class__": "value",
                          "name": "mem_assoc",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> map:('a * 'b) list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem_assq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> map:('a * 'b) list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "remove_assoc",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                        },
                        {
                          "__class__": "value",
                          "name": "remove_assq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "('a * 'b) list -> 'a list * 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "combine",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'b list -> ('a * 'b) list"
                        },
                        {
                          "__class__": "value",
                          "name": "sort",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "stable_sort",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "fast_sort",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "sort_uniq",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list -> 'a list"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "String",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "get",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char"
                        },
                        {
                          "__class__": "value",
                          "name": "set",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "make",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> char -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "init",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> f:(int -> char) -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "sub",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> pos:int -> len:int -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "bytes -> pos:int -> len:int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "concat",
                          "hidden": false,
                          "doc": [],
                          "type": "sep:string -> string list -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(char -> unit) -> string -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iteri",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> char -> unit) -> string -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(char -> char) -> string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(int -> char -> char) -> string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "trim",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "escaped",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "index",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "index_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "index_from",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "index_from_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_from",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_from_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "contains",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "contains_from",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "rcontains_from",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "uppercase",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "lowercase",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "capitalize",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "uncapitalize",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "uppercase_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "lowercase_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "capitalize_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "uncapitalize_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "string",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "split_on_char",
                          "hidden": false,
                          "doc": [],
                          "type": "sep:char -> string -> string list"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_get",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_set",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "bytes -> pos:int -> len:int -> char -> unit"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Stream",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a Stream.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Failure",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Error",
                      "hidden": false,
                      "doc": [],
                      "payload": "string",
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "from",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a option) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "of_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char t"
                    },
                    {
                      "__class__": "value",
                      "name": "of_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char t"
                    },
                    {
                      "__class__": "value",
                      "name": "of_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> char t"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "next",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "empty",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "peek",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "junk",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "count",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "npeek",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a t -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "iapp",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "icons",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "ising",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lapp",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a t) -> 'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lcons",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a) -> 'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lsing",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "sempty",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "slazy",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a t) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "dump",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a t -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "String",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> (int -> char) -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string list -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "(char -> unit) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> char -> unit) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "(char -> char) -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> char -> char) -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "trim",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "index",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "contains",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "contains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "rcontains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "split_on_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> string -> string list"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_blit",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> char -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "StringLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> f:(int -> char) -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> pos:int -> len:int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "sep:string -> string list -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(char -> unit) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> char -> unit) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(char -> char) -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> char -> char) -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "trim",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "index",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "contains",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "contains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "rcontains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "split_on_char",
                      "hidden": false,
                      "doc": [],
                      "type": "sep:char -> string -> string list"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> char -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Sys",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "argv",
                      "hidden": false,
                      "doc": [],
                      "type": "string array"
                    },
                    {
                      "__class__": "value",
                      "name": "executable_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "file_exists",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "is_directory",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "remove",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "rename",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "getenv",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "getenv_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string option"
                    },
                    {
                      "__class__": "value",
                      "name": "command",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "time",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "chdir",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "getcwd",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "readdir",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array"
                    },
                    {
                      "__class__": "value",
                      "name": "interactive",
                      "hidden": false,
                      "doc": [],
                      "type": "bool ref"
                    },
                    {
                      "__class__": "value",
                      "name": "os_type",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "type",
                      "name": "backend_type",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Sys.backend_type",
                      "kind": "Native | Bytecode | Other of string",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Native",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Bytecode",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Other",
                          "doc": [],
                          "payload": "string"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "backend_type",
                      "hidden": false,
                      "doc": [],
                      "type": "backend_type"
                    },
                    {
                      "__class__": "value",
                      "name": "unix",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "value",
                      "name": "win32",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "value",
                      "name": "cygwin",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "value",
                      "name": "word_size",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_size",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_endian",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "value",
                      "name": "max_string_length",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "max_array_length",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "runtime_variant",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "runtime_parameters",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "signal_behavior",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Sys.signal_behavior",
                      "kind":
                        "Signal_default | Signal_ignore | Signal_handle of int -> unit",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Signal_default",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Signal_ignore",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Signal_handle",
                          "doc": [],
                          "payload": "int -> unit"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "signal",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> signal_behavior -> signal_behavior"
                    },
                    {
                      "__class__": "value",
                      "name": "set_signal",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> signal_behavior -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "sigabrt",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigalrm",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigfpe",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sighup",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigill",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigint",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigkill",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigpipe",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigquit",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigsegv",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigterm",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigusr1",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigusr2",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigchld",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigcont",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigstop",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigtstp",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigttin",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigttou",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigvtalrm",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigprof",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigbus",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigpoll",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigsys",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigtrap",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigurg",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigxcpu",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigxfsz",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "exception",
                      "name": "Break",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "catch_break",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "ocaml_version",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "enable_runtime_warnings",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "runtime_warnings_enabled",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "opaque_identity",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Uchar",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Uchar.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "min",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "max",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "is_valid",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "is_char",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "of_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "to_char",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_to_char",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "hash",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Weak",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a Weak.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> 'a option -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "get_copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "check",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> int -> 'a option -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> 'a t -> int -> int -> unit"
                    },
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "data",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data list"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(data -> unit) -> t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type": "(data -> 'a -> 'a) -> t -> 'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "count",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int * int * int * int * int * int"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Make",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "H",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Hashtbl.HashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "data",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "H.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Weak.Make(H).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data list"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(data -> unit) -> t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type": "(data -> 'a -> 'a) -> t -> 'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "count",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int * int * int * int * int * int"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Num",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "num",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Num.num",
                      "kind":
                        "Int of int | Big_int of Big_int.big_int | Ratio of Ratio.ratio",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Int",
                          "doc": [],
                          "payload": "int"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Big_int",
                          "doc": [],
                          "payload": "Big_int.big_int"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Ratio",
                          "doc": [],
                          "payload": "Ratio.ratio"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "(+/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "add_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "(-/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "(*/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "mult_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "square_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "(//)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "div_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "quo_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "mod_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "(**/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "power_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "abs_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "succ_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "pred_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "incr_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num ref -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "decr_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num ref -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "is_integer_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "integer_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "floor_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "round_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "ceiling_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "sign_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(=/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(</)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "eq_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "lt_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "le_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "gt_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "ge_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "max_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "min_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "approx_num_fix",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> num -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "approx_num_exp",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> num -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> num option"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_num_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "nat_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Nat.nat"
                    },
                    {
                      "__class__": "value",
                      "name": "nat_of_num_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Nat.nat option"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_nat",
                      "hidden": false,
                      "doc": [],
                      "type": "Nat.nat -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "Big_int.big_int -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Big_int.big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_num_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Big_int.big_int option"
                    },
                    {
                      "__class__": "value",
                      "name": "ratio_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Ratio.ratio"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_ratio",
                      "hidden": false,
                      "doc": [],
                      "type": "Ratio.ratio -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> float"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Big_int",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "big_int",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Big_int.big_int",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "zero_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "unit_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "abs_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "add_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "succ_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "add_int_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "pred_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "mult_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "mult_int_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "square_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "sqrt_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "quomod_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int * big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "div_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "mod_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "gcd_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "power_int_positive_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "power_big_int_positive_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "power_int_positive_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "power_big_int_positive_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "sign_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "eq_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "le_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "ge_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "lt_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "gt_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "max_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "min_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "num_digits_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "num_bits_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> big_int option"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "is_int_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_big_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_nativeint",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_int64",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "int32_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "int32_of_big_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int32 option"
                    },
                    {
                      "__class__": "value",
                      "name": "nativeint_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "nativeint_of_big_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> nativeint option"
                    },
                    {
                      "__class__": "value",
                      "name": "int64_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "int64_of_big_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int64 option"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "and_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "or_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "xor_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_left_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_towards_zero_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "extract_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "nat_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> Nat.nat"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_nat",
                      "hidden": false,
                      "doc": [],
                      "type": "Nat.nat -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "base_power_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "sys_big_int_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "round_futur_last_digit",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "approx_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "round_big_int_to_float",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> bool -> float"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Arith_status",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "arith_status",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_error_when_null_denominator",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_error_when_null_denominator",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_normalize_ratio",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_normalize_ratio",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_normalize_ratio_when_printing",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_normalize_ratio_when_printing",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_approx_printing",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_approx_printing",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_floating_precision",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "set_floating_precision",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Pervasives",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Arg",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "ArrayLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Buffer",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Bytes",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "BytesLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Callback",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Complex",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Digest",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Ephemeron",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Filename",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Gc",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Genlex",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Hashtbl",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Lexing",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "ListLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Map",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Marshal",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "MoreLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Nativeint",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Oo",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Parsing",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Printexc",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Printf",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Queue",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Random",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Scanf",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Set",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Sort",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Spacetime",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Stack",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "StdLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "StringLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Sys",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Uchar",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Weak",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Num",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Big_int",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Arith_status",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "value",
              "name": "not",
              "hidden": false,
              "doc": [ " Negation. Alias of :val:`General.Bool.O.not`. " ],
              "type": "bool -> bool"
            },
            {
              "__class__": "value",
              "name": "(&&)",
              "hidden": false,
              "doc": [
                " Conjunction. Lazy. Alias of :val:`General.Bool.O.(&&)` "
              ],
              "type": "bool -> bool -> bool"
            },
            {
              "__class__": "value",
              "name": "(||)",
              "hidden": false,
              "doc": [
                " Disjunction. Lazy. Alias of :val:`General.Bool.O.(||)` "
              ],
              "type": "bool -> bool -> bool"
            },
            {
              "__class__": "value",
              "name": "(~-)",
              "hidden": false,
              "doc": [],
              "type": "int -> int"
            },
            {
              "__class__": "value",
              "name": "(~+)",
              "hidden": false,
              "doc": [],
              "type": "int -> int"
            },
            {
              "__class__": "value",
              "name": "(+)",
              "hidden": false,
              "doc": [],
              "type": "int -> int -> int"
            },
            {
              "__class__": "value",
              "name": "(-)",
              "hidden": false,
              "doc": [],
              "type": "int -> int -> int"
            },
            {
              "__class__": "value",
              "name": "(*)",
              "hidden": false,
              "doc": [],
              "type": "int -> int -> int"
            },
            {
              "__class__": "value",
              "name": "(/)",
              "hidden": false,
              "doc": [],
              "type": "int -> int -> int"
            },
            {
              "__class__": "value",
              "name": "(mod)",
              "hidden": false,
              "doc": [],
              "type": "int -> int -> int"
            },
            {
              "__class__": "value",
              "name": "(~-.)",
              "hidden": false,
              "doc": [],
              "type": "float -> float"
            },
            {
              "__class__": "value",
              "name": "(~+.)",
              "hidden": false,
              "doc": [],
              "type": "float -> float"
            },
            {
              "__class__": "value",
              "name": "(+.)",
              "hidden": false,
              "doc": [],
              "type": "float -> float -> float"
            },
            {
              "__class__": "value",
              "name": "(-.)",
              "hidden": false,
              "doc": [],
              "type": "float -> float -> float"
            },
            {
              "__class__": "value",
              "name": "(*.)",
              "hidden": false,
              "doc": [],
              "type": "float -> float -> float"
            },
            {
              "__class__": "value",
              "name": "(/.)",
              "hidden": false,
              "doc": [],
              "type": "float -> float -> float"
            },
            {
              "__class__": "value",
              "name": "(**)",
              "hidden": false,
              "doc": [],
              "type": "float -> float -> float"
            },
            {
              "__class__": "value",
              "name": "(@@)",
              "hidden": false,
              "doc": [],
              "type": "('a -> 'b) -> 'a -> 'b"
            },
            {
              "__class__": "value",
              "name": "(|>)",
              "hidden": false,
              "doc": [],
              "type": "'a -> ('a -> 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "(%)",
              "hidden": false,
              "doc": [],
              "type": "('a -> 'b) -> ('c -> 'a) -> 'c -> 'b"
            },
            {
              "__class__": "value",
              "name": "ref",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a OCamlStandard.Pervasives.ref"
            },
            {
              "__class__": "value",
              "name": "(:=)",
              "hidden": false,
              "doc": [],
              "type": "'a OCamlStandard.Pervasives.ref -> 'a -> unit"
            },
            {
              "__class__": "value",
              "name": "(!)",
              "hidden": false,
              "doc": [],
              "type": "'a OCamlStandard.Pervasives.ref -> 'a"
            },
            {
              "__class__": "value",
              "name": "(=)",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "(<>)",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "(<)",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "(<=)",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "(>=)",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "(>)",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "ignore",
              "hidden": false,
              "doc": [],
              "type": "'a -> unit"
            },
            {
              "__class__": "value",
              "name": "identity",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a"
            },
            {
              "__class__": "value",
              "name": "(@)",
              "hidden": false,
              "doc": [],
              "type": "'a list -> 'a list -> 'a list"
            },
            {
              "__class__": "value",
              "name": "(^)",
              "hidden": false,
              "doc": [],
              "type": "string -> string -> string"
            }
          ]
        }
      ]
    },
    {
      "__class__": "module",
      "name": "Abbr",
      "hidden": false,
      "doc": [],
      "functor_parameters": [],
      "contents_from": null,
      "alias_of": null,
      "contents": [
        {
          "__class__": "floating_documentation",
          "hidden": false,
          "text":
            " This modules defines abbreviated aliases for all standard modules in :mod:`General`: "
        },
        {
          "__class__": "module",
          "name": "Tst",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Testing",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Ar",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Array",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "BigInt",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "BigInt",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Bo",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Bool",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "CallStack",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "CallStack",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Ch",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Char",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Exit",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Exit",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Exn",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Exception",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Fl",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Float",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Frmt",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Format",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Fun1",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Function1",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Fun2",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Function2",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Fun3",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Function3",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Fun4",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Function4",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Fun5",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Function5",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "InCh",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "InChannel",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "InFile",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "InFile",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Int32",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Int32",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Int64",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Int64",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Int",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Int",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Laz",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Lazy",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Li",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "List",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "NativeInt",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "NativeInt",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Opt",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Option",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "OutCh",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "OutChannel",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "OutFile",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "OutFile",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Ref",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Reference",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "StdErr",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "StdErr",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "StdIn",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "StdIn",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "StdOut",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "StdOut",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Str",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "String",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Strm",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Stream",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Tu2",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Tuple2",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Tu3",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Tuple3",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Tu4",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Tuple4",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Tu5",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Tuple5",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "Unit",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "Unit",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "IntRa",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "IntRange",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "IntOpt",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "IntOption",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "FlOpt",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "FloatOption",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "StrOpt",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "StringOption",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "IntRef",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "IntReference",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "FlRef",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "FloatReference",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "StrRef",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "StringReference",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "IntLi",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "IntList",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "FlLi",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "FloatList",
          "contents": []
        },
        {
          "__class__": "module",
          "name": "StrLi",
          "hidden": false,
          "doc": [],
          "functor_parameters": [],
          "contents_from": null,
          "alias_of": "StringList",
          "contents": []
        },
        {
          "__class__": "floating_documentation",
          "hidden": false,
          "text": " It also includes :mod:`General.Pervasives`. "
        },
        {
          "__class__": "include",
          "hidden": true,
          "doc": [ " Some doc for :mod:`General.Pervasives` " ],
          "contents_from":
            "module type of Pervasives with module Int32 := Int32 and module Int64 := Int64",
          "contents": [
            {
              "__class__": "exception",
              "name": "Exit",
              "hidden": false,
              "doc": [],
              "payload": null,
              "labels": []
            },
            {
              "__class__": "value",
              "name": "__LOC__",
              "hidden": false,
              "doc": [],
              "type": "string"
            },
            {
              "__class__": "value",
              "name": "__FILE__",
              "hidden": false,
              "doc": [],
              "type": "string"
            },
            {
              "__class__": "value",
              "name": "__LINE__",
              "hidden": false,
              "doc": [],
              "type": "int"
            },
            {
              "__class__": "value",
              "name": "__MODULE__",
              "hidden": false,
              "doc": [],
              "type": "string"
            },
            {
              "__class__": "value",
              "name": "__POS__",
              "hidden": false,
              "doc": [],
              "type": "string * int * int * int"
            },
            {
              "__class__": "value",
              "name": "__LOC_OF__",
              "hidden": false,
              "doc": [],
              "type": "'a -> string * 'a"
            },
            {
              "__class__": "value",
              "name": "__LINE_OF__",
              "hidden": false,
              "doc": [],
              "type": "'a -> int * 'a"
            },
            {
              "__class__": "value",
              "name": "__POS_OF__",
              "hidden": false,
              "doc": [],
              "type": "'a -> (string * int * int * int) * 'a"
            },
            {
              "__class__": "value",
              "name": "raise",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exception__raise ]"
            },
            {
              "__class__": "value",
              "name": "raise_notrace",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Exception__raise_without_backtrace ]"
            },
            {
              "__class__": "value",
              "name": "invalid_arg",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exception__invalid_argument ]"
            },
            {
              "__class__": "value",
              "name": "failwith",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exception__failure ]"
            },
            {
              "__class__": "value",
              "name": "compare",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Compare__Poly__compare ]"
            },
            {
              "__class__": "value",
              "name": "min",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Compare__Poly__min ]"
            },
            {
              "__class__": "value",
              "name": "max",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Compare__Poly__max ]"
            },
            {
              "__class__": "value",
              "name": "(==)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Equate__Phys__equal ]"
            },
            {
              "__class__": "value",
              "name": "(!=)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Equate__Phys__different ]"
            },
            {
              "__class__": "value",
              "name": "(&)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__and_ ]"
            },
            {
              "__class__": "value",
              "name": "(or)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__or_ ]"
            },
            {
              "__class__": "value",
              "name": "succ",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__succ ]"
            },
            {
              "__class__": "value",
              "name": "pred",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__pred ]"
            },
            {
              "__class__": "value",
              "name": "abs",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__abs ]"
            },
            {
              "__class__": "value",
              "name": "max_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__greatest ]"
            },
            {
              "__class__": "value",
              "name": "min_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__smallest ]"
            },
            {
              "__class__": "value",
              "name": "(land)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__Bitwise__logical_and ]"
            },
            {
              "__class__": "value",
              "name": "(lor)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__Bitwise__logical_or ]"
            },
            {
              "__class__": "value",
              "name": "(lxor)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__Bitwise__logical_xor ]"
            },
            {
              "__class__": "value",
              "name": "lnot",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__Bitwise__logical_not ]"
            },
            {
              "__class__": "value",
              "name": "(lsl)",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Int__Bitwise__logical_shift_left ]"
            },
            {
              "__class__": "value",
              "name": "(lsr)",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Int__Bitwise__logical_shift_right ]"
            },
            {
              "__class__": "value",
              "name": "(asr)",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Int__Bitwise__arithmetic_shift_right ]"
            },
            {
              "__class__": "value",
              "name": "sqrt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__sqrt ]"
            },
            {
              "__class__": "value",
              "name": "exp",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__exp ]"
            },
            {
              "__class__": "value",
              "name": "log",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__log ]"
            },
            {
              "__class__": "value",
              "name": "log10",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__log10 ]"
            },
            {
              "__class__": "value",
              "name": "expm1",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__expm1 ]"
            },
            {
              "__class__": "value",
              "name": "log1p",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__log1p ]"
            },
            {
              "__class__": "value",
              "name": "cos",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__cos ]"
            },
            {
              "__class__": "value",
              "name": "sin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__sin ]"
            },
            {
              "__class__": "value",
              "name": "tan",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__tan ]"
            },
            {
              "__class__": "value",
              "name": "acos",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__acos ]"
            },
            {
              "__class__": "value",
              "name": "asin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__asin ]"
            },
            {
              "__class__": "value",
              "name": "atan",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__atan ]"
            },
            {
              "__class__": "value",
              "name": "atan2",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__atan2 ]"
            },
            {
              "__class__": "value",
              "name": "hypot",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__hypot ]"
            },
            {
              "__class__": "value",
              "name": "cosh",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__cosh ]"
            },
            {
              "__class__": "value",
              "name": "sinh",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__sinh ]"
            },
            {
              "__class__": "value",
              "name": "tanh",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__tanh ]"
            },
            {
              "__class__": "value",
              "name": "ceil",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__ceil ]"
            },
            {
              "__class__": "value",
              "name": "floor",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__floor ]"
            },
            {
              "__class__": "value",
              "name": "abs_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__abs ]"
            },
            {
              "__class__": "value",
              "name": "copysign",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__copy_sign ]"
            },
            {
              "__class__": "value",
              "name": "mod_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__modulo ]"
            },
            {
              "__class__": "value",
              "name": "frexp",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__to_parts ]"
            },
            {
              "__class__": "value",
              "name": "ldexp",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__of_parts ]"
            },
            {
              "__class__": "value",
              "name": "modf",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Float__to_fractional_and_integral ]"
            },
            {
              "__class__": "value",
              "name": "float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__of_int ]"
            },
            {
              "__class__": "value",
              "name": "float_of_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__of_int ]"
            },
            {
              "__class__": "value",
              "name": "truncate",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__of_float ]"
            },
            {
              "__class__": "value",
              "name": "int_of_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__of_float ]"
            },
            {
              "__class__": "value",
              "name": "infinity",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__infinity ]"
            },
            {
              "__class__": "value",
              "name": "neg_infinity",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__negative_infinity ]"
            },
            {
              "__class__": "value",
              "name": "nan",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__not_a_number ]"
            },
            {
              "__class__": "value",
              "name": "max_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__smallest ]"
            },
            {
              "__class__": "value",
              "name": "min_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__greatest ]"
            },
            {
              "__class__": "value",
              "name": "epsilon_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__epsilon ]"
            },
            {
              "__class__": "type",
              "name": "fpclass",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "[ `Please_use_General__Float__Class__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "classify_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__Class__of_float ]"
            },
            {
              "__class__": "value",
              "name": "int_of_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Char__of_int ]"
            },
            {
              "__class__": "value",
              "name": "char_of_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Char__to_int ]"
            },
            {
              "__class__": "value",
              "name": "string_of_bool",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__to_string ]"
            },
            {
              "__class__": "value",
              "name": "bool_of_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__of_string ]"
            },
            {
              "__class__": "value",
              "name": "bool_of_string_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Bool__try_of_string ]"
            },
            {
              "__class__": "value",
              "name": "string_of_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__to_string ]"
            },
            {
              "__class__": "value",
              "name": "int_of_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__of_string ]"
            },
            {
              "__class__": "value",
              "name": "int_of_string_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Int__try_of_string ]"
            },
            {
              "__class__": "value",
              "name": "string_of_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__of_string ]"
            },
            {
              "__class__": "value",
              "name": "float_of_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__to_string ]"
            },
            {
              "__class__": "value",
              "name": "float_of_string_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Float__try_of_string ]"
            },
            {
              "__class__": "value",
              "name": "fst",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Tuple2__get_0 ]"
            },
            {
              "__class__": "value",
              "name": "snd",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Tuple2__get_1 ]"
            },
            {
              "__class__": "type",
              "name": "in_channel",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "[ `Please_use_General__InChannel__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "type",
              "name": "out_channel",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "[ `Please_use_General__OutChannel__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "stdin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdIn__channel ]"
            },
            {
              "__class__": "value",
              "name": "stdout",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__channel ]"
            },
            {
              "__class__": "value",
              "name": "stderr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__channel ]"
            },
            {
              "__class__": "value",
              "name": "print_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_bytes",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_endline",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "print_newline",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdOut__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_bytes",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_endline",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "prerr_newline",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__StdErr__print ]"
            },
            {
              "__class__": "value",
              "name": "read_line",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "read_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "read_int_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "read_float",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "read_float_opt",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "type",
              "name": "open_flag",
              "hidden": false,
              "doc": [],
              "parameters": null,
              "private": false,
              "manifest": "[ `Please_use_General__todo ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "open_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "open_out_bin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "open_out_gen",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "flush",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__flush ]"
            },
            {
              "__class__": "value",
              "name": "flush_all",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "output_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__print ]"
            },
            {
              "__class__": "value",
              "name": "output_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__print ]"
            },
            {
              "__class__": "value",
              "name": "output_bytes",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output_substring",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output_byte",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output_binary_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "output_value",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutChannel__output ]"
            },
            {
              "__class__": "value",
              "name": "seek_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__seek ]"
            },
            {
              "__class__": "value",
              "name": "pos_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__pos ]"
            },
            {
              "__class__": "value",
              "name": "out_channel_length",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__size ]"
            },
            {
              "__class__": "value",
              "name": "close_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__OutFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "close_out_noerr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "set_binary_mode_out",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "open_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "open_in_bin",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "open_in_gen",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "input_char",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input_line",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "really_input",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "really_input_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input_byte",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input_binary_int",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "input_value",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "seek_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__seek ]"
            },
            {
              "__class__": "value",
              "name": "pos_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__pos ]"
            },
            {
              "__class__": "value",
              "name": "in_channel_length",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__size ]"
            },
            {
              "__class__": "value",
              "name": "close_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__InFile__with_file ]"
            },
            {
              "__class__": "value",
              "name": "close_in_noerr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "value",
              "name": "set_binary_mode_in",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__todo ]"
            },
            {
              "__class__": "module",
              "name": "LargeFile",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "seek_out",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__OutFile__seek ]"
                },
                {
                  "__class__": "value",
                  "name": "pos_out",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__OutFile__pos ]"
                },
                {
                  "__class__": "value",
                  "name": "out_channel_length",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__OutFile__size ]"
                },
                {
                  "__class__": "value",
                  "name": "seek_in",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__InFile__seek ]"
                },
                {
                  "__class__": "value",
                  "name": "pos_in",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__InFile__pos ]"
                },
                {
                  "__class__": "value",
                  "name": "in_channel_length",
                  "hidden": false,
                  "doc": [],
                  "type": "[> `Please_use_General__InFile__size ]"
                }
              ]
            },
            {
              "__class__": "type",
              "name": "ref",
              "hidden": false,
              "doc": [],
              "parameters": "'a",
              "private": false,
              "manifest": "[ `Please_use_General__Reference__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "incr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__IntReference__increment ]"
            },
            {
              "__class__": "value",
              "name": "decr",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__IntReference__decrement ]"
            },
            {
              "__class__": "type",
              "name": "result",
              "hidden": false,
              "doc": [],
              "parameters": "('a, 'b)",
              "private": false,
              "manifest": "[ `Please_use_General__todo ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "type",
              "name": "format6",
              "hidden": false,
              "doc": [],
              "parameters": "('a, 'b, 'c, 'd, 'e, 'f)",
              "private": false,
              "manifest": "[ `Please_use_General__Format__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "type",
              "name": "format4",
              "hidden": false,
              "doc": [],
              "parameters": "('a, 'b, 'c, 'd)",
              "private": false,
              "manifest": "[ `Please_use_General__Format__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "type",
              "name": "format",
              "hidden": false,
              "doc": [],
              "parameters": "('a, 'b, 'c)",
              "private": false,
              "manifest": "[ `Please_use_General__Format__t ]",
              "kind": null,
              "constructors": [],
              "labels": []
            },
            {
              "__class__": "value",
              "name": "string_of_format",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Format__to_string ]"
            },
            {
              "__class__": "value",
              "name": "format_of_string",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Format__of_string ]"
            },
            {
              "__class__": "value",
              "name": "(^^)",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Format__concat ]"
            },
            {
              "__class__": "value",
              "name": "exit",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exit__exit ]"
            },
            {
              "__class__": "value",
              "name": "at_exit",
              "hidden": false,
              "doc": [],
              "type": "[> `Please_use_General__Exit__at_exit ]"
            },
            {
              "__class__": "value",
              "name": "valid_float_lexem",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Standard__OCamlStandard__Pervasives__valid_float_lexem ]"
            },
            {
              "__class__": "value",
              "name": "unsafe_really_input",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Standard__OCamlStandard__Pervasives__unsafe_really_input ]"
            },
            {
              "__class__": "value",
              "name": "do_at_exit",
              "hidden": false,
              "doc": [],
              "type":
                "[> `Please_use_General__Standard__OCamlStandard__Pervasives__do_at_exit ]"
            },
            {
              "__class__": "module",
              "name": "OCamlStandard",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "module",
                  "name": "Pervasives",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "raise",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "raise_notrace",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "invalid_arg",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "failwith",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> 'a"
                    },
                    {
                      "__class__": "exception",
                      "name": "Exit",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "(=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "min",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "max",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "(==)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(!=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "not",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(&&)",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(&)",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(||)",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(or)",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "__LOC__",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "__FILE__",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "__LINE__",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "__MODULE__",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "__POS__",
                      "hidden": false,
                      "doc": [],
                      "type": "string * int * int * int"
                    },
                    {
                      "__class__": "value",
                      "name": "__LOC_OF__",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> string * 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "__LINE_OF__",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> int * 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "__POS_OF__",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> (string * int * int * int) * 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "(|>)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a -> 'b) -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "(@@)",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "(~-)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(~+)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(+)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(-)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(*)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(/)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(mod)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "abs",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "max_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "min_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "(land)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(lor)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(lxor)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "lnot",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(lsl)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(lsr)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(asr)",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(~-.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(~+.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(+.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(-.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(*.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(/.)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "(**)",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "sqrt",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "exp",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "log",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "log10",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "expm1",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "log1p",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "cos",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "sin",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "tan",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "acos",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "asin",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "atan",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "atan2",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "hypot",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "cosh",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "sinh",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "tanh",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "ceil",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "floor",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "abs_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "copysign",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "mod_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "frexp",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float * int"
                    },
                    {
                      "__class__": "value",
                      "name": "ldexp",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "modf",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float * float"
                    },
                    {
                      "__class__": "value",
                      "name": "float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "truncate",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "infinity",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "neg_infinity",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "nan",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "max_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "min_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "value",
                      "name": "epsilon_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float"
                    },
                    {
                      "__class__": "type",
                      "name": "fpclass",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "fpclass",
                      "kind":
                        "FP_normal | FP_subnormal | FP_zero | FP_infinite | FP_nan",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "FP_normal",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "FP_subnormal",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "FP_zero",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "FP_infinite",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "FP_nan",
                          "doc": [],
                          "payload": null
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "classify_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> fpclass"
                    },
                    {
                      "__class__": "value",
                      "name": "(^)",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "char_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "ignore",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_bool",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "bool_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "bool_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool option"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> float option"
                    },
                    {
                      "__class__": "value",
                      "name": "fst",
                      "hidden": false,
                      "doc": [],
                      "type": "'a * 'b -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "snd",
                      "hidden": false,
                      "doc": [],
                      "type": "'a * 'b -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "(@)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "type",
                      "name": "in_channel",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "in_channel",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "out_channel",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "out_channel",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "stdin",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "stdout",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "stderr",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "print_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_endline",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_endline",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "prerr_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "read_line",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "read_int",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "read_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "read_float",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "read_float_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float option"
                    },
                    {
                      "__class__": "type",
                      "name": "open_flag",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "open_flag",
                      "kind":
                        "Open_rdonly | Open_wronly | Open_append | Open_creat | Open_trunc | Open_excl | Open_binary | Open_text | Open_nonblock",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Open_rdonly",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_wronly",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_append",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_creat",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_trunc",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_excl",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_binary",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_text",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Open_nonblock",
                          "doc": [],
                          "payload": null
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "open_out",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "open_out_bin",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "open_out_gen",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "open_flag list -> int -> string -> out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "flush",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "flush_all",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_char",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_string",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_substring",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> string -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_byte",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_binary_int",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_value",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "seek_out",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pos_out",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "out_channel_length",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "close_out",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_out_noerr",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_binary_mode_out",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_in",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> in_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "open_in_bin",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> in_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "open_in_gen",
                      "hidden": false,
                      "doc": [],
                      "type": "open_flag list -> int -> string -> in_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "input_char",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "input_line",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "input",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> bytes -> int -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "really_input",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "really_input_string",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "input_byte",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "input_binary_int",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "input_value",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "seek_in",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pos_in",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "in_channel_length",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "close_in",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_in_noerr",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_binary_mode_in",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> bool -> unit"
                    },
                    {
                      "__class__": "module",
                      "name": "LargeFile",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "seek_out",
                          "hidden": false,
                          "doc": [],
                          "type": "out_channel -> int64 -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "pos_out",
                          "hidden": false,
                          "doc": [],
                          "type": "out_channel -> int64"
                        },
                        {
                          "__class__": "value",
                          "name": "out_channel_length",
                          "hidden": false,
                          "doc": [],
                          "type": "out_channel -> int64"
                        },
                        {
                          "__class__": "value",
                          "name": "seek_in",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> int64 -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "pos_in",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> int64"
                        },
                        {
                          "__class__": "value",
                          "name": "in_channel_length",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> int64"
                        }
                      ]
                    },
                    {
                      "__class__": "type",
                      "name": "ref",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a ref",
                      "kind": "{mutable contents: 'a}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "contents",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "ref",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a ref"
                    },
                    {
                      "__class__": "value",
                      "name": "(!)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a ref -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "(:=)",
                      "hidden": false,
                      "doc": [],
                      "type": "'a ref -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "incr",
                      "hidden": false,
                      "doc": [],
                      "type": "int ref -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "decr",
                      "hidden": false,
                      "doc": [],
                      "type": "int ref -> unit"
                    },
                    {
                      "__class__": "type",
                      "name": "result",
                      "hidden": false,
                      "doc": [],
                      "parameters": "(+'a, +'b)",
                      "private": false,
                      "manifest": "('a, 'b) result",
                      "kind": "Ok of 'a | Error of 'b",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Ok",
                          "doc": [],
                          "payload": "'a"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Error",
                          "doc": [],
                          "payload": "'b"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "format6",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd, 'e, 'f)",
                      "private": false,
                      "manifest":
                        "('a, 'b, 'c, 'd, 'e, 'f) CamlinternalFormatBasics.format6",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "format4",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd)",
                      "private": false,
                      "manifest": "('a, 'b, 'c, 'c, 'c, 'd) format6",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "format",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c)",
                      "private": false,
                      "manifest": "('a, 'b, 'c, 'c) format4",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_format",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b, 'c, 'd, 'e, 'f) format6 -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "format_of_string",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e, 'f) format6 -> ('a, 'b, 'c, 'd, 'e, 'f) format6"
                    },
                    {
                      "__class__": "value",
                      "name": "(^^)",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a, 'b, 'c, 'd, 'e, 'f) format6 ->\n('f, 'b, 'c, 'e, 'g, 'h) format6 -> ('a, 'b, 'c, 'd, 'g, 'h) format6"
                    },
                    {
                      "__class__": "value",
                      "name": "exit",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "at_exit",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "valid_float_lexem",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_really_input",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "do_at_exit",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Arg",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "spec",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Arg.spec",
                      "kind":
                        "Unit of unit -> unit | Bool of bool -> unit | Set of bool ref | Clear of bool ref | String of string -> unit | Set_string of string ref | Int of int -> unit | Set_int of int ref | Float of float -> unit | Set_float of float ref | Tuple of spec list | Symbol of string list * string -> unit | Rest of string -> unit | Expand of string -> string array",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Unit",
                          "doc": [],
                          "payload": "unit -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Bool",
                          "doc": [],
                          "payload": "bool -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Set",
                          "doc": [],
                          "payload": "bool ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Clear",
                          "doc": [],
                          "payload": "bool ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "String",
                          "doc": [],
                          "payload": "string -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Set_string",
                          "doc": [],
                          "payload": "string ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Int",
                          "doc": [],
                          "payload": "int -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Set_int",
                          "doc": [],
                          "payload": "int ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Float",
                          "doc": [],
                          "payload": "float -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Set_float",
                          "doc": [],
                          "payload": "float ref"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Tuple",
                          "doc": [],
                          "payload": "spec list"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Symbol",
                          "doc": [],
                          "payload": "string list * string -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Rest",
                          "doc": [],
                          "payload": "string -> unit"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Expand",
                          "doc": [],
                          "payload": "string -> string array"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "key",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "doc",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "usage_msg",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "anon_fun",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string -> unit",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "parse",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(key * spec * doc) list -> anon_fun -> usage_msg -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_dynamic",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(key * spec * doc) list ref -> anon_fun -> usage_msg -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_argv",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?current:int ref ->\nstring array -> (key * spec * doc) list -> anon_fun -> usage_msg -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_argv_dynamic",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?current:int ref ->\nstring array -> (key * spec * doc) list ref -> anon_fun -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_and_expand_argv_dynamic",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "int ref ->\nstring array ref -> (key * spec * doc) list ref -> anon_fun -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_expand",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(key * spec * doc) list -> anon_fun -> usage_msg -> unit"
                    },
                    {
                      "__class__": "exception",
                      "name": "Help",
                      "hidden": false,
                      "doc": [],
                      "payload": "string",
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Bad",
                      "hidden": false,
                      "doc": [],
                      "payload": "string",
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "usage",
                      "hidden": false,
                      "doc": [],
                      "type": "(key * spec * doc) list -> usage_msg -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "usage_string",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(key * spec * doc) list -> usage_msg -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "align",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?limit:int -> (key * spec * doc) list -> (key * spec * doc) list"
                    },
                    {
                      "__class__": "value",
                      "name": "current",
                      "hidden": false,
                      "doc": [],
                      "type": "int ref"
                    },
                    {
                      "__class__": "value",
                      "name": "read_arg",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array"
                    },
                    {
                      "__class__": "value",
                      "name": "read_arg0",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array"
                    },
                    {
                      "__class__": "value",
                      "name": "write_arg",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "write_arg0",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Array",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "create_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float array"
                    },
                    {
                      "__class__": "value",
                      "name": "make_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float array"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> (int -> 'a) -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "make_matrix",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> 'a -> 'a array array"
                    },
                    {
                      "__class__": "value",
                      "name": "create_matrix",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> 'a -> 'a array array"
                    },
                    {
                      "__class__": "value",
                      "name": "append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a array -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array list -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> int -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> int -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "'a array -> int -> 'a array -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "to_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "of_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a -> unit) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a array -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a -> 'b) -> 'a array -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> 'a) -> 'a -> 'b array -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right",
                      "hidden": false,
                      "doc": [],
                      "type": "('b -> 'a -> 'a) -> 'b array -> 'a -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "iter2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> unit) -> 'a array -> 'b array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c) -> 'a array -> 'b array -> 'c array"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "memq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "stable_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fast_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "ArrayLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> f:(int -> 'a) -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "make_matrix",
                      "hidden": false,
                      "doc": [],
                      "type": "dimx:int -> dimy:int -> 'a -> 'a array array"
                    },
                    {
                      "__class__": "value",
                      "name": "create_matrix",
                      "hidden": false,
                      "doc": [],
                      "type": "dimx:int -> dimy:int -> 'a -> 'a array array"
                    },
                    {
                      "__class__": "value",
                      "name": "append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a array -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array list -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> pos:int -> len:int -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> pos:int -> len:int -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:'a array -> src_pos:int -> dst:'a array -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "to_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "of_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a array"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> unit) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> 'b) -> 'a array -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> 'a -> unit) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> 'a -> 'b) -> 'a array -> 'b array"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'a) -> init:'a -> 'b array -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('b -> 'a -> 'a) -> 'b array -> init:'a -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "iter2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> unit) -> 'a array -> 'b array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c) -> 'a array -> 'b array -> 'c array"
                    },
                    {
                      "__class__": "value",
                      "name": "exists",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> set:'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "memq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> set:'a array -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "create_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float array"
                    },
                    {
                      "__class__": "value",
                      "name": "make_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> float array"
                    },
                    {
                      "__class__": "value",
                      "name": "sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "stable_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fast_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a array -> int -> 'a -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Buffer",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Buffer.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "contents",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "to_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "nth",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "clear",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "reset",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_char",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_string",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_substring",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> string -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_subbytes",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_substitute",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> (string -> string) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_buffer",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "add_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> in_channel -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "output_buffer",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "truncate",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Bytes",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> (int -> char) -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "empty",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "extend",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes list -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "cat",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "(char -> unit) -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> char -> unit) -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "(char -> char) -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> char -> char) -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "trim",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "index",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "contains",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "contains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "rcontains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "bytes",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_blit",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> char -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "BytesLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> f:(int -> char) -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "empty",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "extend",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> left:int -> right:int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:bytes -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit_string",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "sep:bytes -> bytes list -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "cat",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(char -> unit) -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> char -> unit) -> bytes -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(char -> char) -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> char -> char) -> bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "trim",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "index",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "contains",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "contains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "rcontains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> bytes"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "bytes",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:bytes -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bytes"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Callback",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "register",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "register_exception",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> exn -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Char",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "code",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "chr",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> char"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "char",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_chr",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Complex",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Complex.t",
                      "kind": "{re: float; im: float}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "re",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "im",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "zero",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "one",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "i",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "neg",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "conj",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "mul",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "inv",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "div",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "sqrt",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "norm2",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "norm",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "arg",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "polar",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "exp",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "log",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "pow",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Digest",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "substring",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "subbytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "channel",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "file",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "output",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "input",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "to_hex",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "from_hex",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Ephemeron",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        },
                        {
                          "__class__": "value",
                          "name": "clean",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "stats_alive",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "SeededS",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "?random:bool -> int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        },
                        {
                          "__class__": "value",
                          "name": "clean",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "stats_alive",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "K1",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('k, 'd)",
                          "private": false,
                          "manifest": "('k, 'd) Ephemeron.K1.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> ('k, 'd) t"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'k option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'k option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'k -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'a) t -> ('k, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'd) t -> ('b, 'd) t -> unit"
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.K1.Make(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.K1.MakeSeeded(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "K2",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('k1, 'k2, 'd)",
                          "private": false,
                          "manifest": "('k1, 'k2, 'd) Ephemeron.K2.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> ('k1, 'k2, 'd) t"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key1",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k1 option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key1_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k1 option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_key1",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k1 -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_key1",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_key1",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key2",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k2 option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key2_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k2 option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_key2",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'k2 -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_key2",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_key2",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key1",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('k1, 'a, 'b) t -> ('k1, 'c, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a, 'k2, 'b) t -> ('c, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key12",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('k1, 'k2, 'a) t -> ('k1, 'k2, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> 'd -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k1, 'k2, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_data",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('k1, 'k2, 'd) t -> ('k1, 'k2, 'd) t -> unit"
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H1",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            },
                            {
                              "__class__": "functor_parameter",
                              "name": "H2",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H1.t * H2.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.K2.Make(H1)(H2).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H1",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            },
                            {
                              "__class__": "functor_parameter",
                              "name": "H2",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H1.t * H2.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest":
                                "'a Ephemeron.K2.MakeSeeded(H1)(H2).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Kn",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('k, 'd)",
                          "private": false,
                          "manifest": "('k, 'd) Ephemeron.Kn.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> ('k, 'd) t"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> 'k option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_key_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> 'k option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> 'k -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_key",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> int -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_key",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('k, 'a) t -> int -> ('k, 'b) t -> int -> int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "get_data_copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd option"
                        },
                        {
                          "__class__": "value",
                          "name": "set_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> 'd -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unset_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "check_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_data",
                          "hidden": false,
                          "doc": [],
                          "type": "('k, 'd) t -> ('k, 'd) t -> unit"
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t array",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.Kn.Make(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t array",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a Ephemeron.Kn.MakeSeeded(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "GenHashTable",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Ephemeron.GenHashTable.equal",
                          "kind": "ETrue | EFalse | EDead",
                          "constructors": [
                            {
                              "__class__": "type_constructor",
                              "name": "ETrue",
                              "doc": [],
                              "payload": null
                            },
                            {
                              "__class__": "type_constructor",
                              "name": "EFalse",
                              "doc": [],
                              "payload": null
                            },
                            {
                              "__class__": "type_constructor",
                              "name": "EDead",
                              "doc": [],
                              "payload": null
                            }
                          ],
                          "labels": []
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": null,
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "type",
                                  "name": "container",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": "'a",
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type":
                                    "'a container -> t -> Ephemeron.GenHashTable.equal"
                                },
                                {
                                  "__class__": "value",
                                  "name": "create",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> 'a -> 'a container"
                                },
                                {
                                  "__class__": "value",
                                  "name": "get_key",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "'a container -> t option"
                                },
                                {
                                  "__class__": "value",
                                  "name": "get_data",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "'a container -> 'a option"
                                },
                                {
                                  "__class__": "value",
                                  "name": "set_key_data",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "'a container -> t -> 'a -> unit"
                                },
                                {
                                  "__class__": "value",
                                  "name": "check_key",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "'a container -> bool"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest":
                                "'a Ephemeron.GenHashTable.MakeSeeded(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "(key -> 'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            },
                            {
                              "__class__": "value",
                              "name": "clean",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "stats_alive",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> Hashtbl.statistics"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Filename",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "current_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "parent_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "dir_sep",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "is_relative",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "is_implicit",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "check_suffix",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "chop_suffix",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "extension",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_extension",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "chop_extension",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "basename",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "dirname",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "temp_file",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?temp_dir:string -> string -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "open_temp_file",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?mode:open_flag list ->\n?perms:int -> ?temp_dir:string -> string -> string -> string * out_channel"
                    },
                    {
                      "__class__": "value",
                      "name": "get_temp_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "set_temp_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "temp_dir_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "quote",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Format",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "open_box",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_box",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_as",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_bool",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_space",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_cut",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_break",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_flush",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "force_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_if_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_margin",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_margin",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "set_max_indent",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_max_indent",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "set_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "over_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "open_hbox",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_vbox",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_hvbox",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_hovbox",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_ellipsis_text",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_ellipsis_text",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "tag",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "open_tag",
                      "hidden": false,
                      "doc": [],
                      "type": "tag -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_tag",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_print_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_mark_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_print_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "get_mark_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_formatter_out_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> int -> int -> unit) -> (unit -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "unit -> (string -> int -> int -> unit) * (unit -> unit)"
                    },
                    {
                      "__class__": "type",
                      "name": "formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Format.formatter_out_functions",
                      "kind":
                        "{out_string: string -> int -> int -> unit; out_flush: unit -> unit; out_newline: unit -> unit; out_spaces: int -> unit}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "out_string",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "out_flush",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "out_newline",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "out_spaces",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "set_formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter_out_functions -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> formatter_out_functions"
                    },
                    {
                      "__class__": "type",
                      "name": "formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Format.formatter_tag_functions",
                      "kind":
                        "{mark_open_tag: tag -> string; mark_close_tag: tag -> string; print_open_tag: tag -> unit; print_close_tag: tag -> unit}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "mark_open_tag",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "mark_close_tag",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "print_open_tag",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "print_close_tag",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "set_formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter_tag_functions -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> formatter_tag_functions"
                    },
                    {
                      "__class__": "type",
                      "name": "formatter",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Format.formatter",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "formatter_of_out_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "std_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "err_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "formatter_of_buffer",
                      "hidden": false,
                      "doc": [],
                      "type": "Buffer.t -> formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "stdbuf",
                      "hidden": false,
                      "doc": [],
                      "type": "Buffer.t"
                    },
                    {
                      "__class__": "value",
                      "name": "str_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "flush_str_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "make_formatter",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> int -> int -> unit) -> (unit -> unit) -> formatter"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_hbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_vbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_hvbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_hovbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_box",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_close_box",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_tag",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_close_tag",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_string",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_as",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_int",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_float",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> float -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_char",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_bool",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_break",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_cut",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_space",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_force_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_flush",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_if_newline",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_print_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_mark_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_print_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_mark_tags",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_margin",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_margin",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_max_indent",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_max_indent",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_over_max_boxes",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_ellipsis_text",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_ellipsis_text",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_formatter_out_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter -> (string -> int -> int -> unit) -> (unit -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter -> unit -> (string -> int -> int -> unit) * (unit -> unit)"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> formatter_tag_functions -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_formatter_tag_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> formatter_tag_functions"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> formatter_out_functions -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_formatter_out_functions",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> formatter_out_functions"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_flush_formatter",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_list",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "?pp_sep:(formatter -> unit -> unit) ->\n(formatter -> 'a -> unit) -> formatter -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_text",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter -> ('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "printf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "eprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "sprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, unit, string) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "asprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, formatter, unit, string) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "ifprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter -> ('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kfprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(formatter -> 'a) -> formatter -> ('b, formatter, unit, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "ikfprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(formatter -> 'a) -> formatter -> ('b, formatter, unit, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "ksprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'a) -> ('b, unit, string, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "kasprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'a) -> ('b, formatter, unit, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "bprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "Buffer.t -> ('a, formatter, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'a) -> ('b, unit, string, 'a) format4 -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "set_all_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "out:(string -> int -> int -> unit) ->\nflush:(unit -> unit) ->\nnewline:(unit -> unit) -> spaces:(int -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_all_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "unit ->\n(string -> int -> int -> unit) * (unit -> unit) * (unit -> unit) *\n(int -> unit)"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_all_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter ->\nout:(string -> int -> int -> unit) ->\nflush:(unit -> unit) ->\nnewline:(unit -> unit) -> spaces:(int -> unit) -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_get_all_formatter_output_functions",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "formatter ->\nunit ->\n(string -> int -> int -> unit) * (unit -> unit) * (unit -> unit) *\n(int -> unit)"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_open_tbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_close_tbox",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_tbreak",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_set_tab",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pp_print_tab",
                      "hidden": false,
                      "doc": [],
                      "type": "formatter -> unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "open_tbox",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "close_tbox",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_tbreak",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "set_tab",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_tab",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Gc",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "stat",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Gc.stat",
                      "kind":
                        "{minor_words: float; promoted_words: float; major_words: float; minor_collections: int; major_collections: int; heap_words: int; heap_chunks: int; live_words: int; live_blocks: int; free_words: int; free_blocks: int; largest_free: int; fragments: int; compactions: int; top_heap_words: int; stack_size: int}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "minor_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "promoted_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "major_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "minor_collections",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "major_collections",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "heap_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "heap_chunks",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "live_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "live_blocks",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "free_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "free_blocks",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "largest_free",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "fragments",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "compactions",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "top_heap_words",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "stack_size",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "type",
                      "name": "control",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Gc.control",
                      "kind":
                        "{mutable minor_heap_size: int; mutable major_heap_increment: int; mutable space_overhead: int; mutable verbose: int; mutable max_overhead: int; mutable stack_limit: int; mutable allocation_policy: int; window_size: int}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "minor_heap_size",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "major_heap_increment",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "space_overhead",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "verbose",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "max_overhead",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "stack_limit",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "allocation_policy",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "window_size",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "stat",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> stat"
                    },
                    {
                      "__class__": "value",
                      "name": "quick_stat",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> stat"
                    },
                    {
                      "__class__": "value",
                      "name": "counters",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float * float * float"
                    },
                    {
                      "__class__": "value",
                      "name": "minor_words",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> control"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "control -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "minor",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "major_slice",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "major",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "full_major",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "compact",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "print_stat",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "allocated_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "get_minor_free",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get_bucket",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get_credit",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "huge_fallback_count",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "finalise",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "finalise_last",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> unit) -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "finalise_release",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "type",
                      "name": "alarm",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Gc.alarm",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create_alarm",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> unit) -> alarm"
                    },
                    {
                      "__class__": "value",
                      "name": "delete_alarm",
                      "hidden": false,
                      "doc": [],
                      "type": "alarm -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Genlex",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "token",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Genlex.token",
                      "kind":
                        "Kwd of string | Ident of string | Int of int | Float of float | String of string | Char of char",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Kwd",
                          "doc": [],
                          "payload": "string"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Ident",
                          "doc": [],
                          "payload": "string"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Int",
                          "doc": [],
                          "payload": "int"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Float",
                          "doc": [],
                          "payload": "float"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "String",
                          "doc": [],
                          "payload": "string"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Char",
                          "doc": [],
                          "payload": "char"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "make_lexer",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "string list -> char Stream.t -> token Stream.t"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Hashtbl",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b)",
                      "private": false,
                      "manifest": "('a, 'b) Hashtbl.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "?random:bool -> int -> ('a, 'b) t"
                    },
                    {
                      "__class__": "value",
                      "name": "clear",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "reset",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> ('a, 'b) t"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "find",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "find_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "find_all",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "remove",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "replace",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> 'a -> 'b -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> unit) -> ('a, 'b) t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "filter_map_inplace",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> 'b option) -> ('a, 'b) t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fold",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c -> 'c) -> ('a, 'b) t -> 'c -> 'c"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "randomize",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "is_randomized",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "type",
                      "name": "statistics",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Hashtbl.statistics",
                      "kind":
                        "{num_bindings: int; num_buckets: int; max_bucket_length: int; bucket_histogram: int array}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "num_bindings",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "num_buckets",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "max_bucket_length",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "bucket_histogram",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "stats",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b) t -> statistics"
                    },
                    {
                      "__class__": "module_type",
                      "name": "HashedType",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "hash",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Make",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "H",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Hashtbl.HashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "H.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": "'a Hashtbl.Make(H).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "SeededHashedType",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "hash",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> t -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "SeededS",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "?random:bool -> int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "MakeSeeded",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "H",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Hashtbl.SeededHashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "H.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "'a",
                          "private": false,
                          "manifest": "'a Hashtbl.MakeSeeded(H).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "?random:bool -> int -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'a option) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> Hashtbl.statistics"
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "hash",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "seeded_hash",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "hash_param",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> 'a -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "seeded_hash_param",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> int -> 'a -> int"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Int32",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "zero",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "one",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_one",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "neg",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "mul",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "div",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "rem",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "abs",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "max_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "min_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int32"
                    },
                    {
                      "__class__": "value",
                      "name": "logand",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "logor",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "logxor",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "lognot",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_left",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_logical",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "to_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int32 option"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "bits_of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_bits",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> float"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "int32",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "format",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int32 -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Int64",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "zero",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "one",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_one",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "neg",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "mul",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "div",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "rem",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "abs",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "max_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "min_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int64"
                    },
                    {
                      "__class__": "value",
                      "name": "logand",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "logor",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "logxor",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "lognot",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_left",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_logical",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "to_float",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "of_nativeint",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "to_nativeint",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int64 option"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "bits_of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_bits",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> float"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "int64",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "format",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int64 -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Lazy",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "+'a",
                      "private": false,
                      "manifest": "'a lazy_t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Undefined",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "force",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "force_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "from_fun",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "from_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "is_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "lazy_from_fun",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lazy_from_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lazy_is_val",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> bool"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Lexing",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "position",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Lexing.position",
                      "kind":
                        "{pos_fname: string; pos_lnum: int; pos_bol: int; pos_cnum: int}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "pos_fname",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "pos_lnum",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "pos_bol",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "pos_cnum",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "dummy_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "position"
                    },
                    {
                      "__class__": "type",
                      "name": "lexbuf",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Lexing.lexbuf",
                      "kind":
                        "{refill_buff: lexbuf -> unit; mutable lex_buffer: bytes; mutable lex_buffer_len: int; mutable lex_abs_pos: int; mutable lex_start_pos: int; mutable lex_curr_pos: int; mutable lex_last_pos: int; mutable lex_last_action: int; mutable lex_eof_reached: bool; mutable lex_mem: int array; mutable lex_start_p: position; mutable lex_curr_p: position}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "refill_buff",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_buffer",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_buffer_len",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_abs_pos",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_start_pos",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_curr_pos",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_last_pos",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_last_action",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_eof_reached",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_mem",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_start_p",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_curr_p",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "from_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> lexbuf"
                    },
                    {
                      "__class__": "value",
                      "name": "from_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> lexbuf"
                    },
                    {
                      "__class__": "value",
                      "name": "from_function",
                      "hidden": false,
                      "doc": [],
                      "type": "(bytes -> int -> int) -> lexbuf"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_char",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_start",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_end",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_start_p",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> position"
                    },
                    {
                      "__class__": "value",
                      "name": "lexeme_end_p",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> position"
                    },
                    {
                      "__class__": "value",
                      "name": "new_line",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "flush_input",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_lexeme",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_lexeme_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> int -> string option"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_lexeme_char",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_lexeme_char_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "lexbuf -> int -> char option"
                    },
                    {
                      "__class__": "type",
                      "name": "lex_tables",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Lexing.lex_tables",
                      "kind":
                        "{lex_base: string; lex_backtrk: string; lex_default: string; lex_trans: string; lex_check: string; lex_base_code: string; lex_backtrk_code: string; lex_default_code: string; lex_trans_code: string; lex_check_code: string; lex_code: string}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "lex_base",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_backtrk",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_default",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_trans",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_check",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_base_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_backtrk_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_default_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_trans_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_check_code",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lex_code",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "engine",
                      "hidden": false,
                      "doc": [],
                      "type": "lex_tables -> int -> lexbuf -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "new_engine",
                      "hidden": false,
                      "doc": [],
                      "type": "lex_tables -> int -> lexbuf -> int"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "List",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_lengths",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'b list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_length_with",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "cons",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "hd",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "tl",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "nth",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "nth_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "rev",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "flatten",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a -> unit) -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_map",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> 'a) -> 'a -> 'b list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b -> 'b) -> 'a list -> 'b -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "iter2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> unit) -> 'a list -> 'b list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c -> 'a) -> 'a -> 'b list -> 'c list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> 'c -> 'c) -> 'a list -> 'b list -> 'c -> 'c"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "memq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "find",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "find_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "filter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "find_all",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "partition",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> bool) -> 'a list -> 'a list * 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "assoc_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "assq_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "mem_assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem_assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "split",
                      "hidden": false,
                      "doc": [],
                      "type": "('a * 'b) list -> 'a list * 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "combine",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'b list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "stable_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "fast_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "sort_uniq",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "merge",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'a -> int) -> 'a list -> 'a list -> 'a list"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "ListLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "hd",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_lengths",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'b list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_length_with",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> len:int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "cons",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "tl",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "nth",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "nth_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> int -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "rev",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_append",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "flatten",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> unit) -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> 'a -> unit) -> 'a list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> 'a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> 'b) -> 'a list -> 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'a) -> init:'a -> 'b list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'b) -> 'a list -> init:'b -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "iter2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> unit) -> 'a list -> 'b list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                    },
                    {
                      "__class__": "value",
                      "name": "rev_map2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_left2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c -> 'a) -> init:'a -> 'b list -> 'c list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "fold_right2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> 'c -> 'c) -> 'a list -> 'b list -> init:'c -> 'c"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "for_all2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "exists2",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> set:'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "memq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> set:'a list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "find",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "find_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "filter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "find_all",
                      "hidden": false,
                      "doc": [],
                      "type": "f:('a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "partition",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "f:('a -> bool) -> 'a list -> 'a list * 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "assoc_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "assq_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> 'b option"
                    },
                    {
                      "__class__": "value",
                      "name": "mem_assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> map:('a * 'b) list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "mem_assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> map:('a * 'b) list -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_assoc",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "remove_assq",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "split",
                      "hidden": false,
                      "doc": [],
                      "type": "('a * 'b) list -> 'a list * 'b list"
                    },
                    {
                      "__class__": "value",
                      "name": "combine",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'b list -> ('a * 'b) list"
                    },
                    {
                      "__class__": "value",
                      "name": "sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "stable_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "fast_sort",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "sort_uniq",
                      "hidden": false,
                      "doc": [],
                      "type": "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "merge",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "cmp:('a -> 'a -> int) -> 'a list -> 'a list -> 'a list"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Map",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "OrderedType",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "+'a",
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "is_empty",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "singleton",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t"
                        },
                        {
                          "__class__": "value",
                          "name": "union",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "('a -> 'a -> int) -> 'a t -> 'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a -> 'a -> bool) -> 'a t -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> bool) -> 'a t -> 'a t * 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "cardinal",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "bindings",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) list"
                        },
                        {
                          "__class__": "value",
                          "name": "min_binding",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "min_binding_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "max_binding",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "max_binding_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "choose",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "choose_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a t * 'a option * 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> bool) -> 'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first_opt",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> bool) -> 'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> bool) -> 'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last_opt",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> bool) -> 'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "('a -> 'b) -> 'a t -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'b) -> 'a t -> 'b t"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Make",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "Ord",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Map.OrderedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "key",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Ord.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "+'a",
                          "private": false,
                          "manifest": "'a Map.Make(Ord).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "is_empty",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "singleton",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t"
                        },
                        {
                          "__class__": "value",
                          "name": "union",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "('a -> 'a -> int) -> 'a t -> 'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "('a -> 'a -> bool) -> 'a t -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> unit) -> 'a t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> bool) -> 'a t -> 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> 'a -> bool) -> 'a t -> 'a t * 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "cardinal",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "bindings",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) list"
                        },
                        {
                          "__class__": "value",
                          "name": "min_binding",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "min_binding_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "max_binding",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "max_binding_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "choose",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "choose_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a t * 'a option * 'a t"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "key -> 'a t -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> bool) -> 'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first_opt",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> bool) -> 'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> bool) -> 'a t -> key * 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last_opt",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "(key -> bool) -> 'a t -> (key * 'a) option"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "('a -> 'b) -> 'a t -> 'b t"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type": "(key -> 'a -> 'b) -> 'a t -> 'b t"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Marshal",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "extern_flags",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Marshal.extern_flags",
                      "kind": "No_sharing | Closures | Compat_32",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "No_sharing",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Closures",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Compat_32",
                          "doc": [],
                          "payload": null
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "to_channel",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "out_channel -> 'a -> extern_flags list -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "to_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> extern_flags list -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> extern_flags list -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "to_buffer",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "bytes -> int -> int -> 'a -> extern_flags list -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "from_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "from_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "from_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "header_size",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "data_size",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "total_size",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "MoreLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module",
                      "name": "Hashtbl",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": "('a, 'b)",
                          "private": false,
                          "manifest": "('a, 'b) Hashtbl.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "?random:bool -> int -> ('a, 'b) t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "reset",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> ('a, 'b) t"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> key:'a -> data:'b -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> 'b option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "replace",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> key:'a -> data:'b -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(key:'a -> data:'b -> unit) -> ('a, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "filter_map_inplace",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(key:'a -> data:'b -> 'b option) -> ('a, 'b) t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(key:'a -> data:'b -> 'c -> 'c) -> ('a, 'b) t -> init:'c -> 'c"
                        },
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "randomize",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "is_randomized",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> bool"
                        },
                        {
                          "__class__": "type",
                          "name": "statistics",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Hashtbl.statistics",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "('a, 'b) t -> statistics"
                        },
                        {
                          "__class__": "module_type",
                          "name": "HashedType",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": "Hashtbl.HashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "SeededHashedType",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": "Hashtbl.SeededHashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> t -> int"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "S",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "SeededS",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from":
                                "MoreLabels.Hashtbl.HashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest": "'a MoreLabels.Hashtbl.Make(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> MoreLabels.Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "MakeSeeded",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "H",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from":
                                "MoreLabels.Hashtbl.SeededHashedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "equal",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> bool"
                                },
                                {
                                  "__class__": "value",
                                  "name": "hash",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "int -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "H.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "'a",
                              "private": false,
                              "manifest":
                                "'a MoreLabels.Hashtbl.MakeSeeded(H).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "create",
                              "hidden": false,
                              "doc": [],
                              "type": "?random:bool -> int -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "clear",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "reset",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "copy",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_all",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> 'a list"
                            },
                            {
                              "__class__": "value",
                              "name": "replace",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key:key -> data:'a -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "filter_map_inplace",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'a option) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "length",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "stats",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> MoreLabels.Hashtbl.statistics"
                            }
                          ]
                        },
                        {
                          "__class__": "value",
                          "name": "hash",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "seeded_hash",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "hash_param",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> int -> 'a -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "seeded_hash_param",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> int -> int -> 'a -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Map",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "module_type",
                          "name": "OrderedType",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": "Map.OrderedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "S",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "+'a",
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "empty",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "is_empty",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "key:key -> data:'a -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "singleton",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "merge",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t"
                            },
                            {
                              "__class__": "value",
                              "name": "union",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "cmp:('a -> 'a -> int) -> 'a t -> 'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "cmp:('a -> 'a -> bool) -> 'a t -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "for_all",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "exists",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "partition",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a -> bool) -> 'a t -> 'a t * 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "cardinal",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "bindings",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) list"
                            },
                            {
                              "__class__": "value",
                              "name": "min_binding",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "min_binding_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "max_binding",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "max_binding_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "choose",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "choose_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "split",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "key -> 'a t -> 'a t * 'a option * 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> bool) -> 'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first_opt",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> bool) -> 'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> bool) -> 'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last_opt",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> bool) -> 'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "f:('a -> 'b) -> 'a t -> 'b t"
                            },
                            {
                              "__class__": "value",
                              "name": "mapi",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> 'b) -> 'a t -> 'b t"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "Ord",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "MoreLabels.Map.OrderedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "compare",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "key",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "Ord.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": "+'a",
                              "private": false,
                              "manifest": "'a MoreLabels.Map.Make(Ord).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "empty",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "is_empty",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "key:key -> data:'a -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "singleton",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "merge",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t"
                            },
                            {
                              "__class__": "value",
                              "name": "union",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a -> 'a -> 'a option) -> 'a t -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "cmp:('a -> 'a -> int) -> 'a t -> 'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "cmp:('a -> 'a -> bool) -> 'a t -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> unit) -> 'a t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key:key -> data:'a -> 'b -> 'b) -> 'a t -> init:'b -> 'b"
                            },
                            {
                              "__class__": "value",
                              "name": "for_all",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "exists",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> bool) -> 'a t -> 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "partition",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> 'a -> bool) -> 'a t -> 'a t * 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "cardinal",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "bindings",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) list"
                            },
                            {
                              "__class__": "value",
                              "name": "min_binding",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "min_binding_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "max_binding",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "max_binding_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "choose",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "choose_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "split",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "key -> 'a t -> 'a t * 'a option * 'a t"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "key -> 'a t -> 'a option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> bool) -> 'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first_opt",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> bool) -> 'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> bool) -> 'a t -> key * 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last_opt",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(key -> bool) -> 'a t -> (key * 'a) option"
                            },
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "f:('a -> 'b) -> 'a t -> 'b t"
                            },
                            {
                              "__class__": "value",
                              "name": "mapi",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(key -> 'a -> 'b) -> 'a t -> 'b t"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Set",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "module_type",
                          "name": "OrderedType",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": "Set.OrderedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            }
                          ]
                        },
                        {
                          "__class__": "module_type",
                          "name": "S",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [],
                          "contents_from": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "elt",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "empty",
                              "hidden": false,
                              "doc": [],
                              "type": "t"
                            },
                            {
                              "__class__": "value",
                              "name": "is_empty",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "singleton",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "union",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "inter",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "diff",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "subset",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> unit) -> t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> elt) -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(elt -> 'a -> 'a) -> t -> init:'a -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "for_all",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "exists",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "partition",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> t * t"
                            },
                            {
                              "__class__": "value",
                              "name": "cardinal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "elements",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt list"
                            },
                            {
                              "__class__": "value",
                              "name": "min_elt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "min_elt_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "max_elt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "max_elt_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "choose",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "choose_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "split",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t * bool * t"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "of_list",
                              "hidden": false,
                              "doc": [],
                              "type": "elt list -> t"
                            }
                          ]
                        },
                        {
                          "__class__": "module",
                          "name": "Make",
                          "hidden": false,
                          "doc": [],
                          "functor_parameters": [
                            {
                              "__class__": "functor_parameter",
                              "name": "Ord",
                              "functor_parameters": [],
                              "doc": [],
                              "contents_from": "MoreLabels.Set.OrderedType",
                              "contents": [
                                {
                                  "__class__": "type",
                                  "name": "t",
                                  "hidden": false,
                                  "doc": [],
                                  "parameters": null,
                                  "private": false,
                                  "manifest": null,
                                  "kind": null,
                                  "constructors": [],
                                  "labels": []
                                },
                                {
                                  "__class__": "value",
                                  "name": "compare",
                                  "hidden": false,
                                  "doc": [],
                                  "type": "t -> t -> int"
                                }
                              ]
                            }
                          ],
                          "contents_from": null,
                          "alias_of": null,
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "elt",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "Ord.t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": "MoreLabels.Set.Make(Ord).t",
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "empty",
                              "hidden": false,
                              "doc": [],
                              "type": "t"
                            },
                            {
                              "__class__": "value",
                              "name": "is_empty",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "mem",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "add",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "singleton",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "remove",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "union",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "inter",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "diff",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "subset",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "iter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> unit) -> t -> unit"
                            },
                            {
                              "__class__": "value",
                              "name": "map",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> elt) -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "fold",
                              "hidden": false,
                              "doc": [],
                              "type":
                                "f:(elt -> 'a -> 'a) -> t -> init:'a -> 'a"
                            },
                            {
                              "__class__": "value",
                              "name": "for_all",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "exists",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "filter",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> t"
                            },
                            {
                              "__class__": "value",
                              "name": "partition",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> t * t"
                            },
                            {
                              "__class__": "value",
                              "name": "cardinal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            },
                            {
                              "__class__": "value",
                              "name": "elements",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt list"
                            },
                            {
                              "__class__": "value",
                              "name": "min_elt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "min_elt_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "max_elt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "max_elt_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "choose",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "choose_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "split",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> t * bool * t"
                            },
                            {
                              "__class__": "value",
                              "name": "find",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "elt -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_first_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt"
                            },
                            {
                              "__class__": "value",
                              "name": "find_last_opt",
                              "hidden": false,
                              "doc": [],
                              "type": "f:(elt -> bool) -> t -> elt option"
                            },
                            {
                              "__class__": "value",
                              "name": "of_list",
                              "hidden": false,
                              "doc": [],
                              "type": "elt list -> t"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Nativeint",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "zero",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "one",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_one",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "neg",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "mul",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "div",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "rem",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "abs",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "size",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "max_int",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "min_int",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "logand",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "logor",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "logxor",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "lognot",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_left",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_logical",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "of_float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "to_float",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> nativeint option"
                    },
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "nativeint",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "format",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> nativeint -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Oo",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "< .. > -> < .. >"
                    },
                    {
                      "__class__": "value",
                      "name": "id",
                      "hidden": false,
                      "doc": [],
                      "type": "< .. > -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "new_method",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> CamlinternalOO.tag"
                    },
                    {
                      "__class__": "value",
                      "name": "public_method_label",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> CamlinternalOO.tag"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Parsing",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "symbol_start",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "symbol_end",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rhs_start",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rhs_end",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "symbol_start_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> Lexing.position"
                    },
                    {
                      "__class__": "value",
                      "name": "symbol_end_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> Lexing.position"
                    },
                    {
                      "__class__": "value",
                      "name": "rhs_start_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> Lexing.position"
                    },
                    {
                      "__class__": "value",
                      "name": "rhs_end_pos",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> Lexing.position"
                    },
                    {
                      "__class__": "value",
                      "name": "clear_parser",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "exception",
                      "name": "Parse_error",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "set_trace",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> bool"
                    },
                    {
                      "__class__": "type",
                      "name": "parser_env",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Parsing.parser_env",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "type",
                      "name": "parse_tables",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Parsing.parse_tables",
                      "kind":
                        "{actions: (parser_env -> Obj.t) array; transl_const: int array; transl_block: int array; lhs: string; len: string; defred: string; dgoto: string; sindex: string; rindex: string; gindex: string; tablesize: int; table: string; check: string; error_function: string -> unit; names_const: string; names_block: string}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "actions",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "transl_const",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "transl_block",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "lhs",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "len",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "defred",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "dgoto",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "sindex",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "rindex",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "gindex",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "tablesize",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "table",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "check",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "error_function",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "names_const",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "names_block",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "exception",
                      "name": "YYexit",
                      "hidden": false,
                      "doc": [],
                      "payload": "Obj.t",
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "yyparse",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "parse_tables -> int -> (Lexing.lexbuf -> 'a) -> Lexing.lexbuf -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "peek_val",
                      "hidden": false,
                      "doc": [],
                      "type": "parser_env -> int -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "is_current_lookahead",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "parse_error",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Printexc",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "print",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "catch",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'b) -> 'a -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "print_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "record_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "backtrace_status",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "register_printer",
                      "hidden": false,
                      "doc": [],
                      "type": "(exn -> string option) -> unit"
                    },
                    {
                      "__class__": "type",
                      "name": "raw_backtrace",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Printexc.raw_backtrace",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "get_raw_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> raw_backtrace"
                    },
                    {
                      "__class__": "value",
                      "name": "print_raw_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "out_channel -> raw_backtrace -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "raw_backtrace_to_string",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "raise_with_backtrace",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> raw_backtrace -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "get_callstack",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> raw_backtrace"
                    },
                    {
                      "__class__": "value",
                      "name": "set_uncaught_exception_handler",
                      "hidden": false,
                      "doc": [],
                      "type": "(exn -> raw_backtrace -> unit) -> unit"
                    },
                    {
                      "__class__": "type",
                      "name": "backtrace_slot",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Printexc.backtrace_slot",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "backtrace_slots",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace -> backtrace_slot array option"
                    },
                    {
                      "__class__": "type",
                      "name": "location",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Printexc.location",
                      "kind":
                        "{filename: string; line_number: int; start_char: int; end_char: int}",
                      "constructors": [],
                      "labels": [
                        {
                          "__class__": "record_label",
                          "name": "filename",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "line_number",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "start_char",
                          "doc": []
                        },
                        {
                          "__class__": "record_label",
                          "name": "end_char",
                          "doc": []
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Slot",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Printexc.backtrace_slot",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "is_raise",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "is_inline",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "location",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> Printexc.location option"
                        },
                        {
                          "__class__": "value",
                          "name": "format",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> t -> string option"
                        }
                      ]
                    },
                    {
                      "__class__": "type",
                      "name": "raw_backtrace_slot",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Printexc.raw_backtrace_slot",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "raw_backtrace_length",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get_raw_backtrace_slot",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace -> int -> raw_backtrace_slot"
                    },
                    {
                      "__class__": "value",
                      "name": "convert_raw_backtrace_slot",
                      "hidden": false,
                      "doc": [],
                      "type": "raw_backtrace_slot -> backtrace_slot"
                    },
                    {
                      "__class__": "value",
                      "name": "get_raw_backtrace_next_slot",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "raw_backtrace_slot -> raw_backtrace_slot option"
                    },
                    {
                      "__class__": "value",
                      "name": "exn_slot_id",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "exn_slot_name",
                      "hidden": false,
                      "doc": [],
                      "type": "exn -> string"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Printf",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "fprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "out_channel -> ('a, out_channel, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "printf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, out_channel, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "eprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, out_channel, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "sprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, unit, string) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "bprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "Buffer.t -> ('a, Buffer.t, unit) format -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "ifprintf",
                      "hidden": false,
                      "doc": [],
                      "type": "'b -> ('a, 'b, 'c, unit) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kfprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(out_channel -> 'd) ->\nout_channel -> ('a, out_channel, unit, 'd) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "ikfprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('b -> 'd) -> 'b -> ('a, 'b, 'c, 'd) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "ksprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'd) -> ('a, unit, string, 'd) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kbprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(Buffer.t -> 'd) -> Buffer.t -> ('a, Buffer.t, unit, 'd) format4 -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "kprintf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "(string -> 'b) -> ('a, unit, string, 'b) format4 -> 'a"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Queue",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a Queue.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Empty",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "add",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "push",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "take",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "pop",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "peek",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "top",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "clear",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "is_empty",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fold",
                      "hidden": false,
                      "doc": [],
                      "type": "('b -> 'a -> 'b) -> 'b -> 'a t -> 'b"
                    },
                    {
                      "__class__": "value",
                      "name": "transfer",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a t -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Random",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "full_init",
                      "hidden": false,
                      "doc": [],
                      "type": "int array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "self_init",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "bits",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int32",
                      "hidden": false,
                      "doc": [],
                      "type": "Int32.t -> Int32.t"
                    },
                    {
                      "__class__": "value",
                      "name": "nativeint",
                      "hidden": false,
                      "doc": [],
                      "type": "Nativeint.t -> Nativeint.t"
                    },
                    {
                      "__class__": "value",
                      "name": "int64",
                      "hidden": false,
                      "doc": [],
                      "type": "Int64.t -> Int64.t"
                    },
                    {
                      "__class__": "value",
                      "name": "float",
                      "hidden": false,
                      "doc": [],
                      "type": "float -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "bool",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "module",
                      "name": "State",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Random.State.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "make",
                          "hidden": false,
                          "doc": [],
                          "type": "int array -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "make_self_init",
                          "hidden": false,
                          "doc": [],
                          "type": "unit -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "bits",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "int",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "int32",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> Int32.t -> Int32.t"
                        },
                        {
                          "__class__": "value",
                          "name": "nativeint",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> Nativeint.t -> Nativeint.t"
                        },
                        {
                          "__class__": "value",
                          "name": "int64",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> Int64.t -> Int64.t"
                        },
                        {
                          "__class__": "value",
                          "name": "float",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> float -> float"
                        },
                        {
                          "__class__": "value",
                          "name": "bool",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "get_state",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> State.t"
                    },
                    {
                      "__class__": "value",
                      "name": "set_state",
                      "hidden": false,
                      "doc": [],
                      "type": "State.t -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Scanf",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module",
                      "name": "Scanning",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "in_channel",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Scanf.Scanning.in_channel",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "scanbuf",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "in_channel",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "stdin",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel"
                        },
                        {
                          "__class__": "type",
                          "name": "file_name",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "string",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "open_in",
                          "hidden": false,
                          "doc": [],
                          "type": "file_name -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "open_in_bin",
                          "hidden": false,
                          "doc": [],
                          "type": "file_name -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "close_in",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "from_file",
                          "hidden": false,
                          "doc": [],
                          "type": "file_name -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "from_file_bin",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "from_string",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "from_function",
                          "hidden": false,
                          "doc": [],
                          "type": "(unit -> char) -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "from_channel",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> in_channel"
                        },
                        {
                          "__class__": "value",
                          "name": "end_of_input",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "beginning_of_input",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "name_of_input",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "stdib",
                          "hidden": false,
                          "doc": [],
                          "type": "in_channel"
                        }
                      ]
                    },
                    {
                      "__class__": "type",
                      "name": "scanner",
                      "hidden": false,
                      "doc": [],
                      "parameters": "('a, 'b, 'c, 'd)",
                      "private": false,
                      "manifest":
                        "('a, Scanning.in_channel, 'b, 'c, 'a -> 'd, 'd) format6 -> 'c",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Scan_failure",
                      "hidden": false,
                      "doc": [],
                      "payload": "string",
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "bscanf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "Scanning.in_channel -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "sscanf",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "scanf",
                      "hidden": false,
                      "doc": [],
                      "type": "('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "kscanf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "Scanning.in_channel ->\n(Scanning.in_channel -> exn -> 'd) -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "ksscanf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "string -> (Scanning.in_channel -> exn -> 'd) -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "bscanf_format",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "Scanning.in_channel ->\n('a, 'b, 'c, 'd, 'e, 'f) format6 ->\n(('a, 'b, 'c, 'd, 'e, 'f) format6 -> 'g) -> 'g"
                    },
                    {
                      "__class__": "value",
                      "name": "sscanf_format",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "string ->\n('a, 'b, 'c, 'd, 'e, 'f) format6 ->\n(('a, 'b, 'c, 'd, 'e, 'f) format6 -> 'g) -> 'g"
                    },
                    {
                      "__class__": "value",
                      "name": "format_from_string",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "string ->\n('a, 'b, 'c, 'd, 'e, 'f) format6 -> ('a, 'b, 'c, 'd, 'e, 'f) format6"
                    },
                    {
                      "__class__": "value",
                      "name": "unescaped",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "fscanf",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> ('a, 'b, 'c, 'd) scanner"
                    },
                    {
                      "__class__": "value",
                      "name": "kfscanf",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "in_channel -> (Scanning.in_channel -> exn -> 'd) -> ('a, 'b, 'c, 'd) scanner"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Set",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module_type",
                      "name": "OrderedType",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        }
                      ]
                    },
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "t"
                        },
                        {
                          "__class__": "value",
                          "name": "is_empty",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "singleton",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "union",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "inter",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "diff",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "subset",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> unit) -> t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> elt) -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> 'a -> 'a) -> t -> 'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> t * t"
                        },
                        {
                          "__class__": "value",
                          "name": "cardinal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "elements",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt list"
                        },
                        {
                          "__class__": "value",
                          "name": "min_elt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "min_elt_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "max_elt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "max_elt_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "choose",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "choose_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t * bool * t"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "of_list",
                          "hidden": false,
                          "doc": [],
                          "type": "elt list -> t"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Make",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "Ord",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Set.OrderedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "compare",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "elt",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Ord.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Set.Make(Ord).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "t"
                        },
                        {
                          "__class__": "value",
                          "name": "is_empty",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "singleton",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "union",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "inter",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "diff",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "subset",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> unit) -> t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> elt) -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> 'a -> 'a) -> t -> 'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> t * t"
                        },
                        {
                          "__class__": "value",
                          "name": "cardinal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "elements",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt list"
                        },
                        {
                          "__class__": "value",
                          "name": "min_elt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "min_elt_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "max_elt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "max_elt_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "choose",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "choose_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> t * bool * t"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "elt -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_first_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt"
                        },
                        {
                          "__class__": "value",
                          "name": "find_last_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "(elt -> bool) -> t -> elt option"
                        },
                        {
                          "__class__": "value",
                          "name": "of_list",
                          "hidden": false,
                          "doc": [],
                          "type": "elt list -> t"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Sort",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "list",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> bool) -> 'a list -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "array",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> 'a -> bool) -> 'a array -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "merge",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "('a -> 'a -> bool) -> 'a list -> 'a list -> 'a list"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Spacetime",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "enabled",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "module",
                      "name": "Series",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Spacetime.Series.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "path:string -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "save_event",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "?time:float -> t -> event_name:string -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "save_and_close",
                          "hidden": false,
                          "doc": [],
                          "type": "?time:float -> t -> unit"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Snapshot",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "take",
                          "hidden": false,
                          "doc": [],
                          "type": "?time:float -> Spacetime.Series.t -> unit"
                        }
                      ]
                    },
                    {
                      "__class__": "value",
                      "name": "save_event_for_automatic_snapshots",
                      "hidden": false,
                      "doc": [],
                      "type": "event_name:string -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Stack",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a Stack.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Empty",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "push",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "pop",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "top",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "clear",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "is_empty",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "fold",
                      "hidden": false,
                      "doc": [],
                      "type": "('b -> 'a -> 'b) -> 'b -> 'a t -> 'b"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "StdLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "module",
                      "name": "Array",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "get",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "set",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "make",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> 'a -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "init",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> f:(int -> 'a) -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "make_matrix",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "dimx:int -> dimy:int -> 'a -> 'a array array"
                        },
                        {
                          "__class__": "value",
                          "name": "create_matrix",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "dimx:int -> dimy:int -> 'a -> 'a array array"
                        },
                        {
                          "__class__": "value",
                          "name": "append",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> 'a array -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "concat",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array list -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "sub",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a array -> pos:int -> len:int -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "'a array -> pos:int -> len:int -> 'a -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:'a array -> src_pos:int -> dst:'a array -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "to_list",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "of_list",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a array"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> unit) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> 'b) -> 'a array -> 'b array"
                        },
                        {
                          "__class__": "value",
                          "name": "iteri",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> 'a -> unit) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(int -> 'a -> 'b) -> 'a array -> 'b array"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_left",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'a) -> init:'a -> 'b array -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('b -> 'a -> 'a) -> 'b array -> init:'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "iter2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> unit) -> 'a array -> 'b array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c) -> 'a array -> 'b array -> 'c array"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a array -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a array -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> set:'a array -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "memq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> set:'a array -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "create_float",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> float array"
                        },
                        {
                          "__class__": "value",
                          "name": "make_float",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> float array"
                        },
                        {
                          "__class__": "value",
                          "name": "sort",
                          "hidden": false,
                          "doc": [],
                          "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "stable_sort",
                          "hidden": false,
                          "doc": [],
                          "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fast_sort",
                          "hidden": false,
                          "doc": [],
                          "type": "cmp:('a -> 'a -> int) -> 'a array -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_get",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_set",
                          "hidden": false,
                          "doc": [],
                          "type": "'a array -> int -> 'a -> unit"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Bytes",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "get",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char"
                        },
                        {
                          "__class__": "value",
                          "name": "set",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "make",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> char -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "init",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> f:(int -> char) -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "empty",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "of_string",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "to_string",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "sub",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> pos:int -> len:int -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "sub_string",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> int -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "extend",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> left:int -> right:int -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "bytes -> pos:int -> len:int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:bytes -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit_string",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "concat",
                          "hidden": false,
                          "doc": [],
                          "type": "sep:bytes -> bytes list -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "cat",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(char -> unit) -> bytes -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iteri",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> char -> unit) -> bytes -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(char -> char) -> bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> char -> char) -> bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "trim",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "escaped",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "index",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "index_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "index_from",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "index_from_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_from",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_from_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "contains",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "contains_from",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "rcontains_from",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "uppercase",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "lowercase",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "capitalize",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "uncapitalize",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "uppercase_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "lowercase_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "capitalize_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "uncapitalize_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> bytes"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "bytes",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_get",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_set",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:bytes -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "bytes -> pos:int -> len:int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_to_string",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_of_string",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> bytes"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "List",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "hd",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "compare_lengths",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'b list -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "compare_length_with",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> len:int -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "cons",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "tl",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "nth",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> int -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "nth_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> int -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "rev",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "append",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "rev_append",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "concat",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "flatten",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> unit) -> 'a list -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iteri",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> 'a -> unit) -> 'a list -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> 'b) -> 'a list -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> 'a -> 'b) -> 'a list -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "rev_map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> 'b) -> 'a list -> 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_left",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'a) -> init:'a -> 'b list -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'b) -> 'a list -> init:'b -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "iter2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> unit) -> 'a list -> 'b list -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                        },
                        {
                          "__class__": "value",
                          "name": "rev_map2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_left2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c -> 'a) -> init:'a -> 'b list -> 'c list -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "fold_right2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> 'c -> 'c) -> 'a list -> 'b list -> init:'c -> 'c"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "for_all2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "exists2",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> 'b -> bool) -> 'a list -> 'b list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> set:'a list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "memq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> set:'a list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> 'a option"
                        },
                        {
                          "__class__": "value",
                          "name": "filter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "f:('a -> bool) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "partition",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:('a -> bool) -> 'a list -> 'a list * 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "assoc",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "assoc_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> 'b option"
                        },
                        {
                          "__class__": "value",
                          "name": "assq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> 'b"
                        },
                        {
                          "__class__": "value",
                          "name": "assq_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> 'b option"
                        },
                        {
                          "__class__": "value",
                          "name": "mem_assoc",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> map:('a * 'b) list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "mem_assq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> map:('a * 'b) list -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "remove_assoc",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                        },
                        {
                          "__class__": "value",
                          "name": "remove_assq",
                          "hidden": false,
                          "doc": [],
                          "type": "'a -> ('a * 'b) list -> ('a * 'b) list"
                        },
                        {
                          "__class__": "value",
                          "name": "split",
                          "hidden": false,
                          "doc": [],
                          "type": "('a * 'b) list -> 'a list * 'b list"
                        },
                        {
                          "__class__": "value",
                          "name": "combine",
                          "hidden": false,
                          "doc": [],
                          "type": "'a list -> 'b list -> ('a * 'b) list"
                        },
                        {
                          "__class__": "value",
                          "name": "sort",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "stable_sort",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "fast_sort",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "sort_uniq",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "cmp:('a -> 'a -> int) -> 'a list -> 'a list -> 'a list"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "String",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "value",
                          "name": "length",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "get",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char"
                        },
                        {
                          "__class__": "value",
                          "name": "set",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> bytes"
                        },
                        {
                          "__class__": "value",
                          "name": "make",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> char -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "init",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> f:(int -> char) -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "copy",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "sub",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> pos:int -> len:int -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "bytes -> pos:int -> len:int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "concat",
                          "hidden": false,
                          "doc": [],
                          "type": "sep:string -> string list -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(char -> unit) -> string -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "iteri",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(int -> char -> unit) -> string -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "map",
                          "hidden": false,
                          "doc": [],
                          "type": "f:(char -> char) -> string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "mapi",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "f:(int -> char -> char) -> string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "trim",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "escaped",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "index",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "index_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "index_from",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "index_from_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_from",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "rindex_from_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> int option"
                        },
                        {
                          "__class__": "value",
                          "name": "contains",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "contains_from",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "rcontains_from",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "uppercase",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "lowercase",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "capitalize",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "uncapitalize",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "uppercase_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "lowercase_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "capitalize_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "value",
                          "name": "uncapitalize_ascii",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> string"
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "string",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "compare",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "equal",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> t -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "split_on_char",
                          "hidden": false,
                          "doc": [],
                          "type": "sep:char -> string -> string list"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_get",
                          "hidden": false,
                          "doc": [],
                          "type": "string -> int -> char"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_set",
                          "hidden": false,
                          "doc": [],
                          "type": "bytes -> int -> char -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_blit",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "unsafe_fill",
                          "hidden": false,
                          "doc": [],
                          "type":
                            "bytes -> pos:int -> len:int -> char -> unit"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Stream",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a Stream.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Failure",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "exception",
                      "name": "Error",
                      "hidden": false,
                      "doc": [],
                      "payload": "string",
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "from",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> 'a option) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "of_list",
                      "hidden": false,
                      "doc": [],
                      "type": "'a list -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char t"
                    },
                    {
                      "__class__": "value",
                      "name": "of_bytes",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> char t"
                    },
                    {
                      "__class__": "value",
                      "name": "of_channel",
                      "hidden": false,
                      "doc": [],
                      "type": "in_channel -> char t"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "next",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a"
                    },
                    {
                      "__class__": "value",
                      "name": "empty",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "peek",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "junk",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "count",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "npeek",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a t -> 'a list"
                    },
                    {
                      "__class__": "value",
                      "name": "iapp",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> 'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "icons",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "ising",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lapp",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a t) -> 'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lcons",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a) -> 'a t -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "lsing",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "sempty",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "slazy",
                      "hidden": false,
                      "doc": [],
                      "type": "(unit -> 'a t) -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "dump",
                      "hidden": false,
                      "doc": [],
                      "type": "('a -> unit) -> 'a t -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "String",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> (int -> char) -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string list -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "(char -> unit) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> char -> unit) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "(char -> char) -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "(int -> char -> char) -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "trim",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "index",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "contains",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "contains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "rcontains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "split_on_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> string -> string list"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_blit",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> bytes -> int -> int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> char -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "StringLabels",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bytes"
                    },
                    {
                      "__class__": "value",
                      "name": "make",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> char -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "init",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> f:(int -> char) -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "copy",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "sub",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> pos:int -> len:int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "concat",
                      "hidden": false,
                      "doc": [],
                      "type": "sep:string -> string list -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "iter",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(char -> unit) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "iteri",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> char -> unit) -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "map",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(char -> char) -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "mapi",
                      "hidden": false,
                      "doc": [],
                      "type": "f:(int -> char -> char) -> string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "trim",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "escaped",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "index",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "index_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "rindex_from_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "contains",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "contains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "rcontains_from",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uppercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "lowercase_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "capitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "uncapitalize_ascii",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "string",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "split_on_char",
                      "hidden": false,
                      "doc": [],
                      "type": "sep:char -> string -> string list"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_get",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_set",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> char -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_blit",
                      "hidden": false,
                      "doc": [],
                      "type":
                        "src:string -> src_pos:int -> dst:bytes -> dst_pos:int -> len:int -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_fill",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> pos:int -> len:int -> char -> unit"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Sys",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "argv",
                      "hidden": false,
                      "doc": [],
                      "type": "string array"
                    },
                    {
                      "__class__": "value",
                      "name": "executable_name",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "file_exists",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "is_directory",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "remove",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "rename",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "getenv",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "getenv_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string option"
                    },
                    {
                      "__class__": "value",
                      "name": "command",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "time",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "chdir",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "getcwd",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "readdir",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> string array"
                    },
                    {
                      "__class__": "value",
                      "name": "interactive",
                      "hidden": false,
                      "doc": [],
                      "type": "bool ref"
                    },
                    {
                      "__class__": "value",
                      "name": "os_type",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "type",
                      "name": "backend_type",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Sys.backend_type",
                      "kind": "Native | Bytecode | Other of string",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Native",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Bytecode",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Other",
                          "doc": [],
                          "payload": "string"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "backend_type",
                      "hidden": false,
                      "doc": [],
                      "type": "backend_type"
                    },
                    {
                      "__class__": "value",
                      "name": "unix",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "value",
                      "name": "win32",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "value",
                      "name": "cygwin",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "value",
                      "name": "word_size",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_size",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_endian",
                      "hidden": false,
                      "doc": [],
                      "type": "bool"
                    },
                    {
                      "__class__": "value",
                      "name": "max_string_length",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "max_array_length",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "runtime_variant",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "runtime_parameters",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> string"
                    },
                    {
                      "__class__": "type",
                      "name": "signal_behavior",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Sys.signal_behavior",
                      "kind":
                        "Signal_default | Signal_ignore | Signal_handle of int -> unit",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Signal_default",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Signal_ignore",
                          "doc": [],
                          "payload": null
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Signal_handle",
                          "doc": [],
                          "payload": "int -> unit"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "signal",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> signal_behavior -> signal_behavior"
                    },
                    {
                      "__class__": "value",
                      "name": "set_signal",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> signal_behavior -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "sigabrt",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigalrm",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigfpe",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sighup",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigill",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigint",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigkill",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigpipe",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigquit",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigsegv",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigterm",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigusr1",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigusr2",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigchld",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigcont",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigstop",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigtstp",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigttin",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigttou",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigvtalrm",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigprof",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigbus",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigpoll",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigsys",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigtrap",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigurg",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigxcpu",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "value",
                      "name": "sigxfsz",
                      "hidden": false,
                      "doc": [],
                      "type": "int"
                    },
                    {
                      "__class__": "exception",
                      "name": "Break",
                      "hidden": false,
                      "doc": [],
                      "payload": null,
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "catch_break",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "ocaml_version",
                      "hidden": false,
                      "doc": [],
                      "type": "string"
                    },
                    {
                      "__class__": "value",
                      "name": "enable_runtime_warnings",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "runtime_warnings_enabled",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "opaque_identity",
                      "hidden": false,
                      "doc": [],
                      "type": "'a -> 'a"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Uchar",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Uchar.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "min",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "max",
                      "hidden": false,
                      "doc": [],
                      "type": "t"
                    },
                    {
                      "__class__": "value",
                      "name": "succ",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "pred",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "is_valid",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "to_int",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "is_char",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "of_char",
                      "hidden": false,
                      "doc": [],
                      "type": "char -> t"
                    },
                    {
                      "__class__": "value",
                      "name": "to_char",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "unsafe_to_char",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> char"
                    },
                    {
                      "__class__": "value",
                      "name": "equal",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "compare",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "hash",
                      "hidden": false,
                      "doc": [],
                      "type": "t -> int"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Weak",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "t",
                      "hidden": false,
                      "doc": [],
                      "parameters": "'a",
                      "private": false,
                      "manifest": "'a Weak.t",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "create",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> 'a t"
                    },
                    {
                      "__class__": "value",
                      "name": "length",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "set",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> 'a option -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "get_copy",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> 'a option"
                    },
                    {
                      "__class__": "value",
                      "name": "check",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "fill",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> int -> 'a option -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "blit",
                      "hidden": false,
                      "doc": [],
                      "type": "'a t -> int -> 'a t -> int -> int -> unit"
                    },
                    {
                      "__class__": "module_type",
                      "name": "S",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [],
                      "contents_from": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "data",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": null,
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data list"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(data -> unit) -> t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type": "(data -> 'a -> 'a) -> t -> 'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "count",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int * int * int * int * int * int"
                        }
                      ]
                    },
                    {
                      "__class__": "module",
                      "name": "Make",
                      "hidden": false,
                      "doc": [],
                      "functor_parameters": [
                        {
                          "__class__": "functor_parameter",
                          "name": "H",
                          "functor_parameters": [],
                          "doc": [],
                          "contents_from": "Hashtbl.HashedType",
                          "contents": [
                            {
                              "__class__": "type",
                              "name": "t",
                              "hidden": false,
                              "doc": [],
                              "parameters": null,
                              "private": false,
                              "manifest": null,
                              "kind": null,
                              "constructors": [],
                              "labels": []
                            },
                            {
                              "__class__": "value",
                              "name": "equal",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> t -> bool"
                            },
                            {
                              "__class__": "value",
                              "name": "hash",
                              "hidden": false,
                              "doc": [],
                              "type": "t -> int"
                            }
                          ]
                        }
                      ],
                      "contents_from": null,
                      "alias_of": null,
                      "contents": [
                        {
                          "__class__": "type",
                          "name": "data",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "H.t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "type",
                          "name": "t",
                          "hidden": false,
                          "doc": [],
                          "parameters": null,
                          "private": false,
                          "manifest": "Weak.Make(H).t",
                          "kind": null,
                          "constructors": [],
                          "labels": []
                        },
                        {
                          "__class__": "value",
                          "name": "create",
                          "hidden": false,
                          "doc": [],
                          "type": "int -> t"
                        },
                        {
                          "__class__": "value",
                          "name": "clear",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "merge",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data"
                        },
                        {
                          "__class__": "value",
                          "name": "add",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "remove",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "find",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data"
                        },
                        {
                          "__class__": "value",
                          "name": "find_opt",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data option"
                        },
                        {
                          "__class__": "value",
                          "name": "find_all",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> data list"
                        },
                        {
                          "__class__": "value",
                          "name": "mem",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> data -> bool"
                        },
                        {
                          "__class__": "value",
                          "name": "iter",
                          "hidden": false,
                          "doc": [],
                          "type": "(data -> unit) -> t -> unit"
                        },
                        {
                          "__class__": "value",
                          "name": "fold",
                          "hidden": false,
                          "doc": [],
                          "type": "(data -> 'a -> 'a) -> t -> 'a -> 'a"
                        },
                        {
                          "__class__": "value",
                          "name": "count",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int"
                        },
                        {
                          "__class__": "value",
                          "name": "stats",
                          "hidden": false,
                          "doc": [],
                          "type": "t -> int * int * int * int * int * int"
                        }
                      ]
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Num",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "num",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Num.num",
                      "kind":
                        "Int of int | Big_int of Big_int.big_int | Ratio of Ratio.ratio",
                      "constructors": [
                        {
                          "__class__": "type_constructor",
                          "name": "Int",
                          "doc": [],
                          "payload": "int"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Big_int",
                          "doc": [],
                          "payload": "Big_int.big_int"
                        },
                        {
                          "__class__": "type_constructor",
                          "name": "Ratio",
                          "doc": [],
                          "payload": "Ratio.ratio"
                        }
                      ],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "(+/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "add_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "(-/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "(*/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "mult_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "square_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "(//)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "div_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "quo_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "mod_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "(**/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "power_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "abs_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "succ_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "pred_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "incr_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num ref -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "decr_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num ref -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "is_integer_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "integer_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "floor_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "round_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "ceiling_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "sign_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "(=/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(</)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<=/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(>=/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "(<>/)",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "eq_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "lt_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "le_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "gt_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "ge_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "max_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "min_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> num -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "approx_num_fix",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> num -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "approx_num_exp",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> num -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> num option"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_num_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "nat_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Nat.nat"
                    },
                    {
                      "__class__": "value",
                      "name": "nat_of_num_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Nat.nat option"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_nat",
                      "hidden": false,
                      "doc": [],
                      "type": "Nat.nat -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "Big_int.big_int -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Big_int.big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_num_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Big_int.big_int option"
                    },
                    {
                      "__class__": "value",
                      "name": "ratio_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> Ratio.ratio"
                    },
                    {
                      "__class__": "value",
                      "name": "num_of_ratio",
                      "hidden": false,
                      "doc": [],
                      "type": "Ratio.ratio -> num"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_num",
                      "hidden": false,
                      "doc": [],
                      "type": "num -> float"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Big_int",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "type",
                      "name": "big_int",
                      "hidden": false,
                      "doc": [],
                      "parameters": null,
                      "private": false,
                      "manifest": "Big_int.big_int",
                      "kind": null,
                      "constructors": [],
                      "labels": []
                    },
                    {
                      "__class__": "value",
                      "name": "zero_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "unit_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "minus_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "abs_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "add_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "succ_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "add_int_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "sub_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "pred_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "mult_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "mult_int_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "square_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "sqrt_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "quomod_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int * big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "div_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "mod_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "gcd_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "power_int_positive_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "power_big_int_positive_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "power_int_positive_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "power_big_int_positive_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "sign_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "compare_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "eq_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "le_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "ge_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "lt_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "gt_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "max_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "min_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "num_digits_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "num_bits_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "string_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_string_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> big_int option"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "is_int_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "int_of_big_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int option"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_int32",
                      "hidden": false,
                      "doc": [],
                      "type": "int32 -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_nativeint",
                      "hidden": false,
                      "doc": [],
                      "type": "nativeint -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_int64",
                      "hidden": false,
                      "doc": [],
                      "type": "int64 -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "int32_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int32"
                    },
                    {
                      "__class__": "value",
                      "name": "int32_of_big_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int32 option"
                    },
                    {
                      "__class__": "value",
                      "name": "nativeint_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> nativeint"
                    },
                    {
                      "__class__": "value",
                      "name": "nativeint_of_big_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> nativeint option"
                    },
                    {
                      "__class__": "value",
                      "name": "int64_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int64"
                    },
                    {
                      "__class__": "value",
                      "name": "int64_of_big_int_opt",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int64 option"
                    },
                    {
                      "__class__": "value",
                      "name": "float_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> float"
                    },
                    {
                      "__class__": "value",
                      "name": "and_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "or_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "xor_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_left_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "shift_right_towards_zero_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "extract_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "nat_of_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> Nat.nat"
                    },
                    {
                      "__class__": "value",
                      "name": "big_int_of_nat",
                      "hidden": false,
                      "doc": [],
                      "type": "Nat.nat -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "base_power_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> int -> big_int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "sys_big_int_of_string",
                      "hidden": false,
                      "doc": [],
                      "type": "string -> int -> int -> big_int"
                    },
                    {
                      "__class__": "value",
                      "name": "round_futur_last_digit",
                      "hidden": false,
                      "doc": [],
                      "type": "bytes -> int -> int -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "approx_big_int",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> big_int -> string"
                    },
                    {
                      "__class__": "value",
                      "name": "round_big_int_to_float",
                      "hidden": false,
                      "doc": [],
                      "type": "big_int -> bool -> float"
                    }
                  ]
                },
                {
                  "__class__": "module",
                  "name": "Arith_status",
                  "hidden": false,
                  "doc": [],
                  "functor_parameters": [],
                  "contents_from": null,
                  "alias_of": null,
                  "contents": [
                    {
                      "__class__": "value",
                      "name": "arith_status",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_error_when_null_denominator",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_error_when_null_denominator",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_normalize_ratio",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_normalize_ratio",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_normalize_ratio_when_printing",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_normalize_ratio_when_printing",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_approx_printing",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> bool"
                    },
                    {
                      "__class__": "value",
                      "name": "set_approx_printing",
                      "hidden": false,
                      "doc": [],
                      "type": "bool -> unit"
                    },
                    {
                      "__class__": "value",
                      "name": "get_floating_precision",
                      "hidden": false,
                      "doc": [],
                      "type": "unit -> int"
                    },
                    {
                      "__class__": "value",
                      "name": "set_floating_precision",
                      "hidden": false,
                      "doc": [],
                      "type": "int -> unit"
                    }
                  ]
                }
              ]
            },
            {
              "__class__": "module",
              "name": "Pervasives",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Arg",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Array",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "get",
                  "hidden": false,
                  "doc": [],
                  "type": "'a array -> int -> 'a"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "ArrayLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Buffer",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Bytes",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "BytesLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Callback",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Char",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Complex",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Digest",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Ephemeron",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Filename",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Format",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Gc",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Genlex",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Hashtbl",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Lazy",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Lexing",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "List",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "ListLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Map",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Marshal",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "MoreLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Nativeint",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Oo",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Parsing",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Printexc",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Printf",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Queue",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Random",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Scanf",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Set",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Sort",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Spacetime",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Stack",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "StdLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Stream",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "String",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": [
                {
                  "__class__": "value",
                  "name": "get",
                  "hidden": false,
                  "doc": [],
                  "type": "string -> int -> char"
                }
              ]
            },
            {
              "__class__": "module",
              "name": "StringLabels",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Sys",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Uchar",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Weak",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Num",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Big_int",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "module",
              "name": "Arith_status",
              "hidden": false,
              "doc": [],
              "functor_parameters": [],
              "contents_from": null,
              "alias_of": null,
              "contents": []
            },
            {
              "__class__": "value",
              "name": "not",
              "hidden": false,
              "doc": [ " Negation. Alias of :val:`General.Bool.O.not`. " ],
              "type": "bool -> bool"
            },
            {
              "__class__": "value",
              "name": "(&&)",
              "hidden": false,
              "doc": [
                " Conjunction. Lazy. Alias of :val:`General.Bool.O.(&&)` "
              ],
              "type": "bool -> bool -> bool"
            },
            {
              "__class__": "value",
              "name": "(||)",
              "hidden": false,
              "doc": [
                " Disjunction. Lazy. Alias of :val:`General.Bool.O.(||)` "
              ],
              "type": "bool -> bool -> bool"
            },
            {
              "__class__": "value",
              "name": "(~-)",
              "hidden": false,
              "doc": [],
              "type": "int -> int"
            },
            {
              "__class__": "value",
              "name": "(~+)",
              "hidden": false,
              "doc": [],
              "type": "int -> int"
            },
            {
              "__class__": "value",
              "name": "(+)",
              "hidden": false,
              "doc": [],
              "type": "int -> int -> int"
            },
            {
              "__class__": "value",
              "name": "(-)",
              "hidden": false,
              "doc": [],
              "type": "int -> int -> int"
            },
            {
              "__class__": "value",
              "name": "(*)",
              "hidden": false,
              "doc": [],
              "type": "int -> int -> int"
            },
            {
              "__class__": "value",
              "name": "(/)",
              "hidden": false,
              "doc": [],
              "type": "int -> int -> int"
            },
            {
              "__class__": "value",
              "name": "(mod)",
              "hidden": false,
              "doc": [],
              "type": "int -> int -> int"
            },
            {
              "__class__": "value",
              "name": "(~-.)",
              "hidden": false,
              "doc": [],
              "type": "float -> float"
            },
            {
              "__class__": "value",
              "name": "(~+.)",
              "hidden": false,
              "doc": [],
              "type": "float -> float"
            },
            {
              "__class__": "value",
              "name": "(+.)",
              "hidden": false,
              "doc": [],
              "type": "float -> float -> float"
            },
            {
              "__class__": "value",
              "name": "(-.)",
              "hidden": false,
              "doc": [],
              "type": "float -> float -> float"
            },
            {
              "__class__": "value",
              "name": "(*.)",
              "hidden": false,
              "doc": [],
              "type": "float -> float -> float"
            },
            {
              "__class__": "value",
              "name": "(/.)",
              "hidden": false,
              "doc": [],
              "type": "float -> float -> float"
            },
            {
              "__class__": "value",
              "name": "(**)",
              "hidden": false,
              "doc": [],
              "type": "float -> float -> float"
            },
            {
              "__class__": "value",
              "name": "(@@)",
              "hidden": false,
              "doc": [],
              "type": "('a -> 'b) -> 'a -> 'b"
            },
            {
              "__class__": "value",
              "name": "(|>)",
              "hidden": false,
              "doc": [],
              "type": "'a -> ('a -> 'b) -> 'b"
            },
            {
              "__class__": "value",
              "name": "(%)",
              "hidden": false,
              "doc": [],
              "type": "('a -> 'b) -> ('c -> 'a) -> 'c -> 'b"
            },
            {
              "__class__": "value",
              "name": "ref",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a OCamlStandard.Pervasives.ref"
            },
            {
              "__class__": "value",
              "name": "(:=)",
              "hidden": false,
              "doc": [],
              "type": "'a OCamlStandard.Pervasives.ref -> 'a -> unit"
            },
            {
              "__class__": "value",
              "name": "(!)",
              "hidden": false,
              "doc": [],
              "type": "'a OCamlStandard.Pervasives.ref -> 'a"
            },
            {
              "__class__": "value",
              "name": "(=)",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "(<>)",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "(<)",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "(<=)",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "(>=)",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "(>)",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a -> bool"
            },
            {
              "__class__": "value",
              "name": "ignore",
              "hidden": false,
              "doc": [],
              "type": "'a -> unit"
            },
            {
              "__class__": "value",
              "name": "identity",
              "hidden": false,
              "doc": [],
              "type": "'a -> 'a"
            },
            {
              "__class__": "value",
              "name": "(@)",
              "hidden": false,
              "doc": [],
              "type": "'a list -> 'a list -> 'a list"
            },
            {
              "__class__": "value",
              "name": "(^)",
              "hidden": false,
              "doc": [],
              "type": "string -> string -> string"
            }
          ]
        }
      ]
    }
  ]
}

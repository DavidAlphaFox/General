module Make5(M: sig
  type ('a, 'b, 'c, 'd, 'e) t
  val equal: ('a, 'b, 'c, 'd, 'e) t -> ('a, 'b, 'c, 'd, 'e) t -> equal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool
  val different: ('a, 'b, 'c, 'd, 'e) t -> ('a, 'b, 'c, 'd, 'e) t -> equal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool
  val repr: ('a, 'b, 'c, 'd, 'e) t -> repr_a:('a -> bytes) -> repr_b:('b -> bytes) -> repr_c:('c -> bytes) -> repr_d:('d -> bytes) -> repr_e:('e -> bytes) -> bytes
end)(E: sig
  module A: General.Traits.Equatable.Tests.Examples.Element
  module B: General.Traits.Equatable.Tests.Examples.Element
  module C: General.Traits.Equatable.Tests.Examples.Element
  module D: General.Traits.Equatable.Tests.Examples.Element
  module E: General.Traits.Equatable.Tests.Examples.Element
  val equal: (A.t, B.t, C.t, D.t, E.t) M.t list list
  val different: ((A.t, B.t, C.t, D.t, E.t) M.t * (A.t, B.t, C.t, D.t, E.t) M.t) list
end): sig
  val test: General.Testing.Test.t
end
